//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int IPD;                           // Offset:    0 Size:     4 [unused]
//   float Divergence;                  // Offset:    4 Size:     4 [unused]
//   float2 ZPD_Separation;             // Offset:    8 Size:     8 [unused]
//   int Auto_Balance_Ex;               // Offset:   16 Size:     4 [unused]
//   int ZPD_Boundary;                  // Offset:   20 Size:     4 [unused]
//   float2 ZPD_Boundary_n_Fade;        // Offset:   24 Size:     8 [unused]
//   int View_Mode;                     // Offset:   32 Size:     4 [unused]
//   int Custom_Sidebars;               // Offset:   36 Size:     4 [unused]
//   float Max_Depth;                   // Offset:   40 Size:     4 [unused]
//   int Performance_Level;             // Offset:   44 Size:     4 [unused]
//   float DLSS_FSR_Offset;             // Offset:   48 Size:     4 [unused]
//   int Depth_Map;                     // Offset:   52 Size:     4 [unused]
//   float Depth_Map_Adjust;            // Offset:   56 Size:     4 [unused]
//   float Offset;                      // Offset:   60 Size:     4 [unused]
//   float Auto_Depth_Adjust;           // Offset:   64 Size:     4 [unused]
//   bool Depth_Map_View;               // Offset:   68 Size:     4 [unused]
//   bool Depth_Detection;              // Offset:   72 Size:     4 [unused]
//   bool Depth_Map_Flip;               // Offset:   76 Size:     4 [unused]
//   int WP;                            // Offset:   80 Size:     4 [unused]
//   float4 Weapon_Adjust;              // Offset:   96 Size:    16 [unused]
//   float3 WZPD_and_WND;               // Offset:  112 Size:    12 [unused]
//   int FPSDFIO;                       // Offset:  124 Size:     4 [unused]
//   int3 Eye_Fade_Reduction_n_Power;   // Offset:  128 Size:    12 [unused]
//   float Weapon_ZPD_Boundary;         // Offset:  140 Size:     4 [unused]
//   int Cursor_Type;                   // Offset:  144 Size:     4 [unused]
//   int2 Cursor_SC;                    // Offset:  148 Size:     8 [unused]
//   bool Cursor_Lock;                  // Offset:  156 Size:     4 [unused]
//   int Barrel_Distortion;             // Offset:  160 Size:     4
//   float FoV;                         // Offset:  164 Size:     4 [unused]
//   float3 Polynomial_Colors_K1;       // Offset:  176 Size:    12
//   float3 Polynomial_Colors_K2;       // Offset:  192 Size:    12
//   bool Theater_Mode;                 // Offset:  204 Size:     4
//   float Blinders;                    // Offset:  208 Size:     4
//   float Adjust_Vignette;             // Offset:  212 Size:     4 [unused]
//   float Sharpen_Power;               // Offset:  216 Size:     4 [unused]
//   float Saturation;                  // Offset:  220 Size:     4 [unused]
//   bool NCAOC;                        // Offset:  224 Size:     4
//   bool Cancel_Depth;                 // Offset:  228 Size:     4 [unused]
//   bool Mask_Cycle;                   // Offset:  232 Size:     4 [unused]
//   bool Text_Info;                    // Offset:  236 Size:     4
//   bool CLK;                          // Offset:  240 Size:     4 [unused]
//   bool Trigger_Fade_A;               // Offset:  244 Size:     4 [unused]
//   bool Trigger_Fade_B;               // Offset:  248 Size:     4 [unused]
//   bool overlay_open;                 // Offset:  252 Size:     4
//   float2 Mousecoords;                // Offset:  256 Size:     8 [unused]
//   float frametime;                   // Offset:  264 Size:     4
//   float timer;                       // Offset:  268 Size:     4
//   bool DepthCheck;                   // Offset:  272 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__LeftTex                      texture  float4          2d            t12      1 
// __V__RightTex                     texture  float4          2d            t14      1 
// __V__texLumVR                     texture  float4          2d            t16      1 
// __V__texOtherVR                   texture  float4          2d            t18      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[17], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 7
if_z cb0[10].x
  mul r0.xy, v1.xyxx, l(2.000000, 1.000000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t12.xyzw, s1
  sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t18.xyzw, s2, l(11.000000)
  mul r0.y, cb0[13].x, l(25.000000)
  sample_indexable(texture2d)(float,float,float,float) r0.z, l(0.000000, 0.583000, 0.000000, 0.000000), t16.xyzw, s2
  mad r0.x, r0.x, r0.y, -r0.z
  mul r0.w, cb0[16].z, l(-0.002286)
  exp r0.w, r0.w
  add r0.w, -r0.w, l(1.000000)
  mad_sat r0.x, r0.x, r0.w, r0.z
  mad r1.w, r0.x, l(-2.000000), l(3.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, r1.w
  mad r0.x, r0.x, l(-0.750000), l(1.000000)
  mul r1.w, r0.x, l(0.250000)
  mad r2.xy, -v1.xyxx, l(2.000000, 1.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  dp2 r2.x, r2.xyxx, r2.xyxx
  sqrt r2.x, r2.x
  lt r2.y, l(0.000000), cb0[13].x
  mad r0.x, r0.x, l(0.750000), -r2.x
  div_sat r0.x, r0.x, r1.w
  add r0.x, -r0.x, l(1.000000)
  and r0.x, r0.x, r2.y
  mad r1.xyz, r0.xxxx, -r1.xyzx, r1.xyzx
  mad r2.xz, v1.xxyx, l(2.000000, 0.000000, 1.000000, 0.000000), l(-1.000000, 0.000000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xzxx, t14.xyzw, s1
  sample_l_indexable(texture2d)(float,float,float,float) r0.x, r2.xzxx, t18.xyzw, s2, l(11.000000)
  mad r0.x, r0.x, r0.y, -r0.z
  mad_sat r0.x, r0.x, r0.w, r0.z
  mad r0.y, r0.x, l(-2.000000), l(3.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, r0.y
  mad r0.x, r0.x, l(-0.750000), l(1.000000)
  mul r0.y, r0.x, l(0.250000)
  add r0.zw, -r2.xxxz, l(0.000000, 0.000000, 0.500000, 0.500000)
  dp2 r0.z, r0.zwzz, r0.zwzz
  sqrt r0.z, r0.z
  mad r0.x, r0.x, l(0.750000), -r0.z
  div_sat r0.x, r0.x, r0.y
  add r0.x, -r0.x, l(1.000000)
  and r0.x, r0.x, r2.y
  mad r0.xyz, r0.xxxx, -r3.xyzx, r3.xyzx
else 
  mad r2.xyzw, v1.xyxy, l(4.000000, 2.000000, 4.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
  mul r2.xyzw, r2.xyzw, l(0.830000, 0.830000, 0.800000, 0.800000)
  movc r2.xy, cb0[12].wwww, r2.zwzz, r2.xyxx
  dp2 r0.w, r2.xyxx, r2.xyxx
  mul r1.w, r0.w, r0.w
  mad r3.xyz, cb0[11].xyzx, r0.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r3.xyz, cb0[12].xyzx, r1.wwww, r3.xyzx
  mad r4.xyzw, r2.xyxy, r3.xxyy, l(1.000000, 1.000000, 1.000000, 1.000000)
  mad r5.xyzw, r4.xyxy, l(0.225000, 0.500000, 0.500000, 0.187500), l(-0.225000, -0.500000, -0.500000, -0.187500)
  dp2 r0.w, r5.xyxx, r5.xyxx
  sqrt r0.w, r0.w
  lt r0.w, l(0.500000), r0.w
  dp2 r1.w, r5.zwzz, r5.zwzz
  sqrt r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  mad r5.xyzw, r4.xyzw, l(0.468750, 0.500000, 0.225000, 0.500000), l(-0.468750, -0.500000, -0.225000, -0.500000)
  dp2 r2.z, r5.xyxx, r5.xyxx
  sqrt r2.z, r2.z
  lt r2.z, l(0.625000), r2.z
  or r1.w, r1.w, r2.z
  or r0.w, r0.w, r1.w
  mul r2.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
  movc r3.xy, r0.wwww, l(1000.000000,1000.000000,0,0), r2.zwzz
  movc r2.zw, cb0[12].wwww, r2.zzzw, r3.xxxy
  dp2 r0.w, r5.zwzz, r5.zwzz
  sqrt r0.w, r0.w
  lt r0.w, l(0.500000), r0.w
  mul r3.xy, r4.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r4.xyzw, r4.zwzw, l(0.500000, 0.187500, 0.468750, 0.500000), l(-0.500000, -0.187500, -0.468750, -0.500000)
  dp2 r1.w, r4.xyxx, r4.xyxx
  sqrt r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  dp2 r3.w, r4.zwzz, r4.zwzz
  sqrt r3.w, r3.w
  lt r3.w, l(0.625000), r3.w
  or r1.w, r1.w, r3.w
  or r0.w, r0.w, r1.w
  movc r4.xy, r0.wwww, l(1000.000000,1000.000000,0,0), r3.xyxx
  movc r3.xy, cb0[12].wwww, r3.xyxx, r4.xyxx
  mad r2.xy, r2.xyxx, r3.zzzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r3.zw, r2.yyyx, l(0.000000, 0.000000, 0.500000, 0.500000)
  mad r4.xyzw, r2.xyxy, l(0.225000, 0.500000, 0.500000, 0.187500), l(-0.225000, -0.500000, -0.500000, -0.187500)
  dp2 r0.w, r4.xyxx, r4.xyxx
  sqrt r0.w, r0.w
  lt r0.w, l(0.500000), r0.w
  dp2 r1.w, r4.zwzz, r4.zwzz
  sqrt r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  mad r2.xy, r2.xyxx, l(0.468750, 0.500000, 0.000000, 0.000000), l(-0.468750, -0.500000, 0.000000, 0.000000)
  dp2 r2.x, r2.xyxx, r2.xyxx
  sqrt r2.x, r2.x
  lt r2.x, l(0.625000), r2.x
  or r1.w, r1.w, r2.x
  or r0.w, r0.w, r1.w
  movc r2.xy, r0.wwww, l(1000.000000,1000.000000,0,0), r3.wzww
  movc r2.xy, cb0[12].wwww, r3.wzww, r2.xyxx
  sample_indexable(texture2d)(float,float,float,float) r0.w, r2.zwzz, t12.yzwx, s1
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t18.yzwx, s2, l(11.000000)
  mul r3.z, cb0[13].x, l(25.000000)
  sample_indexable(texture2d)(float,float,float,float) r3.w, l(0.000000, 0.583000, 0.000000, 0.000000), t16.xywz, s2
  mad r1.w, r1.w, r3.z, -r3.w
  mul r4.x, cb0[16].z, l(-0.002286)
  exp r4.x, r4.x
  add r4.x, -r4.x, l(1.000000)
  mad_sat r1.w, r1.w, r4.x, r3.w
  mad r4.y, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r4.y
  mad r1.w, r1.w, l(-0.750000), l(1.000000)
  mul r4.y, r1.w, l(0.250000)
  add r2.zw, -r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  dp2 r2.z, r2.zwzz, r2.zwzz
  sqrt r2.z, r2.z
  lt r2.w, l(0.000000), cb0[13].x
  mad r1.w, r1.w, l(0.750000), -r2.z
  div_sat r1.w, r1.w, r4.y
  add r1.w, -r1.w, l(1.000000)
  and r1.w, r1.w, r2.w
  mad r1.x, r1.w, -r0.w, r0.w
  sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t12.xzwy, s1
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t18.yzwx, s2, l(11.000000)
  mad r1.w, r1.w, r3.z, -r3.w
  mad_sat r1.w, r1.w, r4.x, r3.w
  mad r2.z, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.z
  mad r1.w, r1.w, l(-0.750000), l(1.000000)
  mul r2.z, r1.w, l(0.250000)
  add r3.xy, -r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp2 r3.x, r3.xyxx, r3.xyxx
  sqrt r3.x, r3.x
  mad r1.w, r1.w, l(0.750000), -r3.x
  div_sat r1.w, r1.w, r2.z
  add r1.w, -r1.w, l(1.000000)
  and r1.w, r1.w, r2.w
  mad r1.y, r1.w, -r0.w, r0.w
  sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t12.xywz, s1
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t18.yzwx, s2, l(11.000000)
  mad r1.w, r1.w, r3.z, -r3.w
  mad_sat r1.w, r1.w, r4.x, r3.w
  mad r2.z, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.z
  mad r1.w, r1.w, l(-0.750000), l(1.000000)
  mul r2.z, r1.w, l(0.250000)
  add r2.xy, -r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp2 r2.x, r2.xyxx, r2.xyxx
  sqrt r2.x, r2.x
  mad r1.w, r1.w, l(0.750000), -r2.x
  div_sat r1.w, r1.w, r2.z
  add r1.w, -r1.w, l(1.000000)
  and r1.w, r1.w, r2.w
  mad r1.z, r1.w, -r0.w, r0.w
  mad r5.xyzw, v1.xyxy, l(2.000000, 1.000000, 2.000000, 1.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
  mad r5.xyzw, r5.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
  mul r5.xyzw, r5.xyzw, l(0.830000, 0.830000, 0.800000, 0.800000)
  movc r2.xy, cb0[12].wwww, r5.zwzz, r5.xyxx
  dp2 r0.w, r2.xyxx, r2.xyxx
  mul r1.w, r0.w, r0.w
  mad r4.yzw, cb0[11].xxyz, r0.wwww, l(0.000000, 1.000000, 1.000000, 1.000000)
  mad r4.yzw, cb0[12].xxyz, r1.wwww, r4.yyzw
  mad r5.xyzw, r2.xyxy, r4.yyzz, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r3.xy, r5.yxyy, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r6.xyzw, r5.xyxy, l(0.225000, 0.500000, 0.500000, 0.187500), l(-0.225000, -0.500000, -0.500000, -0.187500)
  dp2 r0.w, r6.xyxx, r6.xyxx
  sqrt r0.w, r0.w
  lt r0.w, l(0.500000), r0.w
  dp2 r1.w, r6.zwzz, r6.zwzz
  sqrt r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  mad r6.xyzw, r5.xyzw, l(0.468750, 0.500000, 0.225000, 0.500000), l(-0.468750, -0.500000, -0.225000, -0.500000)
  dp2 r2.z, r6.xyxx, r6.xyxx
  sqrt r2.z, r2.z
  lt r2.z, l(0.625000), r2.z
  or r1.w, r1.w, r2.z
  or r0.w, r0.w, r1.w
  movc r4.yz, r0.wwww, l(0,1000.000000,1000.000000,0), r3.yyxy
  movc r3.xy, cb0[12].wwww, r3.yxyy, r4.yzyy
  dp2 r0.w, r6.zwzz, r6.zwzz
  sqrt r0.w, r0.w
  lt r0.w, l(0.500000), r0.w
  mad r6.xyzw, r5.zwzw, l(0.500000, 0.187500, 0.468750, 0.500000), l(-0.500000, -0.187500, -0.468750, -0.500000)
  dp2 r1.w, r6.xyxx, r6.xyxx
  sqrt r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  dp2 r2.z, r6.zwzz, r6.zwzz
  sqrt r2.z, r2.z
  lt r2.z, l(0.625000), r2.z
  or r1.w, r1.w, r2.z
  or r0.w, r0.w, r1.w
  mul r4.yz, r5.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
  movc r5.xy, r0.wwww, l(1000.000000,1000.000000,0,0), r4.yzyy
  movc r4.yz, cb0[12].wwww, r4.yyzy, r5.xxyx
  mad r5.xy, r2.xyxx, r4.wwww, l(1.000000, 1.000000, 0.000000, 0.000000)
  mad r6.xyzw, r5.xyxy, l(0.225000, 0.500000, 0.500000, 0.187500), l(-0.225000, -0.500000, -0.500000, -0.187500)
  dp2 r0.w, r6.xyxx, r6.xyxx
  sqrt r0.w, r0.w
  lt r0.w, l(0.500000), r0.w
  dp2 r1.w, r6.zwzz, r6.zwzz
  sqrt r1.w, r1.w
  lt r1.w, l(0.500000), r1.w
  mad r2.xy, r5.xyxx, l(0.468750, 0.500000, 0.000000, 0.000000), l(-0.468750, -0.500000, 0.000000, 0.000000)
  dp2 r2.x, r2.xyxx, r2.xyxx
  sqrt r2.x, r2.x
  lt r2.x, l(0.625000), r2.x
  or r1.w, r1.w, r2.x
  or r0.w, r0.w, r1.w
  mul r5.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
  movc r2.xy, r0.wwww, l(1000.000000,1000.000000,0,0), r5.zwzz
  mul r5.xy, r5.xwxx, l(0.500000, 1.000000, 0.000000, 0.000000)
  movc r2.xy, cb0[12].wwww, r5.xyxx, r2.xyxx
  sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t14.yzwx, s1
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t18.yzwx, s2, l(11.000000)
  mad r1.w, r1.w, r3.z, -r3.w
  mad_sat r1.w, r1.w, r4.x, r3.w
  mad r2.z, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.z
  mad r1.w, r1.w, l(-0.750000), l(1.000000)
  mul r2.z, r1.w, l(0.250000)
  add r3.xy, -r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp2 r3.x, r3.xyxx, r3.xyxx
  sqrt r3.x, r3.x
  mad r1.w, r1.w, l(0.750000), -r3.x
  div_sat r1.w, r1.w, r2.z
  add r1.w, -r1.w, l(1.000000)
  and r1.w, r1.w, r2.w
  mad r0.x, r1.w, -r0.w, r0.w
  sample_indexable(texture2d)(float,float,float,float) r0.w, r4.yzyy, t14.xzwy, s1
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.yzyy, t18.yzwx, s2, l(11.000000)
  mad r1.w, r1.w, r3.z, -r3.w
  mad_sat r1.w, r1.w, r4.x, r3.w
  mad r2.z, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.z
  mad r1.w, r1.w, l(-0.750000), l(1.000000)
  mul r2.z, r1.w, l(0.250000)
  add r3.xy, -r4.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp2 r3.x, r3.xyxx, r3.xyxx
  sqrt r3.x, r3.x
  mad r1.w, r1.w, l(0.750000), -r3.x
  div_sat r1.w, r1.w, r2.z
  add r1.w, -r1.w, l(1.000000)
  and r1.w, r1.w, r2.w
  mad r0.y, r1.w, -r0.w, r0.w
  sample_indexable(texture2d)(float,float,float,float) r0.w, r2.xyxx, t14.xywz, s1
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t18.yzwx, s2, l(11.000000)
  mad r1.w, r1.w, r3.z, -r3.w
  mad_sat r1.w, r1.w, r4.x, r3.w
  mad r2.z, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.z
  mad r1.w, r1.w, l(-0.750000), l(1.000000)
  mul r2.z, r1.w, l(0.250000)
  add r2.xy, -r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp2 r2.x, r2.xyxx, r2.xyxx
  sqrt r2.x, r2.x
  mad r1.w, r1.w, l(0.750000), -r2.x
  div_sat r1.w, r1.w, r2.z
  add r1.w, -r1.w, l(1.000000)
  and r1.w, r1.w, r2.w
  mad r0.z, r1.w, -r0.w, r0.w
endif 
ieq r0.w, cb0[15].w, l(0)
ine r2.xy, cb0[14].xwxx, l(0, 0, 0, 0)
or r0.w, r0.w, r2.x
if_nz r0.w
  ieq r0.w, cb0[10].x, l(1)
  lt r1.w, v1.x, l(0.500000)
  mad r3.xyzw, v1.xyxy, l(2.000000, 1.137500, 2.000000, 1.137500), l(-0.500000, -0.568750, -1.500000, -0.568750)
  dp2 r2.x, r3.xyxx, r3.xyxx
  sqrt r2.x, r2.x
  add r2.xz, r2.xxxx, l(-0.550000, 0.000000, -0.547000, 0.000000)
  mul_sat r2.xz, r2.xxzx, l(0.400000, 0.000000, 333.330994, 0.000000)
  mad r3.xy, r2.xzxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
  mul r2.xz, r2.xxzx, r2.xxzx
  mad r2.x, r3.x, r2.x, l(1.000000)
  mad r2.x, -r3.y, r2.z, r2.x
  mul r2.xzw, r1.xxyz, r2.xxxx
  dp2 r3.x, r3.zwzz, r3.zwzz
  sqrt r3.x, r3.x
  add r3.xy, r3.xxxx, l(-0.550000, -0.547000, 0.000000, 0.000000)
  mul_sat r3.xy, r3.xyxx, l(0.400000, 333.330994, 0.000000, 0.000000)
  mad r3.zw, r3.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
  mul r3.xy, r3.xyxx, r3.xyxx
  mad r3.x, r3.z, r3.x, l(1.000000)
  mad r3.x, -r3.w, r3.y, r3.x
  mul r3.xyz, r0.xyzx, r3.xxxx
  movc r2.xzw, r1.wwww, r2.xxzw, r3.xxyz
  movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
  movc r0.xyz, r0.wwww, r2.xzwx, r0.xyzx
else 
  mul r1.xy, v1.xyxx, l(3440.000000, 1440.000000, 0.000000, 0.000000)
  round_ni r1.xy, r1.xyxx
  add r0.w, r1.y, r1.x
  mul r1.x, r0.w, l(0.500000)
  frc r1.x, |r1.x|
  add r1.x, r1.x, r1.x
  lt r0.w, r0.w, l(0.000000)
  movc r0.w, r0.w, -r1.x, r1.x
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t14.xyzw, s1
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t18.yzwx, s2, l(11.000000)
  mul r1.w, r1.w, cb0[13].x
  sample_indexable(texture2d)(float,float,float,float) r2.x, l(0.000000, 0.583000, 0.000000, 0.000000), t16.zxyw, s2
  mad r1.w, r1.w, l(25.000000), -r2.x
  mul r2.z, cb0[16].z, l(-0.002286)
  exp r2.z, r2.z
  add r2.z, -r2.z, l(1.000000)
  mad_sat r1.w, r1.w, r2.z, r2.x
  mad r2.x, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r2.x
  mad r1.w, r1.w, l(-0.750000), l(1.000000)
  mul r2.x, r1.w, l(0.250000)
  add r2.zw, -v1.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
  dp2 r2.z, r2.zwzz, r2.zwzz
  sqrt r2.z, r2.z
  lt r2.w, l(0.000000), cb0[13].x
  mad r1.w, r1.w, l(0.750000), -r2.z
  div_sat r1.w, r1.w, r2.x
  add r1.w, -r1.w, l(1.000000)
  and r1.w, r1.w, r2.w
  mad r1.xyz, r1.wwww, -r1.xyzx, r1.xyzx
  sample_indexable(texture2d)(float,float,float,float) r2.xzw, v1.xyxx, t12.xwyz, s1
  mad r2.xzw, r1.wwww, -r2.xxzw, r2.xxzw
  ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), r0.w
  movc r0.xyz, r0.wwww, r1.xyzx, r2.xzwx
endif 
add r1.xy, -v1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r3.xyzw, -r1.xyxy, l(3440.000000, 1440.000000, 3440.000000, 1440.000000), l(1.000000, 1440.000000, 3.000000, 1440.000000)
lt r3.xyzw, |r3.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
and r1.zw, r3.yyyw, r3.xxxz
movc r3.xyzw, cb0[15].wwww, l(1.000000,0,0,0), l(0,0,1.000000,0)
movc r0.xyz, r1.zzzz, r3.xyyx, r0.xyzx
movc r0.xyz, r1.wwww, r3.zwwz, r0.xyzx
mad r1.xy, -r1.xyxx, l(3440.000000, 1440.000000, 0.000000, 0.000000), l(5.000000, 1440.000000, 0.000000, 0.000000)
lt r1.xy, |r1.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
and r0.w, r1.y, r1.x
movc r0.xyz, r0.wwww, r3.xyyx, r0.xyzx
ge r0.w, l(30000.000000), cb0[16].w
or r0.w, r2.y, r0.w
if_nz r0.w
  mul r0.w, cb0[16].w, l(0.003750)
  sincos r0.w, null, r0.w
  max r0.w, r0.w, l(0.000000)
  mad r1.x, r0.w, l(-2.000000), l(3.000000)
  mul r0.w, r0.w, r0.w
  mul r0.w, r0.w, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.009000, 0.982000, -0.009000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(638361.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.020000, 0.982000, -0.020000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(432534.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  add r1.x, r1.y, r1.x
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.042000, 0.982000, -0.042000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(498033.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  add r1.x, r1.y, r1.x
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.053000, 0.982000, -0.053000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(497497.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  add r1.x, r1.y, r1.x
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.064000, 0.982000, -0.064000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(432534.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  add r1.x, r1.y, r1.x
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.075000, 0.982000, -0.075000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(988945.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  add r1.x, r1.y, r1.x
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.086000, 0.982000, -0.086000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(1000527.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  add r1.x, r1.y, r1.x
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.097000, 0.982000, -0.097000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(69919.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  add r1.x, r1.y, r1.x
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.108000, 0.982000, -0.108000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(988959.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  add r1.x, r1.y, r1.x
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.862000, 0.982000, -0.862000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r1.y, r2.y, r2.x
  ge r1.y, r1.y, l(0.000000)
  and r1.y, r1.y, l(0x3f800000)
  max r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(1.000000)
  movc r1.z, r1.z, l(-1.000000), l(-0.000000)
  add r1.y, r1.z, r1.y
  round_ni r1.zw, r2.wwwz
  mad r1.z, r1.z, l(4.000000), r1.w
  exp r1.z, -r1.z
  mul r1.z, r1.z, l(498071.000000)
  round_ni r1.z, r1.z
  mul r1.z, r1.z, l(0.500000)
  frc r1.z, r1.z
  dp2_sat r1.y, r1.zzzz, r1.yyyy
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.875750, 0.982000, -0.875750, 0.982000)
  mul r2.xyzw, r2.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(988959.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.889500, 0.982000, -0.889500, 0.982000)
  mul r2.xyzw, r2.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(498033.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.903250, 0.982000, -0.903250, 0.982000)
  mul r2.xyzw, r2.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(1000516.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.917000, 0.982000, -0.917000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(630681.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.930750, 0.982000, -0.930750, 0.982000)
  mul r2.xyzw, r2.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(431254.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.944500, 0.982000, -0.944500, 0.982000)
  mul r2.xyzw, r2.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(498071.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.955500, 0.982000, -0.955500, 0.982000)
  mul r2.xyzw, r2.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  add r1.w, r1.w, r1.w
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.963000, 0.982000, -0.963000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(152.380951, 106.666664, 609.523804, 533.333313)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(1000527.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.970500, 0.982000, -0.970500, 0.982000)
  mul r2.xyzw, r2.xyzw, l(152.380951, 106.666664, 609.523804, 533.333313)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(638361.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.978000, 0.982000, -0.978000, 0.982000)
  mul r2.xyzw, r2.xyzw, l(152.380951, 106.666664, 609.523804, 533.333313)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(988945.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r2.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.985500, 0.982000, -0.985500, 0.982000)
  mul r2.xyzw, r2.xyzw, l(152.380951, 106.666664, 609.523804, 533.333313)
  min r1.z, r2.y, r2.x
  ge r1.z, r1.z, l(0.000000)
  and r1.z, r1.z, l(0x3f800000)
  max r1.w, r2.y, r2.x
  ge r1.w, r1.w, l(1.000000)
  movc r1.w, r1.w, l(-1.000000), l(-0.000000)
  add r1.z, r1.w, r1.z
  round_ni r2.xy, r2.wzww
  mad r1.w, r2.x, l(4.000000), r2.y
  exp r1.w, -r1.w
  mul r1.w, r1.w, l(432534.000000)
  round_ni r1.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  frc r1.w, r1.w
  dp2_sat r1.z, r1.wwww, r1.zzzz
  add r1.y, r1.z, r1.y
  mad r0.w, r1.x, r0.w, r1.y
  mad r1.x, -v1.y, l(50.000000), l(49.849998)
  mad r1.x, r1.x, v1.y, l(-0.500000)
  ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), r0.w
  movc o0.xyz, r0.wwww, r1.xxxx, r0.xyzx
  ret 
else 
  mov o0.xyz, r0.xyzx
  ret 
endif 
ret 
// Approximately 739 instruction slots used
