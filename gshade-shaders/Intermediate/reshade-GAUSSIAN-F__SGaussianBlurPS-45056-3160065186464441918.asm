//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int gGaussEffect;                  // Offset:    0 Size:     4 [unused]
//   float gGaussStrength;              // Offset:    4 Size:     4 [unused]
//   bool gAddBloom;                    // Offset:    8 Size:     4 [unused]
//   float gBloomStrength;              // Offset:   12 Size:     4 [unused]
//   float gBloomIntensity;             // Offset:   16 Size:     4 [unused]
//   int gGaussBloomWarmth;             // Offset:   20 Size:     4 [unused]
//   int gN_PASSES;                     // Offset:   24 Size:     4
//   float gBloomHW;                    // Offset:   28 Size:     4 [unused]
//   float gBloomVW;                    // Offset:   32 Size:     4 [unused]
//   float gBloomSW;                    // Offset:   36 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
dcl_indexableTemp x0[5], 4
dcl_indexableTemp x1[5], 4
dcl_indexableTemp x2[5], 4
dcl_indexableTemp x3[5], 4
dcl_indexableTemp x4[5], 4
dcl_indexableTemp x5[5], 4
dcl_indexableTemp x6[5], 4
dcl_indexableTemp x7[5], 4
dcl_indexableTemp x8[5], 4
dcl_indexableTemp x9[5], 4
dcl_indexableTemp x10[5], 4
dcl_indexableTemp x11[5], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, l(0.168190, 0.168190, 0.168190, 0.168190)
ilt r1.x, l(1), cb0[1].z
mov r2.xyzw, r0.xyzw
mov r1.y, l(1)
mov r1.z, r1.x
loop 
  breakc_z r1.z
  mov x0[0].x, l(0)
  mov x0[1].x, l(1.434783)
  mov x0[2].x, l(3.347826)
  mov x0[3].x, l(5.260870)
  mov x0[4].x, l(7.173913)
  mov r1.w, x0[r1.y + 0].x
  mul r1.w, r1.w, cb0[2].y
  mul r3.x, r1.w, l(0.000291)
  mov x1[0].x, l(0)
  mov x1[1].x, l(1.434783)
  mov x1[2].x, l(3.347826)
  mov x1[3].x, l(5.260870)
  mov x1[4].x, l(7.173913)
  mov r1.w, x1[r1.y + 0].x
  mul r3.y, r1.w, l(0.000694)
  add r3.xy, r3.xyxx, v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t0.xyzw, s0, l(0.000000)
  mov x2[0].x, l(0.168190)
  mov x2[1].x, l(0.272770)
  mov x2[2].x, l(0.116901)
  mov x2[3].x, l(0.024068)
  mov x2[4].x, l(0.002111)
  mov r1.w, x2[r1.y + 0].x
  mad r3.xyzw, r3.xyzw, r1.wwww, r2.xyzw
  mov x3[0].x, l(0)
  mov x3[1].x, l(1.434783)
  mov x3[2].x, l(3.347826)
  mov x3[3].x, l(5.260870)
  mov x3[4].x, l(7.173913)
  mov r1.w, x3[r1.y + 0].x
  mul r1.w, r1.w, cb0[2].y
  mul r4.x, r1.w, l(0.000291)
  mov x4[0].x, l(0)
  mov x4[1].x, l(1.434783)
  mov x4[2].x, l(3.347826)
  mov x4[3].x, l(5.260870)
  mov x4[4].x, l(7.173913)
  mov r1.w, x4[r1.y + 0].x
  mul r4.y, r1.w, l(0.000694)
  add r4.xy, -r4.xyxx, v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
  mov x5[0].x, l(0.168190)
  mov x5[1].x, l(0.272770)
  mov x5[2].x, l(0.116901)
  mov x5[3].x, l(0.024068)
  mov x5[4].x, l(0.002111)
  mov r1.w, x5[r1.y + 0].x
  mad r3.xyzw, r4.xyzw, r1.wwww, r3.xyzw
  mov x6[0].x, l(0)
  mov x6[1].x, l(1.434783)
  mov x6[2].x, l(3.347826)
  mov x6[3].x, l(5.260870)
  mov x6[4].x, l(7.173913)
  mov r1.w, x6[r1.y + 0].x
  mul r1.w, -r1.w, cb0[2].y
  mul r4.x, r1.w, l(0.000291)
  mov x7[0].x, l(0)
  mov x7[1].x, l(1.434783)
  mov x7[2].x, l(3.347826)
  mov x7[3].x, l(5.260870)
  mov x7[4].x, l(7.173913)
  mov r1.w, x7[r1.y + 0].x
  mul r4.y, r1.w, l(0.000694)
  add r4.xy, r4.xyxx, v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
  mov x8[0].x, l(0.168190)
  mov x8[1].x, l(0.272770)
  mov x8[2].x, l(0.116901)
  mov x8[3].x, l(0.024068)
  mov x8[4].x, l(0.002111)
  mov r1.w, x8[r1.y + 0].x
  mad r3.xyzw, r4.xyzw, r1.wwww, r3.xyzw
  mov x9[0].x, l(0)
  mov x9[1].x, l(1.434783)
  mov x9[2].x, l(3.347826)
  mov x9[3].x, l(5.260870)
  mov x9[4].x, l(7.173913)
  mov r1.w, x9[r1.y + 0].x
  mul r1.w, r1.w, cb0[2].y
  mul r4.x, r1.w, l(0.000291)
  mov x10[0].x, l(0)
  mov x10[1].x, l(1.434783)
  mov x10[2].x, l(3.347826)
  mov x10[3].x, l(5.260870)
  mov x10[4].x, l(7.173913)
  mov r1.w, x10[r1.y + 0].x
  mul r4.y, r1.w, l(-0.000694)
  add r4.xy, r4.xyxx, v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.xyzw, s0, l(0.000000)
  mov x11[0].x, l(0.168190)
  mov x11[1].x, l(0.272770)
  mov x11[2].x, l(0.116901)
  mov x11[3].x, l(0.024068)
  mov x11[4].x, l(0.002111)
  mov r1.w, x11[r1.y + 0].x
  mad r2.xyzw, r4.xyzw, r1.wwww, r3.xyzw
  iadd r1.y, r1.y, l(1)
  ilt r1.z, r1.y, cb0[1].z
endloop 
mul o0.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
ret 
// Approximately 109 instruction slots used
