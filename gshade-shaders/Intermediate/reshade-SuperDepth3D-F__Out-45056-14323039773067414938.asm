//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Divergence;                  // Offset:    0 Size:     4
//   float2 ZPD_Separation;             // Offset:    4 Size:     8 [unused]
//   int Auto_Balance_Ex;               // Offset:   12 Size:     4 [unused]
//   int ZPD_Boundary;                  // Offset:   16 Size:     4 [unused]
//   float2 ZPD_Boundary_n_Fade;        // Offset:   20 Size:     8 [unused]
//   int View_Mode;                     // Offset:   28 Size:     4
//   int Custom_Sidebars;               // Offset:   32 Size:     4
//   float Max_Depth;                   // Offset:   36 Size:     4 [unused]
//   int Performance_Level;             // Offset:   40 Size:     4
//   float DLSS_FSR_Offset;             // Offset:   44 Size:     4 [unused]
//   int Depth_Map;                     // Offset:   48 Size:     4 [unused]
//   float Depth_Map_Adjust;            // Offset:   52 Size:     4 [unused]
//   float Offset;                      // Offset:   56 Size:     4 [unused]
//   float Auto_Depth_Adjust;           // Offset:   60 Size:     4 [unused]
//   int Depth_Detection;               // Offset:   64 Size:     4 [unused]
//   int Depth_Map_View;                // Offset:   68 Size:     4
//   bool Depth_Map_Flip;               // Offset:   72 Size:     4 [unused]
//   int WP;                            // Offset:   76 Size:     4
//   float4 Weapon_Adjust;              // Offset:   80 Size:    16 [unused]
//   float3 WZPD_and_WND;               // Offset:   96 Size:    12 [unused]
//   int FPSDFIO;                       // Offset:  108 Size:     4
//   int3 Eye_Fade_Reduction_n_Power;   // Offset:  112 Size:    12
//   float Weapon_ZPD_Boundary;         // Offset:  124 Size:     4 [unused]
//   int Stereoscopic_Mode;             // Offset:  128 Size:     4
//   float3 Interlace_Anaglyph_Calibrate;// Offset:  132 Size:    12
//   int Scaling_Support;               // Offset:  144 Size:     4
//   int Perspective;                   // Offset:  148 Size:     4
//   bool Eye_Swap;                     // Offset:  152 Size:     4
//   int Cursor_Type;                   // Offset:  156 Size:     4
//   int2 Cursor_SC;                    // Offset:  160 Size:     8
//   bool Cursor_Lock;                  // Offset:  168 Size:     4
//   bool Cancel_Depth;                 // Offset:  172 Size:     4 [unused]
//   bool Mask_Cycle;                   // Offset:  176 Size:     4 [unused]
//   bool Text_Info;                    // Offset:  180 Size:     4
//   bool CLK;                          // Offset:  184 Size:     4
//   bool Trigger_Fade_A;               // Offset:  188 Size:     4
//   bool Trigger_Fade_B;               // Offset:  192 Size:     4
//   float2 Mousecoords;                // Offset:  196 Size:     8
//   float frametime;                   // Offset:  204 Size:     4
//   float timer;                       // Offset:  208 Size:     4
//   float3 motion[2];                  // Offset:  224 Size:    28
//   bool DepthCheck;                   // Offset:  252 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __s2                              sampler      NA          NA             s2      1 
// __s3                              sampler      NA          NA             s3      1 
// __s4                              sampler      NA          NA             s4      1 
// __V__BackBufferTex                texture  float4          2d             t2      1 
// __V__texDMN                       texture  float4          2d             t4      1 
// __V__texzBufferN_P                texture  float4          2d             t6      1 
// __V__texzBufferN_L                texture  float4          2d             t8      1 
// __V__texLumN                      texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[16], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 17
dcl_indexableTemp x0[2], 4
dcl_indexableTemp x1[2], 4
dcl_indexableTemp x2[2], 4
dcl_indexableTemp x3[2], 4
dcl_indexableTemp x4[11], 4
dcl_indexableTemp x5[11], 4
dcl_indexableTemp x6[11], 4
dcl_indexableTemp x7[11], 4
dcl_indexableTemp x8[9], 4
dcl_indexableTemp x9[4], 4
mov x0[0].x, l(0.500000)
mov x0[1].x, l(1.000000)
mov x1[0].z, l(0.679000)
mov x1[1].z, l(1.425000)
mov x2[0].z, l(0.679000)
mov x2[1].z, l(1.425000)
mov x3[0].x, l(0.500000)
mov x3[1].x, l(1.000000)
ieq r0.xyz, cb0[8].xxxx, l(2, 3, 6, 0)
if_z cb0[8].x
  mul r1.xy, v1.xyxx, l(2.000000, 1.000000, 0.000000, 0.000000)
  mad r1.zw, v1.xxxy, l(0.000000, 0.000000, 2.000000, 1.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
  mov r2.yw, l(0,0,0,0)
  mov r3.yw, l(0,0,0,0)
else 
  ieq r4.xy, cb0[8].xxxx, l(1, 6, 0, 0)
  mad r5.xyzw, v1.xyxy, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, 0.000000, 0.000000, -1.000000)
  and r5.xyzw, r4.yyyy, r5.xyzw
  mad r6.xyzw, v1.xyxy, l(2.000000, 2.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  movc r6.xyzw, r4.yyyy, r6.xyzw, v1.xyxy
  mul r4.yz, v1.xxyx, l(0.000000, 1.000000, 2.000000, 0.000000)
  movc r1.xy, r4.xxxx, r4.yzyy, r6.xyxx
  mad r4.yz, v1.xxyx, l(0.000000, 1.000000, 2.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
  movc r1.zw, r4.xxxx, r4.yyyz, r6.zzzw
  movc r3.xyzw, r4.xxxx, l(0,0,0,0), r5.xwyz
  mov r2.yw, r3.zzzx
endif 
itof r0.w, cb0[9].y
mul r4.z, r0.w, l(0.000093)
mov r4.w, l(0)
add r5.zw, r1.yyyx, r4.wwwz
add r1.zw, r1.wwwz, -r4.wwwz
movc r4.x, cb0[9].z, -cb0[0].x, cb0[0].x
sample_indexable(texture2d)(float,float,float,float) r0.w, l(0.000000, 0.083000, 0.000000, 0.000000), t10.xywz, s3
ieq r6.xyzw, cb0[7].zyyx, l(2, 1, 2, 1)
movc r4.w, cb0[11].w, l(1.000000), l(0)
ieq r7.xy, cb0[6].wwww, l(1, 2, 0, 0)
movc r7.z, cb0[12].x, l(1.000000), l(0)
and r7.y, r7.z, r7.y
movc r4.w, r7.x, r4.w, r7.y
add r4.w, -r0.w, r4.w
movc r6.xz, r6.xxzx, l(156.250000,0,0.300000,0), l(437.500000,0,0.100000,0)
movc r6.x, cb0[7].z, r6.x, l(718.750000)
div r6.x, -cb0[12].w, r6.x
mul r6.x, r6.x, l(1.442695)
exp r6.x, r6.x
add r6.x, -r6.x, l(1.000000)
mad r0.w, r4.w, r6.x, r0.w
add_sat r0.w, -r0.w, l(1.000000)
mad r4.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r4.w
movc r4.w, r6.y, l(0.200000), r6.z
ige r6.x, cb0[6].w, l(1)
mul r6.y, r4.w, r4.x
mad r4.w, -r4.x, r4.w, r4.x
mad r0.w, r0.w, r4.w, r6.y
movc r4.y, r6.x, r0.w, r4.x
ieq r0.w, cb0[7].x, l(2)
movc r4.z, r0.w, r4.x, r4.y
movc r4.xyzw, r6.wwww, r4.xxyy, r4.yyzz
mul r6.xy, r4.ywyy, l(-0.000187, 0.000187, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r6.zw, r5.wzww, t6.zwyx, s4, l(0.000000)
mov_sat r6.z, r6.z
mad r0.w, r6.z, l(-2.000000), l(3.000000)
mul r6.z, r6.z, r6.z
mul r0.w, r0.w, r6.z
mov r6.z, cb0[2].z
mov r7.x, x0[r6.z + 0].x
mul r7.yz, r5.wwzw, l(0.000000, 5360.000000, 1440.000000, 0.000000)
round_ni r7.yz, r7.yyzy
ieq r8.xyzw, cb0[1].wwww, l(1, 2, 3, 4)
if_nz r8.x
  mul r7.w, r7.z, r7.y
  mul r9.x, r7.w, l(0.500000)
  frc r9.x, |r9.x|
  add r9.x, r9.x, r9.x
  lt r7.w, r7.w, l(0.000000)
  movc r7.w, r7.w, -r9.x, r9.x
  add r9.x, r7.z, r7.y
  mul r9.y, r9.x, l(0.500000)
  frc r9.y, |r9.y|
  add r9.y, r9.y, r9.y
  lt r9.x, r9.x, l(0.000000)
  movc r9.x, r9.x, -r9.y, r9.y
  ne r9.x, l(0.000000, 0.000000, 0.000000, 0.000000), r9.x
  movc r9.x, r9.x, l(1.020000), l(1.025000)
  ne r7.w, l(0.000000, 0.000000, 0.000000, 0.000000), r7.w
  mov r9.y, x1[r6.z + 0].z
  movc r7.w, r7.w, r9.y, r9.x
else 
  mov r7.w, r7.x
endif 
if_nz r8.y
  mov r7.w, x2[r6.z + 0].z
endif 
if_nz r8.z
  mov r7.w, x3[r6.z + 0].x
endif 
add r7.y, r7.z, r7.y
mul r7.z, r7.y, l(0.500000)
frc r7.z, |r7.z|
add r7.z, r7.z, r7.z
lt r7.y, r7.y, l(0.000000)
movc r7.y, r7.y, -r7.z, r7.z
ne r7.y, l(0.000000, 0.000000, 0.000000, 0.000000), r7.y
ge r9.xy, r0.wwww, l(0.999000, 0.875000, 0.000000, 0.000000)
movc r7.yz, r7.yyyy, l(0,0.500000,1.020000,0), l(0,1.025000,0.500000,0)
movc r7.z, r9.y, r7.z, r7.y
movc r7.y, r9.x, r7.y, r7.z
movc r7.y, r8.w, r7.y, r7.w
mul r7.y, |r4.y|, r7.y
lt r7.z, l(0.998000), r0.w
and r7.z, r7.z, l(0x3f800000)
add r9.xy, |r4.ywyy|, l(-20.000000, -20.000000, 0.000000, 0.000000)
mad r7.z, r7.z, r9.x, l(20.000000)
movc r7.z, cb0[2].z, l(20.000000), r7.z
max r7.y, r7.z, r7.y
min r7.y, r7.y, l(200.000000)
rcp r7.y, r7.y
ilt r7.z, l(0), cb0[1].w
lt r7.w, -r4.y, l(0.000000)
movc r9.x, r7.w, l(-75.000000), l(75.000000)
mul r9.z, r6.x, r7.y
sample_l_indexable(texture2d)(float,float,float,float) r9.w, r5.wzww, t8.yzwx, s3, l(0.000000)
ieq r10.x, cb0[1].w, l(0)
or r10.x, r8.z, r10.x
movc r6.w, r10.x, r6.w, r9.w
movc r10.yz, r7.zzzz, l(0,0.050000,0,0), l(0,0.025000,1.000000,0)
mul r9.x, r9.x, r10.y
lt r9.w, l(0.000000), r6.w
mul r10.w, r10.z, r9.x
mov r11.x, cb0[1].w
mov r11.y, r5.w
mov r11.z, r6.w
mov r11.w, l(0)
mov r12.x, r9.w
loop 
  breakc_z r12.x
  mad r12.y, -r6.x, r7.y, r11.y
  mad r5.y, -r10.w, l(0.000373), r12.y
  sample_l_indexable(texture2d)(float,float,float,float) r12.z, r5.yzyy, t8.yzxw, s3, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r12.w, r5.yzyy, t6.yzwx, s4, l(0.000000)
  ieq r13.xy, r11.xxxx, l(0, 3, 0, 0)
  or r13.x, r13.y, r13.x
  movc r12.z, r13.x, r12.w, r12.z
  add r12.w, r7.y, r11.w
  lt r13.x, r12.w, r12.z
  mov r11.yzw, r12.yyzw
  mov r12.x, r13.x
  continue 
endloop 
mad r6.x, r6.x, r7.y, r11.y
sample_l_indexable(texture2d)(float,float,float,float) r6.w, r5.wzww, t4.xzwy, s3, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.w, r5.wzww, t10.xyzw, s3, l(1.400000)
add r5.w, -r5.w, l(1.000000)
add r5.w, -r6.w, r5.w
add r5.w, -r5.w, l(1.000000)
add r6.w, -r6.w, l(1.000000)
mul r5.w, r5.w, r6.w
mul r6.w, r9.z, l(0.500000)
mul r0.w, r0.w, l(5.000000)
min r0.w, r0.w, l(1.000000)
mad r0.w, r0.w, r6.w, r11.y
movc r5.x, r7.z, r11.y, r0.w
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r5.xzxx, t6.yzwx, s4, l(0.000000)
ilt r5.x, l(0), cb0[4].w
add r6.w, -r0.w, |r0.w|
mad r5.w, r5.w, r6.w, r0.w
movc r0.w, r5.x, r5.w, r0.w
add r5.w, -r11.w, r11.z
add r6.w, r7.y, -r11.w
add r0.w, r0.w, r6.w
add r0.w, -r0.w, r5.w
min r6.w, r0.w, l(-0.012500)
div r5.w, r5.w, r6.w
add r6.w, -r5.w, l(1.000000)
mul r6.w, r6.w, r11.y
mad r5.w, r6.x, |r5.w|, r6.w
mad r6.x, r9.x, l(0.000093), r5.w
mad r6.w, r0.w, l(0.000280), r6.x
mad r0.w, -r0.w, l(0.000280), r6.x
movc r0.w, r7.w, r6.w, r0.w
movc r11.y, r7.z, r0.w, r5.w
mad r11.z, cb0[8].y, l(0.000347), r5.z
mad r0.w, cb0[8].y, l(0.000093), r11.y
movc r5.y, r0.y, r0.w, r11.y
movc r5.yz, r0.xxxx, r11.yyzy, r5.yyzy
ieq r0.w, cb0[2].x, l(0)
ieq r6.xw, cb0[4].yyyy, l(0, 0, 0, 2)
and r0.w, r0.w, r6.x
if_nz r0.w
  sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r5.yzyy, t2.xyzw, s1, l(0.000000)
else 
  ieq r5.w, cb0[2].x, l(1)
  and r5.w, r6.x, r5.w
  if_nz r5.w
    sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r5.yzyy, t2.xyzw, s2, l(0.000000)
  else 
    ieq r5.w, cb0[2].x, l(2)
    and r5.w, r6.x, r5.w
    if_nz r5.w
      sample_l_indexable(texture2d)(float,float,float,float) r11.xyz, r5.yzyy, t2.xyzw, s3, l(0.000000)
    else 
      sample_l_indexable(texture2d)(float,float,float,float) r5.w, r5.yzyy, t6.yzwx, s4, l(0.000000)
      mov r11.xyz, r5.wwww
    endif 
  endif 
endif 
ilt r5.w, l(0), cb0[9].w
if_nz r5.w
  mul r9.zw, cb0[12].yyyz, l(0.000000, 0.000000, 0.000187, 0.000694)
  iadd r7.y, cb0[10].x, l(1)
  itof r7.y, r7.y
  add r11.w, r7.y, l(2.000000)
  mul r12.x, r7.y, r7.y
  ieq r12.y, cb0[11].z, l(0)
  ine r12.z, cb0[10].z, l(0)
  and r12.y, r12.y, r12.z
  movc r9.zw, r12.yyyy, l(0,0,0.500000,0.500000), r9.zzzw
  ieq r12.yzw, cb0[9].wwww, l(0, 3, 1, 2)
  movc r13.x, r12.y, l(1.600000), l(1.750000)
  mul r13.yz, r7.yyyy, l(0.000000, 0.005000, 0.006500, 0.000000)
  div r13.zw, r13.zzzy, r13.xxxx
  add r13.zw, r5.yyyy, -r13.zzzw
  add r13.zw, -r9.zzzz, r13.zzzw
  add r14.xy, r5.yzyy, -r9.zwzz
  mov r14.yz, |r14.xxyx|
  mul r14.x, r13.x, r14.y
  mad r5.yz, -r7.yyyy, l(0.000000, 0.006500, 0.005000, 0.000000), r5.zzzz
  add r5.yz, -r9.wwww, r5.yyzy
  mad r9.zw, r11.wwww, l(0.000000, 0.000000, 0.000250, 0.000250), -r14.xxxz
  max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r14.yw, r7.yyyy, l(0.000000, 0.005000, 0.000000, 0.005000), -r14.zzzx
  max r14.yw, r14.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r9.zw, r9.zzzw, r14.yyyw
  add r9.z, r9.z, r9.w
  mad r14.yw, r12.xxxx, l(0.000000, 0.001250, 0.000000, 0.001250), -r14.xxxz
  max r14.yw, r14.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r9.w, r14.w, r14.y
  mul r15.xy, r13.xxxx, |r13.zwzz|
  mov r15.zw, |r5.yyyz|
  movc r5.yz, r12.yyyy, r15.yywy, r14.xxzx
  mad r13.xz, r7.yyyy, l(0.005000, 0.000000, 0.005000, 0.000000), -r5.yyzy
  max r13.xz, r13.xxzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r11.w, r13.z, r13.x
  ne r11.w, l(0.000000, 0.000000, 0.000000, 0.000000), r11.w
  and r11.w, r11.w, l(0x3f800000)
  mad r5.yz, -r5.yyzy, l(0.000000, 4.000000, 4.000000, 0.000000), r13.yyyy
  max r5.yz, r5.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r5.y, r5.z, r5.y
  ne r5.y, l(0.000000, 0.000000, 0.000000, 0.000000), r5.y
  movc r5.y, r5.y, l(-1.000000), l(-0.000000)
  add r5.y, r5.y, r11.w
  mad r13.xy, r7.yyyy, l(0.003500, 0.003500, 0.000000, 0.000000), -r15.xzxx
  max r13.xy, r13.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r5.z, r13.y, r13.x
  ne r5.z, l(0.000000, 0.000000, 0.000000, 0.000000), r5.z
  movc r5.z, r5.z, l(-1.000000), l(-0.000000)
  add r5.y, r5.z, r5.y
  and r5.y, r5.y, r12.y
  movc r5.y, r12.w, r9.w, r5.y
  movc r5.y, r12.z, r9.z, r5.y
  mov x4[0].xyz, l(1.000000,1.000000,1.000000,0)
  mov x4[1].xyz, l(0,0,1.000000,0)
  mov x4[2].xyz, l(0,1.000000,0,0)
  mov x4[3].xyz, l(1.000000,0,0,0)
  mov x4[4].xyz, l(1.000000,0,1.000000,0)
  mov x4[5].xyz, l(0,1.000000,1.000000,0)
  mov x4[6].xyz, l(1.000000,1.000000,0,0)
  mov x4[7].xyz, l(1.000000,0.400000,0.700000,0)
  mov x4[8].xyz, l(1.000000,0.640000,0,0)
  mov x4[9].xyz, l(0.500000,0,0.500000,0)
  mov x4[10].xyz, l(0,0,0,0)
  imax r5.z, cb0[10].y, l(0)
  imin r5.z, r5.z, l(10)
  mov r12.xyz, x4[r5.z + 0].xyzx
else 
  mov r12.xyz, l(0,0,0,0)
  mov r5.y, l(0)
endif 
ne r5.y, l(0.000000, 0.000000, 0.000000, 0.000000), r5.y
movc r11.xyz, r5.yyyy, r12.xyzx, r11.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r5.yz, r1.wzww, t6.zyxw, s4, l(0.000000)
mov_sat r5.y, r5.y
mad r7.y, r5.y, l(-2.000000), l(3.000000)
mul r5.y, r5.y, r5.y
mul r5.y, r5.y, r7.y
mul r9.zw, r1.wwwz, l(0.000000, 0.000000, 5360.000000, 1440.000000)
round_ni r9.zw, r9.zzzw
if_nz r8.x
  mul r7.y, r9.w, r9.z
  mul r12.x, r7.y, l(0.500000)
  frc r12.x, |r12.x|
  add r12.x, r12.x, r12.x
  lt r7.y, r7.y, l(0.000000)
  movc r7.y, r7.y, -r12.x, r12.x
  add r12.x, r9.w, r9.z
  mul r12.y, r12.x, l(0.500000)
  frc r12.y, |r12.y|
  add r12.y, r12.y, r12.y
  lt r12.x, r12.x, l(0.000000)
  movc r12.x, r12.x, -r12.y, r12.y
  ne r12.x, l(0.000000, 0.000000, 0.000000, 0.000000), r12.x
  movc r12.x, r12.x, l(1.020000), l(1.025000)
  ne r7.y, l(0.000000, 0.000000, 0.000000, 0.000000), r7.y
  mov r12.y, x1[r6.z + 0].z
  movc r7.y, r7.y, r12.y, r12.x
else 
  mov r7.y, r7.x
endif 
if_nz r8.y
  mov r7.y, x2[r6.z + 0].z
endif 
if_nz r8.z
  mov r7.y, x3[r6.z + 0].x
endif 
add r9.z, r9.w, r9.z
mul r9.w, r9.z, l(0.500000)
frc r9.w, |r9.w|
add r9.w, r9.w, r9.w
lt r9.z, r9.z, l(0.000000)
movc r9.z, r9.z, -r9.w, r9.w
ne r9.z, l(0.000000, 0.000000, 0.000000, 0.000000), r9.z
ge r12.xy, r5.yyyy, l(0.999000, 0.875000, 0.000000, 0.000000)
movc r9.zw, r9.zzzz, l(0,0,0.500000,1.020000), l(0,0,1.025000,0.500000)
movc r9.w, r12.y, r9.w, r9.z
movc r9.z, r12.x, r9.z, r9.w
movc r7.y, r8.w, r9.z, r7.y
mul r7.y, |r4.w|, r7.y
lt r9.z, l(0.998000), r5.y
and r9.z, r9.z, l(0x3f800000)
mad r9.y, r9.z, r9.y, l(20.000000)
movc r9.y, cb0[2].z, l(20.000000), r9.y
max r7.y, r7.y, r9.y
min r7.y, r7.y, l(200.000000)
rcp r7.y, r7.y
lt r9.y, r4.w, l(0.000000)
movc r9.z, r9.y, l(-75.000000), l(75.000000)
mul r9.w, r6.y, r7.y
sample_l_indexable(texture2d)(float,float,float,float) r12.x, r1.wzww, t8.xyzw, s3, l(0.000000)
movc r5.z, r10.x, r5.z, r12.x
mul r9.z, r10.y, r9.z
lt r10.y, l(0.000000), r5.z
mul r10.z, r10.z, r9.z
mov r12.x, cb0[1].w
mov r12.y, r1.w
mov r12.z, r5.z
mov r12.w, l(0)
mov r13.x, r10.y
loop 
  breakc_z r13.x
  mad r13.y, -r6.y, r7.y, r12.y
  mad r1.y, -r10.z, l(0.000373), r13.y
  sample_l_indexable(texture2d)(float,float,float,float) r13.z, r1.yzyy, t8.yzxw, s3, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r13.w, r1.yzyy, t6.yzwx, s4, l(0.000000)
  ieq r14.xy, r12.xxxx, l(0, 3, 0, 0)
  or r14.x, r14.y, r14.x
  movc r13.z, r14.x, r13.w, r13.z
  add r13.w, r7.y, r12.w
  lt r14.x, r13.w, r13.z
  mov r12.yzw, r13.yyzw
  mov r13.x, r14.x
  continue 
endloop 
mad r5.z, r6.y, r7.y, r12.y
sample_l_indexable(texture2d)(float,float,float,float) r6.y, r1.wzww, t4.xyzw, s3, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r1.wzww, t10.xyzw, s3, l(1.400000)
add r1.w, -r1.w, l(1.000000)
add r1.w, -r6.y, r1.w
add r1.w, -r1.w, l(1.000000)
add r6.y, -r6.y, l(1.000000)
mul r1.w, r1.w, r6.y
mul r6.y, r9.w, l(0.500000)
mul r5.y, r5.y, l(5.000000)
min r5.y, r5.y, l(1.000000)
mad r5.y, r5.y, r6.y, r12.y
movc r1.x, r7.z, r12.y, r5.y
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t6.xyzw, s4, l(0.000000)
add r5.y, -r1.x, |r1.x|
mad r1.w, r1.w, r5.y, r1.x
movc r1.x, r5.x, r1.w, r1.x
add r1.w, -r12.w, r12.z
add r5.y, r7.y, -r12.w
add r1.x, r1.x, r5.y
add r1.x, -r1.x, r1.w
min r5.y, r1.x, l(-0.012500)
div r1.w, r1.w, r5.y
add r5.y, -r1.w, l(1.000000)
mul r5.y, r5.y, r12.y
mad r1.w, r5.z, |r1.w|, r5.y
mad r5.y, r9.z, l(0.000093), r1.w
mad r5.z, r1.x, l(0.000280), r5.y
mad r1.x, -r1.x, l(0.000280), r5.y
movc r1.x, r9.y, r5.z, r1.x
movc r5.y, r7.z, r1.x, r1.w
mad r5.z, cb0[8].y, l(-0.000347), r1.z
mad r1.x, cb0[8].y, l(-0.000093), r5.y
movc r1.y, r0.y, r1.x, r5.y
movc r1.xy, r0.xxxx, r5.yzyy, r1.yzyy
if_nz r0.w
  sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r1.xyxx, t2.xyzw, s1, l(0.000000)
else 
  ieq r1.z, cb0[2].x, l(1)
  and r1.z, r6.x, r1.z
  if_nz r1.z
    sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r1.xyxx, t2.xyzw, s2, l(0.000000)
  else 
    ieq r1.z, cb0[2].x, l(2)
    and r1.z, r6.x, r1.z
    if_nz r1.z
      sample_l_indexable(texture2d)(float,float,float,float) r12.xyz, r1.xyxx, t2.xyzw, s3, l(0.000000)
    else 
      sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.xyxx, t6.yzxw, s4, l(0.000000)
      mov r12.xyz, r1.zzzz
    endif 
  endif 
endif 
if_nz r5.w
  mul r1.zw, cb0[12].yyyz, l(0.000000, 0.000000, 0.000187, 0.000694)
  iadd r5.y, cb0[10].x, l(1)
  itof r5.y, r5.y
  add r5.z, r5.y, l(2.000000)
  mul r6.y, r5.y, r5.y
  ieq r7.y, cb0[11].z, l(0)
  ine r9.w, cb0[10].z, l(0)
  and r7.y, r7.y, r9.w
  movc r1.zw, r7.yyyy, l(0,0,0.500000,0.500000), r1.zzzw
  ieq r13.xyz, cb0[9].wwww, l(3, 1, 2, 0)
  movc r7.y, r13.x, l(1.600000), l(1.750000)
  mul r14.xy, r5.yyyy, l(0.005000, 0.006500, 0.000000, 0.000000)
  div r14.yz, r14.yyxy, r7.yyyy
  add r14.yz, r1.xxxx, -r14.yyzy
  add r14.yz, -r1.zzzz, r14.yyzy
  add r1.xz, -r1.zzwz, r1.xxyx
  mov r15.yz, |r1.xxzx|
  mul r15.x, r7.y, r15.y
  mad r1.xy, -r5.yyyy, l(0.006500, 0.005000, 0.000000, 0.000000), r1.yyyy
  add r1.xy, -r1.wwww, r1.xyxx
  mad r1.zw, r5.zzzz, l(0.000000, 0.000000, 0.000250, 0.000250), -r15.xxxz
  max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r15.yw, r5.yyyy, l(0.000000, 0.005000, 0.000000, 0.005000), -r15.zzzx
  max r15.yw, r15.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r1.zw, r1.zzzw, r15.yyyw
  add r1.z, r1.z, r1.w
  mad r15.yw, r6.yyyy, l(0.000000, 0.001250, 0.000000, 0.001250), -r15.xxxz
  max r15.yw, r15.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r1.w, r15.w, r15.y
  mul r16.xy, r7.yyyy, |r14.yzyy|
  mov r16.zw, |r1.xxxy|
  movc r1.xy, r13.xxxx, r16.ywyy, r15.xzxx
  mad r14.yz, r5.yyyy, l(0.000000, 0.005000, 0.005000, 0.000000), -r1.xxyx
  max r14.yz, r14.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r5.z, r14.z, r14.y
  ne r5.z, l(0.000000, 0.000000, 0.000000, 0.000000), r5.z
  and r5.z, r5.z, l(0x3f800000)
  mad r1.xy, -r1.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000), r14.xxxx
  max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r1.x, r1.y, r1.x
  ne r1.x, l(0.000000, 0.000000, 0.000000, 0.000000), r1.x
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r5.z
  mad r5.yz, r5.yyyy, l(0.000000, 0.003500, 0.003500, 0.000000), -r16.xxzx
  max r5.yz, r5.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r1.y, r5.z, r5.y
  ne r1.y, l(0.000000, 0.000000, 0.000000, 0.000000), r1.y
  movc r1.y, r1.y, l(-1.000000), l(-0.000000)
  add r1.x, r1.y, r1.x
  and r1.x, r1.x, r13.x
  movc r1.x, r13.z, r1.w, r1.x
  movc r1.x, r13.y, r1.z, r1.x
  mov x5[0].xyz, l(1.000000,1.000000,1.000000,0)
  mov x5[1].xyz, l(0,0,1.000000,0)
  mov x5[2].xyz, l(0,1.000000,0,0)
  mov x5[3].xyz, l(1.000000,0,0,0)
  mov x5[4].xyz, l(1.000000,0,1.000000,0)
  mov x5[5].xyz, l(0,1.000000,1.000000,0)
  mov x5[6].xyz, l(1.000000,1.000000,0,0)
  mov x5[7].xyz, l(1.000000,0.400000,0.700000,0)
  mov x5[8].xyz, l(1.000000,0.640000,0,0)
  mov x5[9].xyz, l(0.500000,0,0.500000,0)
  mov x5[10].xyz, l(0,0,0,0)
  imax r1.y, cb0[10].y, l(0)
  imin r1.y, r1.y, l(10)
  mov r1.yzw, x5[r1.y + 0].xxyz
else 
  mov r1.xyzw, l(0,0,0,0)
endif 
ne r1.x, l(0.000000, 0.000000, 0.000000, 0.000000), r1.x
movc r1.xyz, r1.xxxx, r1.yzwy, r12.xyzx
if_nz r0.z
  mul r4.xyzw, r4.xyzw, l(-0.333333, -0.000062, 0.333333, 0.000062)
  sample_l_indexable(texture2d)(float,float,float,float) r5.yz, r2.wyww, t6.zyxw, s4, l(0.000000)
  mov_sat r5.y, r5.y
  mad r6.y, r5.y, l(-2.000000), l(3.000000)
  mul r5.y, r5.y, r5.y
  mul r5.y, r5.y, r6.y
  mul r12.xy, r2.wyww, l(5360.000000, 1440.000000, 0.000000, 0.000000)
  round_ni r12.xy, r12.xyxx
  if_nz r8.x
    mul r6.y, r12.y, r12.x
    mul r7.y, r6.y, l(0.500000)
    frc r7.y, |r7.y|
    add r7.y, r7.y, r7.y
    lt r6.y, r6.y, l(0.000000)
    movc r6.y, r6.y, -r7.y, r7.y
    add r7.y, r12.y, r12.x
    mul r9.w, r7.y, l(0.500000)
    frc r9.w, |r9.w|
    add r9.w, r9.w, r9.w
    lt r7.y, r7.y, l(0.000000)
    movc r7.y, r7.y, -r9.w, r9.w
    ne r7.y, l(0.000000, 0.000000, 0.000000, 0.000000), r7.y
    movc r7.y, r7.y, l(1.020000), l(1.025000)
    ne r6.y, l(0.000000, 0.000000, 0.000000, 0.000000), r6.y
    mov r9.w, x1[r6.z + 0].z
    movc r6.y, r6.y, r9.w, r7.y
  else 
    mov r6.y, r7.x
  endif 
  if_nz r8.y
    mov r6.y, x2[r6.z + 0].z
  endif 
  if_nz r8.z
    mov r6.y, x3[r6.z + 0].x
  endif 
  add r7.y, r12.y, r12.x
  mul r9.w, r7.y, l(0.500000)
  frc r9.w, |r9.w|
  add r9.w, r9.w, r9.w
  lt r7.y, r7.y, l(0.000000)
  movc r7.y, r7.y, -r9.w, r9.w
  ne r7.y, l(0.000000, 0.000000, 0.000000, 0.000000), r7.y
  ge r12.xy, r5.yyyy, l(0.999000, 0.875000, 0.000000, 0.000000)
  movc r12.zw, r7.yyyy, l(0,0,0.500000,1.020000), l(0,0,1.025000,0.500000)
  movc r7.y, r12.y, r12.w, r12.z
  movc r7.y, r12.x, r12.z, r7.y
  movc r6.y, r8.w, r7.y, r6.y
  mul r6.y, |r4.x|, r6.y
  lt r7.y, l(0.998000), r5.y
  and r7.y, r7.y, l(0x3f800000)
  add r12.xy, |r4.xzxx|, l(-20.000000, -20.000000, 0.000000, 0.000000)
  mad r4.x, r7.y, r12.x, l(20.000000)
  movc r4.x, cb0[2].z, l(20.000000), r4.x
  max r4.x, r4.x, r6.y
  min r4.x, r4.x, l(200.000000)
  rcp r4.x, r4.x
  mul r6.y, r4.x, r4.y
  sample_l_indexable(texture2d)(float,float,float,float) r7.y, r2.wyww, t8.yxzw, s3, l(0.000000)
  movc r5.z, r10.x, r5.z, r7.y
  lt r7.y, l(0.000000), r5.z
  mov r9.w, cb0[1].w
  mov r10.y, r2.w
  mov r12.x, r5.z
  mov r12.z, l(0)
  mov r12.w, r7.y
  loop 
    breakc_z r12.w
    mad r13.x, -r4.y, r4.x, r10.y
    mad r2.z, -r10.w, l(0.000373), r13.x
    sample_l_indexable(texture2d)(float,float,float,float) r13.y, r2.zyzz, t8.yxzw, s3, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r13.z, r2.zyzz, t6.yzxw, s4, l(0.000000)
    ieq r14.xy, r9.wwww, l(0, 3, 0, 0)
    or r13.w, r14.y, r14.x
    movc r13.y, r13.w, r13.z, r13.y
    add r13.z, r4.x, r12.z
    lt r13.w, r13.z, r13.y
    mov r10.y, r13.x
    mov r12.xzw, r13.yyzw
    continue 
  endloop 
  mad r4.y, r4.y, r4.x, r10.y
  sample_l_indexable(texture2d)(float,float,float,float) r5.z, r2.wyww, t4.xzyw, s3, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r7.y, r2.wyww, t10.xwyz, s3, l(1.400000)
  add r7.y, -r7.y, l(1.000000)
  add r7.y, -r5.z, r7.y
  add r7.y, -r7.y, l(1.000000)
  add r5.z, -r5.z, l(1.000000)
  mul r5.z, r5.z, r7.y
  mul r6.y, r6.y, l(0.500000)
  mul r5.y, r5.y, l(5.000000)
  min r5.y, r5.y, l(1.000000)
  mad r5.y, r5.y, r6.y, r10.y
  movc r2.x, r7.z, r10.y, r5.y
  sample_l_indexable(texture2d)(float,float,float,float) r5.y, r2.xyxx, t6.yxzw, s4, l(0.000000)
  add r6.y, -r5.y, |r5.y|
  mad r5.z, r5.z, r6.y, r5.y
  movc r5.y, r5.x, r5.z, r5.y
  add r5.z, -r12.z, r12.x
  add r4.x, r4.x, -r12.z
  add r4.x, r4.x, r5.y
  add r4.x, -r4.x, r5.z
  min r5.y, r4.x, l(-0.012500)
  div r5.y, r5.z, r5.y
  add r5.z, -r5.y, l(1.000000)
  mul r5.z, r5.z, r10.y
  mad r4.y, r4.y, |r5.y|, r5.z
  mad r5.y, r9.x, l(0.000093), r4.y
  mad r5.z, r4.x, l(0.000280), r5.y
  mad r4.x, -r4.x, l(0.000280), r5.y
  movc r4.x, r7.w, r5.z, r4.x
  movc r2.x, r7.z, r4.x, r4.y
  if_nz r0.w
    sample_l_indexable(texture2d)(float,float,float,float) r12.xzw, r2.xyxx, t2.xwyz, s1, l(0.000000)
  else 
    ieq r4.x, cb0[2].x, l(1)
    and r4.x, r6.x, r4.x
    if_nz r4.x
      mov r2.z, r2.y
      sample_l_indexable(texture2d)(float,float,float,float) r12.xzw, r2.xzxx, t2.xwyz, s2, l(0.000000)
    else 
      ieq r2.z, cb0[2].x, l(2)
      and r2.z, r6.x, r2.z
      if_nz r2.z
        mov r2.w, r2.y
        sample_l_indexable(texture2d)(float,float,float,float) r12.xzw, r2.xwxx, t2.xwyz, s3, l(0.000000)
      else 
        sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.xyxx, t6.yzxw, s4, l(0.000000)
        mov r12.xzw, r2.zzzz
      endif 
    endif 
  endif 
  if_nz r5.w
    mul r2.zw, cb0[12].yyyz, l(0.000000, 0.000000, 0.000187, 0.000694)
    iadd r4.x, cb0[10].x, l(1)
    itof r4.x, r4.x
    add r4.y, r4.x, l(2.000000)
    mul r5.y, r4.x, r4.x
    ieq r5.z, cb0[11].z, l(0)
    ine r6.y, cb0[10].z, l(0)
    and r5.z, r5.z, r6.y
    movc r2.zw, r5.zzzz, l(0,0,0.500000,0.500000), r2.zzzw
    ieq r13.xyz, cb0[9].wwww, l(3, 1, 2, 0)
    movc r5.z, r13.x, l(1.600000), l(1.750000)
    mul r7.yw, r4.xxxx, l(0.000000, 0.005000, 0.000000, 0.006500)
    div r9.xw, r7.wwwy, r5.zzzz
    add r9.xw, r2.xxxx, -r9.xxxw
    add r9.xw, -r2.zzzz, r9.xxxw
    add r2.x, -r2.z, r2.x
    mul r14.x, r5.z, |r2.x|
    mad r2.xz, -r4.xxxx, l(0.006500, 0.000000, 0.005000, 0.000000), r2.yyyy
    add r2.xz, -r2.wwww, r2.xxzx
    add r2.y, -r2.w, r2.y
    mov r14.y, |r2.y|
    mad r2.yw, r4.yyyy, l(0.000000, 0.000250, 0.000000, 0.000250), -r14.xxxy
    max r2.yw, r2.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
    mad r10.yw, r4.xxxx, l(0.000000, 0.005000, 0.000000, 0.005000), -r14.yyyx
    max r10.yw, r10.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r2.yw, r2.yyyw, r10.yyyw
    add r2.y, r2.y, r2.w
    mad r10.yw, r5.yyyy, l(0.000000, 0.001250, 0.000000, 0.001250), -r14.xxxy
    max r10.yw, r10.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r2.w, r10.w, r10.y
    mul r15.xy, r5.zzzz, |r9.xwxx|
    mov r15.zw, |r2.xxxz|
    movc r2.xz, r13.xxxx, r15.yywy, r14.xxyx
    mad r5.yz, r4.xxxx, l(0.000000, 0.005000, 0.005000, 0.000000), -r2.xxzx
    max r5.yz, r5.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r4.y, r5.z, r5.y
    ne r4.y, l(0.000000, 0.000000, 0.000000, 0.000000), r4.y
    and r4.y, r4.y, l(0x3f800000)
    mad r2.xz, -r2.xxzx, l(4.000000, 0.000000, 4.000000, 0.000000), r7.yyyy
    max r2.xz, r2.xxzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r2.x, r2.z, r2.x
    ne r2.x, l(0.000000, 0.000000, 0.000000, 0.000000), r2.x
    movc r2.x, r2.x, l(-1.000000), l(-0.000000)
    add r2.x, r2.x, r4.y
    mad r4.xy, r4.xxxx, l(0.003500, 0.003500, 0.000000, 0.000000), -r15.xzxx
    max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r2.z, r4.y, r4.x
    ne r2.z, l(0.000000, 0.000000, 0.000000, 0.000000), r2.z
    movc r2.z, r2.z, l(-1.000000), l(-0.000000)
    add r2.x, r2.z, r2.x
    and r2.x, r2.x, r13.x
    movc r2.x, r13.z, r2.w, r2.x
    movc r2.x, r13.y, r2.y, r2.x
    mov x6[0].xyz, l(1.000000,1.000000,1.000000,0)
    mov x6[1].xyz, l(0,0,1.000000,0)
    mov x6[2].xyz, l(0,1.000000,0,0)
    mov x6[3].xyz, l(1.000000,0,0,0)
    mov x6[4].xyz, l(1.000000,0,1.000000,0)
    mov x6[5].xyz, l(0,1.000000,1.000000,0)
    mov x6[6].xyz, l(1.000000,1.000000,0,0)
    mov x6[7].xyz, l(1.000000,0.400000,0.700000,0)
    mov x6[8].xyz, l(1.000000,0.640000,0,0)
    mov x6[9].xyz, l(0.500000,0,0.500000,0)
    mov x6[10].xyz, l(0,0,0,0)
    imax r2.y, cb0[10].y, l(0)
    imin r2.y, r2.y, l(10)
    mov r2.yzw, x6[r2.y + 0].xxyz
  else 
    mov r2.xyzw, l(0,0,0,0)
  endif 
  ne r2.x, l(0.000000, 0.000000, 0.000000, 0.000000), r2.x
  movc r2.xyz, r2.xxxx, r2.yzwy, r12.xzwx
  sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r3.wyww, t6.yxzw, s4, l(0.000000)
  mov_sat r4.x, r4.x
  mad r2.w, r4.x, l(-2.000000), l(3.000000)
  mul r4.x, r4.x, r4.x
  mul r2.w, r2.w, r4.x
  mul r5.yz, r3.wwyw, l(0.000000, 5360.000000, 1440.000000, 0.000000)
  round_ni r5.yz, r5.yyzy
  if_nz r8.x
    mul r4.x, r5.z, r5.y
    mul r6.y, r4.x, l(0.500000)
    frc r6.y, |r6.y|
    add r6.y, r6.y, r6.y
    lt r4.x, r4.x, l(0.000000)
    movc r4.x, r4.x, -r6.y, r6.y
    add r6.y, r5.z, r5.y
    mul r7.y, r6.y, l(0.500000)
    frc r7.y, |r7.y|
    add r7.y, r7.y, r7.y
    lt r6.y, r6.y, l(0.000000)
    movc r6.y, r6.y, -r7.y, r7.y
    ne r6.y, l(0.000000, 0.000000, 0.000000, 0.000000), r6.y
    movc r6.y, r6.y, l(1.020000), l(1.025000)
    ne r4.x, l(0.000000, 0.000000, 0.000000, 0.000000), r4.x
    mov r7.y, x1[r6.z + 0].z
    movc r7.x, r4.x, r7.y, r6.y
  endif 
  if_nz r8.y
    mov r7.x, x2[r6.z + 0].z
  endif 
  if_nz r8.z
    mov r7.x, x3[r6.z + 0].x
  endif 
  add r4.x, r5.z, r5.y
  mul r5.y, r4.x, l(0.500000)
  frc r5.y, |r5.y|
  add r5.y, r5.y, r5.y
  lt r4.x, r4.x, l(0.000000)
  movc r4.x, r4.x, -r5.y, r5.y
  ne r4.x, l(0.000000, 0.000000, 0.000000, 0.000000), r4.x
  ge r5.yz, r2.wwww, l(0.000000, 0.999000, 0.875000, 0.000000)
  movc r6.yz, r4.xxxx, l(0,0.500000,1.020000,0), l(0,1.025000,0.500000,0)
  movc r4.x, r5.z, r6.z, r6.y
  movc r4.x, r5.y, r6.y, r4.x
  movc r4.x, r8.w, r4.x, r7.x
  mul r4.x, r4.x, |r4.z|
  lt r4.z, l(0.998000), r2.w
  and r4.z, r4.z, l(0x3f800000)
  mad r4.z, r4.z, r12.y, l(20.000000)
  movc r4.z, cb0[2].z, l(20.000000), r4.z
  max r4.x, r4.z, r4.x
  min r4.x, r4.x, l(200.000000)
  rcp r4.x, r4.x
  mul r4.z, r4.x, r4.w
  sample_l_indexable(texture2d)(float,float,float,float) r5.y, r3.wyww, t8.yxzw, s3, l(0.000000)
  movc r4.y, r10.x, r4.y, r5.y
  lt r5.y, l(0.000000), r4.y
  mov r5.z, cb0[1].w
  mov r6.y, r3.w
  mov r6.z, r4.y
  mov r7.x, l(0)
  mov r7.y, r5.y
  loop 
    breakc_z r7.y
    mad r7.w, -r4.w, r4.x, r6.y
    mad r3.z, -r10.z, l(0.000373), r7.w
    sample_l_indexable(texture2d)(float,float,float,float) r8.x, r3.zyzz, t8.xyzw, s3, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r8.y, r3.zyzz, t6.yxzw, s4, l(0.000000)
    ieq r8.zw, r5.zzzz, l(0, 0, 0, 3)
    or r8.z, r8.w, r8.z
    movc r8.x, r8.z, r8.y, r8.x
    add r8.y, r4.x, r7.x
    lt r8.z, r8.y, r8.x
    mov r6.y, r7.w
    mov r6.z, r8.x
    mov r7.xy, r8.yzyy
    continue 
  endloop 
  mad r4.y, r4.w, r4.x, r6.y
  sample_l_indexable(texture2d)(float,float,float,float) r4.w, r3.wyww, t4.xzwy, s3, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.y, r3.wyww, t10.xwyz, s3, l(1.400000)
  add r5.y, -r5.y, l(1.000000)
  add r5.y, -r4.w, r5.y
  add r5.y, -r5.y, l(1.000000)
  add r4.w, -r4.w, l(1.000000)
  mul r4.w, r4.w, r5.y
  mul r4.z, r4.z, l(0.500000)
  mul r2.w, r2.w, l(5.000000)
  min r2.w, r2.w, l(1.000000)
  mad r2.w, r2.w, r4.z, r6.y
  movc r3.x, r7.z, r6.y, r2.w
  sample_l_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t6.yzwx, s4, l(0.000000)
  add r4.z, -r2.w, |r2.w|
  mad r4.z, r4.w, r4.z, r2.w
  movc r2.w, r5.x, r4.z, r2.w
  add r4.z, r6.z, -r7.x
  add r4.x, r4.x, -r7.x
  add r2.w, r2.w, r4.x
  add r2.w, -r2.w, r4.z
  min r4.x, r2.w, l(-0.012500)
  div r4.x, r4.z, r4.x
  add r4.z, -r4.x, l(1.000000)
  mul r4.z, r4.z, r6.y
  mad r4.x, r4.y, |r4.x|, r4.z
  mad r4.y, r9.z, l(0.000093), r4.x
  mad r4.z, r2.w, l(0.000280), r4.y
  mad r2.w, -r2.w, l(0.000280), r4.y
  movc r2.w, r9.y, r4.z, r2.w
  movc r3.x, r7.z, r2.w, r4.x
  if_nz r0.w
    sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t2.xyzw, s1, l(0.000000)
  else 
    ieq r0.w, cb0[2].x, l(1)
    and r0.w, r6.x, r0.w
    if_nz r0.w
      mov r3.z, r3.y
      sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xzxx, t2.xyzw, s2, l(0.000000)
    else 
      ieq r0.w, cb0[2].x, l(2)
      and r0.w, r6.x, r0.w
      if_nz r0.w
        mov r3.w, r3.y
        sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xwxx, t2.xyzw, s3, l(0.000000)
      else 
        sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t6.yzwx, s4, l(0.000000)
        mov r4.xyz, r0.wwww
      endif 
    endif 
  endif 
  if_nz r5.w
    mul r3.zw, cb0[12].yyyz, l(0.000000, 0.000000, 0.000187, 0.000694)
    iadd r0.w, cb0[10].x, l(1)
    itof r0.w, r0.w
    add r2.w, r0.w, l(2.000000)
    mul r4.w, r0.w, r0.w
    ieq r5.x, cb0[11].z, l(0)
    ine r5.y, cb0[10].z, l(0)
    and r5.x, r5.x, r5.y
    movc r3.zw, r5.xxxx, l(0,0,0.500000,0.500000), r3.zzzw
    ieq r5.xyz, cb0[9].wwww, l(3, 1, 2, 0)
    movc r5.w, r5.x, l(1.600000), l(1.750000)
    mul r6.xy, r0.wwww, l(0.005000, 0.006500, 0.000000, 0.000000)
    div r6.yz, r6.yyxy, r5.wwww
    add r6.yz, r3.xxxx, -r6.yyzy
    add r6.yz, -r3.zzzz, r6.yyzy
    add r3.x, -r3.z, r3.x
    mul r7.x, r5.w, |r3.x|
    mad r3.xz, -r0.wwww, l(0.006500, 0.000000, 0.005000, 0.000000), r3.yyyy
    add r3.xz, -r3.wwww, r3.xxzx
    add r3.y, -r3.w, r3.y
    mov r7.y, |r3.y|
    mad r3.yw, r2.wwww, l(0.000000, 0.000250, 0.000000, 0.000250), -r7.xxxy
    max r3.yw, r3.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
    mad r7.zw, r0.wwww, l(0.000000, 0.000000, 0.005000, 0.005000), -r7.yyyx
    max r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r3.yw, r3.yyyw, r7.zzzw
    add r2.w, r3.y, r3.w
    mad r3.yw, r4.wwww, l(0.000000, 0.001250, 0.000000, 0.001250), -r7.xxxy
    max r3.yw, r3.yyyw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r3.y, r3.w, r3.y
    mul r8.xy, r5.wwww, |r6.yzyy|
    mov r8.zw, |r3.xxxz|
    movc r3.xz, r5.xxxx, r8.yywy, r7.xxyx
    mad r6.yz, r0.wwww, l(0.000000, 0.005000, 0.005000, 0.000000), -r3.xxzx
    max r6.yz, r6.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r3.w, r6.z, r6.y
    ne r3.w, l(0.000000, 0.000000, 0.000000, 0.000000), r3.w
    and r3.w, r3.w, l(0x3f800000)
    mad r3.xz, -r3.xxzx, l(4.000000, 0.000000, 4.000000, 0.000000), r6.xxxx
    max r3.xz, r3.xxzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r3.x, r3.z, r3.x
    ne r3.x, l(0.000000, 0.000000, 0.000000, 0.000000), r3.x
    movc r3.x, r3.x, l(-1.000000), l(-0.000000)
    add r3.x, r3.x, r3.w
    mad r3.zw, r0.wwww, l(0.000000, 0.000000, 0.003500, 0.003500), -r8.xxxz
    max r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r0.w, r3.w, r3.z
    ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), r0.w
    movc r0.w, r0.w, l(-1.000000), l(-0.000000)
    add r0.w, r0.w, r3.x
    and r0.w, r0.w, r5.x
    movc r0.w, r5.z, r3.y, r0.w
    movc r0.w, r5.y, r2.w, r0.w
    mov x7[0].xyz, l(1.000000,1.000000,1.000000,0)
    mov x7[1].xyz, l(0,0,1.000000,0)
    mov x7[2].xyz, l(0,1.000000,0,0)
    mov x7[3].xyz, l(1.000000,0,0,0)
    mov x7[4].xyz, l(1.000000,0,1.000000,0)
    mov x7[5].xyz, l(0,1.000000,1.000000,0)
    mov x7[6].xyz, l(1.000000,1.000000,0,0)
    mov x7[7].xyz, l(1.000000,0.400000,0.700000,0)
    mov x7[8].xyz, l(1.000000,0.640000,0,0)
    mov x7[9].xyz, l(0.500000,0,0.500000,0)
    mov x7[10].xyz, l(0,0,0,0)
    imax r2.w, cb0[10].y, l(0)
    imin r2.w, r2.w, l(10)
    mov r3.xyz, x7[r2.w + 0].xyzx
  else 
    mov r3.xyz, l(0,0,0,0)
    mov r0.w, l(0)
  endif 
  ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), r0.w
  movc r3.xyz, r0.wwww, r3.xyzx, r4.xyzx
else 
  mov r2.xyz, l(0,0,0,0)
  mov r3.xyz, l(0,0,0,0)
endif 
ieq r0.w, cb0[8].x, l(5)
ftoi r2.w, cb0[15].z
and r2.w, r0.w, r2.w
itof r2.w, r2.w
eq r4.xyzw, r2.wwww, l(2.000000, 3.000000, 4.000000, 5.000000)
eq r5.xy, r2.wwww, l(6.000000, 7.000000, 0.000000, 0.000000)
or r2.w, r4.w, r5.x
mov_sat r3.w, cb0[8].w
movc r4.x, r4.x, l(1.269000), l(1.267000)
movc r4.x, r4.y, l(1.268500), r4.x
movc r4.x, r4.z, l(1.268000), r4.x
movc r2.w, r2.w, l(1.267500), r4.x
movc r2.w, r5.y, l(1.267000), r2.w
movc r2.w, r0.w, r2.w, l(1.000000)
mul r3.w, r3.w, l(4.000000)
mad r3.w, cb0[15].x, l(1.225000), r3.w
mul r6.x, r3.w, l(0.000187)
mov r6.y, l(0)
add r6.xy, r6.xyxx, v1.xyxx
mov r6.z, v1.y
add r4.xz, r6.xxzx, l(-0.500000, 0.000000, -0.500000, 0.000000)
dp2 r7.x, r4.xzxx, l(0.976059, 0.217504, 0.000000, 0.000000)
dp2 r7.y, r4.xzxx, l(-0.217504, 0.976059, 0.000000, 0.000000)
add r4.xz, r7.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
mul r4.xz, r2.wwww, r4.xxzx
movc r4.xz, r0.wwww, r4.xxzx, r6.xxyx
mul r7.xyzw, r4.xzxz, l(5360.000000, 1440.000000, 3840.000000, 2160.000000)
mul r8.xyzw, r4.xzxz, l(3841.000000, 2161.000000, 1920.000000, 1080.000000)
mul r9.xyzw, r4.xzxz, l(1921.000000, 1081.000000, 1680.000000, 1050.000000)
mul r10.xyzw, r4.xzxz, l(1681.000000, 1051.000000, 1280.000000, 720.000000)
mul r4.xz, r4.xxzx, l(1281.000000, 0.000000, 721.000000, 0.000000)
mov x8[0].xy, r7.xyxx
mov x8[1].xy, r7.zwzz
mov x8[2].xy, r8.xyxx
mov x8[3].xy, r8.zwzz
mov x8[4].xy, r9.xyxx
mov x8[5].xy, r9.zwzz
mov x8[6].xy, r10.xyxx
mov x8[7].xy, r10.zwzz
mov x8[8].xy, r4.xzxx
or r2.w, r4.w, r4.y
or r2.w, r5.x, r2.w
mov r1.w, r11.z
mov r11.w, r1.z
movc r4.xyzw, r2.wwww, r1.xyzw, r11.xyzw
movc r5.xy, r2.wwww, r11.xyxx, r1.xyxx
mul r7.x, r5.y, l(0.950000)
mul r6.z, r4.z, l(0.950000)
mov r7.zw, r4.wwwx
mov x9[0].xyz, r7.wxzw
mul r8.xyz, r4.xywx, l(0.950000, 1.000000, 0.950000, 0.000000)
mov x9[1].xyz, r8.xyzx
mul r5.zw, r4.yyyz, l(0.000000, 0.000000, 0.950000, 1.000000)
mov x9[2].xyz, r5.xzwx
mul r6.xy, r5.xyxx, l(0.950000, 1.000000, 0.000000, 0.000000)
mov x9[3].xyz, r6.xyzx
if_z cb0[8].x
  lt r1.w, v1.x, l(0.500000)
  mov r7.xy, r5.xyxx
  movc r6.xyz, r1.wwww, r4.xyzx, r7.xyzx
else 
  ieq r1.w, cb0[8].x, l(1)
  if_nz r1.w
    lt r1.w, v1.y, l(0.500000)
    mov r7.xy, r5.xyxx
    movc r6.xyz, r1.wwww, r4.xyzx, r7.xyzx
  else 
    mov r1.w, cb0[9].x
    mov r5.zw, x8[r1.w + 0].xxxy
    round_ni r5.zw, r5.zzzw
    if_nz r0.x
      mul r0.x, r5.w, l(0.500000)
      frc r0.x, |r0.x|
      add r0.x, r0.x, r0.x
      lt r1.w, r5.w, l(0.000000)
      movc r0.x, r1.w, -r0.x, r0.x
      ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
      mov r7.xy, r5.xyxx
      movc r6.xyz, r0.xxxx, r7.xyzx, r4.xyzx
    else 
      if_nz r0.y
        mul r0.x, r5.z, l(0.500000)
        frc r0.x, |r0.x|
        add r0.x, r0.x, r0.x
        lt r0.y, r5.z, l(0.000000)
        movc r0.x, r0.y, -r0.x, r0.x
        ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
        mov r7.xy, r5.xyxx
        movc r6.xyz, r0.xxxx, r7.xyzx, r4.xyzx
      else 
        ieq r0.x, cb0[8].x, l(4)
        if_nz r0.x
          add r0.x, r5.w, r5.z
          mul r0.y, r0.x, l(0.500000)
          frc r0.y, |r0.y|
          add r0.y, r0.y, r0.y
          lt r0.x, r0.x, l(0.000000)
          movc r0.x, r0.x, -r0.y, r0.y
          ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
          mov r7.xy, r5.xyxx
          movc r6.xyz, r0.xxxx, r7.xyzx, r4.xyzx
        else 
          if_nz r0.w
            mul r0.x, r5.z, l(0.250000)
            frc r0.x, |r0.x|
            mul r0.x, r0.x, l(4.000000)
            lt r0.y, r5.z, l(0.000000)
            movc r0.x, r0.y, -r0.x, r0.x
            ftoi r0.x, r0.x
            mov r6.x, x9[r0.x + 0].x
            mov r6.y, x9[r0.x + 0].y
            mov r6.z, x9[r0.x + 0].z
          else 
            if_nz r0.z
              lt r0.xy, v1.yxyy, l(0.500000, 0.500000, 0.000000, 0.000000)
              movc r2.xyz, r0.yyyy, r11.xyzx, r2.xyzx
              movc r1.xyz, r0.yyyy, r3.xyzx, r1.xyzx
              movc r6.xyz, r0.xxxx, r2.xyzx, r1.xyzx
            else 
              ige r0.x, cb0[8].x, l(7)
              if_nz r0.x
                dp3 r0.x, r4.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                mov r7.xy, r5.xyxx
                dp3 r0.y, r7.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                add r1.xyz, -r0.xxxx, r4.xyzx
                mad r1.xyz, cb0[8].zzzz, r1.xyzx, r0.xxxx
                add r2.xyz, -r0.yyyy, r7.xyzx
                mad r2.xyz, cb0[8].zzzz, r2.yzxy, r0.yyyy
                ieq r0.x, cb0[8].x, l(7)
                if_nz r0.x
                  mov r6.x, r1.x
                  mov r6.yz, r2.xxyx
                else 
                  ieq r0.x, cb0[8].x, l(8)
                  if_nz r0.x
                    dp3 r0.x, r1.xyzx, l(0.437000, 0.449000, 0.164000, 0.000000)
                    mad r0.x, -r2.z, l(0.011000), r0.x
                    mad r0.x, -r2.x, l(0.032000), r0.x
                    mad r0.x, -r2.y, l(0.007000), r0.x
                    lt r0.y, l(1.000000), r0.x
                    movc r0.x, r0.y, l(1.000000), r0.x
                    lt r0.y, r0.x, l(0.000000)
                    movc r6.x, r0.y, l(0), r0.x
                    mul r0.x, r1.y, l(0.062000)
                    mad r0.x, r1.x, l(-0.062000), -r0.x
                    mad r0.x, -r1.z, l(0.024000), r0.x
                    mad r0.x, r2.z, l(0.377000), r0.x
                    mad r0.x, r2.x, l(0.761000), r0.x
                    mad r0.x, r2.y, l(0.009000), r0.x
                    lt r0.y, l(1.000000), r0.x
                    movc r0.x, r0.y, l(1.000000), r0.x
                    lt r0.y, r0.x, l(0.000000)
                    movc r6.y, r0.y, l(0), r0.x
                    mul r0.x, r1.y, l(0.050000)
                    mad r0.x, r1.x, l(-0.048000), -r0.x
                    mad r0.x, -r1.z, l(0.017000), r0.x
                    mad r0.x, -r2.z, l(0.026000), r0.x
                    mad r0.x, -r2.x, l(0.093000), r0.x
                    mad r0.x, r2.y, l(1.234000), r0.x
                    lt r0.y, l(1.000000), r0.x
                    movc r0.x, r0.y, l(1.000000), r0.x
                    lt r0.y, r0.x, l(0.000000)
                    movc r6.z, r0.y, l(0), r0.x
                  else 
                    ieq r0.x, cb0[8].x, l(9)
                    if_nz r0.x
                      mul_sat r0.xyz, r1.xyzx, l(0.450000, 0.275000, 0.275000, 0.000000)
                      add r0.x, r0.y, r0.x
                      add r0.x, r0.z, r0.x
                      mov_sat r2.xy, r2.xyxx
                      log r0.yz, r2.xxyx
                      mul r0.yz, r0.yyzy, l(0.000000, 1.150000, 1.150000, 0.000000)
                      exp r0.yz, r0.yyzy
                      mul r1.w, r0.y, l(-0.003000)
                      mad r1.w, r0.x, l(1.006000), r1.w
                      mad r6.x, r0.z, l(-0.003000), r1.w
                      mad r3.xy, r0.xxxx, l(-0.001500, -0.001500, 0.000000, 0.000000), r0.yzyy
                      mad r0.x, r0.y, l(0.003000), r3.x
                      mad r6.y, r0.z, l(-0.001500), r0.x
                      mad r0.x, r0.y, l(-0.001500), r3.y
                      mad r6.z, r0.z, l(0.003000), r0.x
                    else 
                      ieq r0.x, cb0[8].x, l(10)
                      if_nz r0.x
                        mov r2.w, r1.y
                        mov r6.xyz, r2.zwyz
                      else 
                        ieq r0.x, cb0[8].x, l(11)
                        if_nz r0.x
                          mul r0.x, r1.y, l(0.158000)
                          mad r0.x, r1.x, l(-0.062000), -r0.x
                          mad r0.x, -r1.z, l(0.039000), r0.x
                          mad r0.x, r2.z, l(0.529000), r0.x
                          mad r0.x, r2.x, l(0.705000), r0.x
                          mad r0.x, r2.y, l(0.024000), r0.x
                          lt r0.y, l(1.000000), r0.x
                          movc r0.x, r0.y, l(1.000000), r0.x
                          lt r0.y, r0.x, l(0.000000)
                          movc r6.x, r0.y, l(0), r0.x
                          dp3 r0.x, r1.xyzx, l(0.284000, 0.668000, 0.143000, 0.000000)
                          mad r0.x, -r2.z, l(0.016000), r0.x
                          mad r0.x, -r2.x, l(0.015000), r0.x
                          mad r0.x, r2.y, l(0.065000), r0.x
                          lt r0.y, l(1.000000), r0.x
                          movc r0.x, r0.y, l(1.000000), r0.x
                          lt r0.y, r0.x, l(0.000000)
                          movc r6.y, r0.y, l(0), r0.x
                          mul r0.x, r1.y, l(0.027000)
                          mad r0.x, r1.x, l(-0.015000), -r0.x
                          mad r0.x, r1.z, l(0.021000), r0.x
                          mad r0.x, r2.z, l(0.009000), r0.x
                          mad r0.x, r2.x, l(0.075000), r0.x
                          mad r0.x, r2.y, l(0.937000), r0.x
                          lt r0.y, l(1.000000), r0.x
                          movc r0.x, r0.y, l(1.000000), r0.x
                          lt r0.y, r0.x, l(0.000000)
                          movc r6.z, r0.y, l(0), r0.x
                        else 
                          ieq r0.x, cb0[8].x, l(12)
                          if_nz r0.x
                            mul_sat r3.xyzw, r2.zxxy, l(0.800000, 0.200000, 0.200000, 0.800000)
                            add r0.xy, r3.ywyy, r3.xzxx
                            log r0.xy, r0.xyxx
                            mul_sat r3.xyz, r1.xyzx, l(0.275000, 0.450000, 0.275000, 0.000000)
                            add r0.z, r3.y, r3.x
                            add r0.z, r3.z, r0.z
                            log r0.z, r0.z
                            mul r0.xyz, r0.xyzx, l(1.150000, 1.150000, 1.050000, 0.000000)
                            exp r0.z, r0.z
                            exp r0.xy, r0.xyxx
                            mul r1.z, r0.z, l(-0.004125)
                            mad r1.z, r0.x, l(1.008250), r1.z
                            mad r6.x, r0.y, l(-0.004125), r1.z
                            mad r1.z, r0.x, l(-0.008250), r0.z
                            mad r1.z, r0.z, l(0.004125), r1.z
                            mad r6.y, r0.y, l(-0.008250), r1.z
                            mad r0.x, r0.x, l(-0.004125), r0.y
                            mad r0.x, r0.z, l(-0.004125), r0.x
                            mad r6.z, r0.y, l(0.008250), r0.x
                          else 
                            ieq r0.x, cb0[8].x, l(13)
                            if_nz r0.x
                              mov_sat r1.xy, r1.xyxx
                              log r0.xy, r1.xyxx
                              mul r0.xy, r0.xyxx, l(1.050000, 1.100000, 0.000000, 0.000000)
                              exp r0.xy, r0.xyxx
                              mul_sat r1.xyz, r2.zxyz, l(0.275000, 0.275000, 0.450000, 0.000000)
                              add r0.z, r1.y, r1.x
                              add r0.z, r1.z, r0.z
                              log r1.x, r0.z
                              mul r1.x, r1.x, l(1.002475)
                              exp r1.x, r1.x
                              add r1.y, -r0.z, l(1.000000)
                              log r1.y, |r1.y|
                              mul r1.y, r1.y, l(1.002475)
                              exp r1.y, r1.y
                              add r1.y, -r1.y, l(1.000000)
                              add r1.y, -r1.x, r1.y
                              mad r0.z, r0.z, r1.y, r1.x
                              mul r1.xy, r0.xyxx, l(1.024750, -0.012375, 0.000000, 0.000000)
                              add r1.x, r1.y, r1.x
                              mad_sat r6.x, r0.z, l(-0.012375), r1.x
                              mad r1.x, r0.x, l(-0.012375), r0.y
                              mad r1.x, r0.y, l(0.024750), r1.x
                              mad_sat r6.y, r0.z, l(-0.012375), r1.x
                              mad r0.x, r0.x, l(-0.024750), r0.z
                              mad r0.x, r0.y, l(-0.024750), r0.x
                              mad_sat r6.z, r0.z, l(0.049500), r0.x
                            else 
                              mov r6.xyz, l(0,0,0,0)
                            endif 
                          endif 
                        endif 
                      endif 
                    endif 
                  endif 
                endif 
              else 
                mov r6.xyz, l(0,0,0,0)
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
  endif 
endif 
if_nz r6.w
  sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t6.xyzw, s4
  mov r6.xyz, r0.xxxx
endif 
ge r0.x, l(30000.000000), cb0[13].x
ine r0.y, cb0[11].y, l(0)
or r0.x, r0.y, r0.x
if_nz r0.x
  mul r0.x, cb0[13].x, l(0.003750)
  sincos r0.x, null, r0.x
  max r0.x, r0.x, l(0.000000)
  mad r0.y, r0.x, l(-2.000000), l(3.000000)
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.009000, 0.982000, -0.009000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.y, r1.y, r1.x
  ge r0.y, r0.y, l(0.000000)
  and r0.y, r0.y, l(0x3f800000)
  max r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(1.000000)
  movc r0.z, r0.z, l(-1.000000), l(-0.000000)
  add r0.y, r0.z, r0.y
  round_ni r1.xy, r1.wzww
  mad r0.z, r1.x, l(4.000000), r1.y
  exp r0.z, -r0.z
  mul r0.z, r0.z, l(638361.000000)
  round_ni r0.z, r0.z
  mul r0.z, r0.z, l(0.500000)
  frc r0.z, r0.z
  dp2_sat r0.y, r0.zzzz, r0.yyyy
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.020000, 0.982000, -0.020000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(432534.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  add r0.y, r0.z, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.042000, 0.982000, -0.042000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(498033.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  add r0.y, r0.z, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.053000, 0.982000, -0.053000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(497497.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  add r0.y, r0.z, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.064000, 0.982000, -0.064000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(432534.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  add r0.y, r0.z, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.075000, 0.982000, -0.075000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(988945.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  add r0.y, r0.z, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.086000, 0.982000, -0.086000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(1000527.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  add r0.y, r0.z, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.097000, 0.982000, -0.097000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(69919.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  add r0.y, r0.z, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.108000, 0.982000, -0.108000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(988959.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  add r0.y, r0.z, r0.y
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.862000, 0.982000, -0.862000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r0.z, r1.y, r1.x
  ge r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r0.z, r0.z, r1.x
  round_ni r1.xy, r1.wzww
  mad r1.x, r1.x, l(4.000000), r1.y
  exp r1.x, -r1.x
  mul r1.x, r1.x, l(498071.000000)
  round_ni r1.x, r1.x
  mul r1.x, r1.x, l(0.500000)
  frc r1.x, r1.x
  dp2_sat r0.z, r1.xxxx, r0.zzzz
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.875750, 0.982000, -0.875750, 0.982000)
  mul r1.xyzw, r1.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(988959.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.889500, 0.982000, -0.889500, 0.982000)
  mul r1.xyzw, r1.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(498033.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.903250, 0.982000, -0.903250, 0.982000)
  mul r1.xyzw, r1.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(1000516.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.917000, 0.982000, -0.917000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(630681.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.930750, 0.982000, -0.930750, 0.982000)
  mul r1.xyzw, r1.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(431254.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.944500, 0.982000, -0.944500, 0.982000)
  mul r1.xyzw, r1.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(498071.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.955500, 0.982000, -0.955500, 0.982000)
  mul r1.xyzw, r1.xyzw, l(83.116882, 58.181816, 332.467529, 290.909088)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  add r1.y, r1.y, r1.y
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.963000, 0.982000, -0.963000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(152.380951, 106.666664, 609.523804, 533.333313)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(1000527.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.970500, 0.982000, -0.970500, 0.982000)
  mul r1.xyzw, r1.xyzw, l(152.380951, 106.666664, 609.523804, 533.333313)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(638361.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.978000, 0.982000, -0.978000, 0.982000)
  mul r1.xyzw, r1.xyzw, l(152.380951, 106.666664, 609.523804, 533.333313)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(988945.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.985500, 0.982000, -0.985500, 0.982000)
  mul r1.xyzw, r1.xyzw, l(152.380951, 106.666664, 609.523804, 533.333313)
  min r2.x, r1.y, r1.x
  ge r2.x, r2.x, l(0.000000)
  and r2.x, r2.x, l(0x3f800000)
  max r1.x, r1.y, r1.x
  ge r1.x, r1.x, l(1.000000)
  movc r1.x, r1.x, l(-1.000000), l(-0.000000)
  add r1.x, r1.x, r2.x
  round_ni r1.yz, r1.wwzw
  mad r1.y, r1.y, l(4.000000), r1.z
  exp r1.y, -r1.y
  mul r1.y, r1.y, l(432534.000000)
  round_ni r1.y, r1.y
  mul r1.y, r1.y, l(0.500000)
  frc r1.y, r1.y
  dp2_sat r1.x, r1.yyyy, r1.xxxx
  add r0.z, r0.z, r1.x
  if_nz r0.w
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.457500, 0.506250, -0.457500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r0.w, r1.y, r1.x
    ge r0.w, r0.w, l(0.000000)
    and r0.w, r0.w, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r0.w, r0.w, r1.x
    round_ni r1.xy, r1.wzww
    mad r1.x, r1.x, l(4.000000), r1.y
    exp r1.x, -r1.x
    mul r1.x, r1.x, l(921886.000000)
    round_ni r1.x, r1.x
    mul r1.x, r1.x, l(0.500000)
    frc r1.x, r1.x
    dp2_sat r0.w, r1.xxxx, r0.wwww
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.468500, 0.506250, -0.468500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r2.x, r1.y, r1.x
    ge r2.x, r2.x, l(0.000000)
    and r2.x, r2.x, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r1.x, r1.x, r2.x
    round_ni r1.yz, r1.wwzw
    mad r1.y, r1.y, l(4.000000), r1.z
    exp r1.y, -r1.y
    mul r1.y, r1.y, l(434073.000000)
    round_ni r1.y, r1.y
    mul r1.y, r1.y, l(0.500000)
    frc r1.y, r1.y
    dp2_sat r1.x, r1.yyyy, r1.xxxx
    add r0.w, r0.w, r1.x
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.479500, 0.506250, -0.479500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r2.x, r1.y, r1.x
    ge r2.x, r2.x, l(0.000000)
    and r2.x, r2.x, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r1.x, r1.x, r2.x
    round_ni r1.yz, r1.wwzw
    mad r1.y, r1.y, l(4.000000), r1.z
    exp r1.y, -r1.y
    mul r1.y, r1.y, l(69919.000000)
    round_ni r1.y, r1.y
    mul r1.y, r1.y, l(0.500000)
    frc r1.y, r1.y
    dp2_sat r1.x, r1.yyyy, r1.xxxx
    add r0.w, r0.w, r1.x
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.490500, 0.506250, -0.490500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r2.x, r1.y, r1.x
    ge r2.x, r2.x, l(0.000000)
    and r2.x, r2.x, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r1.x, r1.x, r2.x
    round_ni r1.yz, r1.wwzw
    mad r1.y, r1.y, l(4.000000), r1.z
    exp r1.y, -r1.y
    mul r1.y, r1.y, l(1000527.000000)
    round_ni r1.y, r1.y
    mul r1.y, r1.y, l(0.500000)
    frc r1.y, r1.y
    dp2_sat r1.x, r1.yyyy, r1.xxxx
    add r0.w, r0.w, r1.x
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.501500, 0.506250, -0.501500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r2.x, r1.y, r1.x
    ge r2.x, r2.x, l(0.000000)
    and r2.x, r2.x, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r1.x, r1.x, r2.x
    round_ni r1.yz, r1.wwzw
    mad r1.y, r1.y, l(4.000000), r1.z
    exp r1.y, -r1.y
    mul r1.y, r1.y, l(497559.000000)
    round_ni r1.y, r1.y
    mul r1.y, r1.y, l(0.500000)
    frc r1.y, r1.y
    dp2_sat r1.x, r1.yyyy, r1.xxxx
    add r0.w, r0.w, r1.x
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.512500, 0.506250, -0.512500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r2.x, r1.y, r1.x
    ge r2.x, r2.x, l(0.000000)
    and r2.x, r2.x, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r1.x, r1.x, r2.x
    round_ni r1.yz, r1.wwzw
    mad r1.y, r1.y, l(4.000000), r1.z
    exp r1.y, -r1.y
    mul r1.y, r1.y, l(497497.000000)
    round_ni r1.y, r1.y
    mul r1.y, r1.y, l(0.500000)
    frc r1.y, r1.y
    dp2_sat r1.x, r1.yyyy, r1.xxxx
    add r0.w, r0.w, r1.x
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.523500, 0.506250, -0.523500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r2.x, r1.y, r1.x
    ge r2.x, r2.x, l(0.000000)
    and r2.x, r2.x, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r1.x, r1.x, r2.x
    round_ni r1.yz, r1.wwzw
    mad r1.y, r1.y, l(4.000000), r1.z
    exp r1.y, -r1.y
    mul r1.y, r1.y, l(434073.000000)
    round_ni r1.y, r1.y
    mul r1.y, r1.y, l(0.500000)
    frc r1.y, r1.y
    dp2_sat r1.x, r1.yyyy, r1.xxxx
    add r0.w, r0.w, r1.x
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.534500, 0.506250, -0.534500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r2.x, r1.y, r1.x
    ge r2.x, r2.x, l(0.000000)
    and r2.x, r2.x, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r1.x, r1.x, r2.x
    round_ni r1.yz, r1.wwzw
    mad r1.y, r1.y, l(4.000000), r1.z
    exp r1.y, -r1.y
    mul r1.y, r1.y, l(1000516.000000)
    round_ni r1.y, r1.y
    mul r1.y, r1.y, l(0.500000)
    frc r1.y, r1.y
    dp2_sat r1.x, r1.yyyy, r1.xxxx
    add r0.w, r0.w, r1.x
    mad r1.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(-0.545500, 0.506250, -0.545500, 0.506250)
    mul r1.xyzw, r1.xyzw, l(103.896103, 72.727264, 415.584412, 363.636322)
    min r2.x, r1.y, r1.x
    ge r2.x, r2.x, l(0.000000)
    and r2.x, r2.x, l(0x3f800000)
    max r1.x, r1.y, r1.x
    ge r1.x, r1.x, l(1.000000)
    movc r1.x, r1.x, l(-1.000000), l(-0.000000)
    add r1.x, r1.x, r2.x
    round_ni r1.yz, r1.wwzw
    mad r1.y, r1.y, l(4.000000), r1.z
    exp r1.y, -r1.y
    mul r1.y, r1.y, l(988959.000000)
    round_ni r1.y, r1.y
    mul r1.y, r1.y, l(0.500000)
    frc r1.y, r1.y
    dp2_sat r1.x, r1.yyyy, r1.xxxx
    add r0.w, r0.w, r1.x
    ge r1.x, l(0.500000), cb0[15].x
    ge r1.y, cb0[15].x, l(-0.500000)
    and r1.x, r1.y, r1.x
    and r0.w, r0.w, r1.x
  else 
    mov r0.w, l(0)
  endif 
  mad r0.x, r0.y, r0.x, r0.z
  add r0.x, r0.w, r0.x
  mad r0.y, -v1.y, l(50.000000), l(49.849998)
  mad r0.y, r0.y, v1.y, l(-0.500000)
  ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
  movc o0.xyz, r0.xxxx, r0.yyyy, r6.xyzx
  ret 
else 
  mov o0.xyz, r6.xyzx
  ret 
endif 
ret 
// Approximately 1759 instruction slots used
