//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int BlackPoint;                    // Offset:    0 Size:     4
//   int WhitePoint;                    // Offset:    4 Size:     4
//   bool HighlightClipping;            // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 4
itof r0.x, cb0[0].x
mul r0.x, r0.x, l(0.003922)
iadd r0.y, -cb0[0].x, cb0[0].y
itof r0.y, r0.y
div r0.y, l(255.000000), r0.y
ieq r0.z, cb0[0].x, cb0[0].y
movc r0.y, r0.z, l(1019999.937500), r0.y
mul r0.x, r0.y, r0.x
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
mad r0.xyz, r1.xyzx, r0.yyyy, -r0.xxxx
mov_sat r1.xyz, r0.xyzx
lt r2.xyz, r1.xyzx, r0.xyzx
lt r1.xyz, r0.xyzx, r1.xyzx
or r0.w, r2.y, r2.x
or r0.w, r2.z, r0.w
movc r3.xyz, r0.wwww, l(1.000000,0,0,0), r0.xyzx
and r0.w, r2.y, r2.x
and r0.w, r2.z, r0.w
movc r2.xyz, r0.wwww, l(1.000000,1.000000,0,0), r3.xyzx
or r0.w, r1.y, r1.x
or r0.w, r1.z, r0.w
movc r2.xyz, r0.wwww, l(0,0,1.000000,0), r2.xyzx
and r0.w, r1.y, r1.x
and r0.w, r1.z, r0.w
movc r1.xyz, r0.wwww, l(0,1.000000,1.000000,0), r2.xyzx
movc o0.xyz, cb0[0].zzzz, r1.xyzx, r0.xyzx
ret 
// Approximately 27 instruction slots used
