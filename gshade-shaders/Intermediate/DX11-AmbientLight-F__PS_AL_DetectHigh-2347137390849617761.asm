//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
max r0.w, r0.z, r0.y
max r0.w, r0.w, r0.x
add r0.w, |r0.w|, |r0.w|
mul r1.xyzw, r0.wwww, r0.xxyz
add r1.xyzw, r1.zyzw, r1.xyzw
mad r0.x, r0.z, r0.w, r1.x
mad r0.xyz, -r0.xxxx, l(0.333333, 0.333333, 0.333333, 0.000000), r1.yzwy
lt r0.w, r0.x, l(0.000000)
mad r1.yz, r0.xxxx, l(0.000000, 0.500000, 0.500000, 0.000000), r0.yyzy
mov r1.xw, l(0,0,0,0)
movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mul r0.w, r0.y, l(-0.500000)
lt r0.w, r0.w, r0.x
mad r1.yz, r0.yyyy, l(0.000000, 0.500000, 0.500000, 0.000000), r0.zzxz
and r1.x, r0.w, r1.z
lt r0.w, r0.y, l(0.000000)
movc r0.xyz, r0.wwww, r1.xwyx, r0.xyzx
mul r0.w, r0.z, l(-0.500000)
lt r1.xy, r0.wwww, r0.xyxx
mad r1.zw, r0.zzzz, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
and r1.xy, r1.zwzz, r1.xyxx
lt r0.w, r0.z, l(0.000000)
mov r1.z, l(0)
movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r0.w, r0.x, l(-1.000000)
mad r1.yz, r0.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), r0.yyzy
lt r0.w, l(1.000000), r0.x
mov r1.x, l(1.000000)
movc r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r0.w, r0.y, l(-1.000000)
add r1.x, r0.w, r0.x
mad r2.yz, r0.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), r0.zzxz
lt r0.w, r1.x, l(1.000000)
movc r2.x, r0.w, r2.z, l(1.000000)
lt r0.w, l(1.000000), r0.y
mov r2.w, l(1.000000)
movc r0.xyz, r0.wwww, r2.xwyx, r0.xyzx
add r0.w, r0.z, l(-1.000000)
add r1.xy, r0.wwww, r0.xyxx
mad r1.zw, r0.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), r0.xxxy
lt r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
movc r1.xy, r1.xyxx, r1.zwzz, l(1.000000,1.000000,0,0)
lt r0.w, l(1.000000), r0.z
mov r1.z, l(1.000000)
movc o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 48 instruction slots used
