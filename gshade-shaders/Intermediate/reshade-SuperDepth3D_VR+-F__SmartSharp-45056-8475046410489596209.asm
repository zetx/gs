//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int IPD;                           // Offset:    0 Size:     4 [unused]
//   float Divergence;                  // Offset:    4 Size:     4 [unused]
//   float2 ZPD_Separation;             // Offset:    8 Size:     8 [unused]
//   int Auto_Balance_Ex;               // Offset:   16 Size:     4 [unused]
//   int ZPD_Boundary;                  // Offset:   20 Size:     4 [unused]
//   float2 ZPD_Boundary_n_Fade;        // Offset:   24 Size:     8 [unused]
//   int View_Mode;                     // Offset:   32 Size:     4 [unused]
//   int Custom_Sidebars;               // Offset:   36 Size:     4 [unused]
//   float Max_Depth;                   // Offset:   40 Size:     4 [unused]
//   int Performance_Level;             // Offset:   44 Size:     4 [unused]
//   float DLSS_FSR_Offset;             // Offset:   48 Size:     4 [unused]
//   int Depth_Map;                     // Offset:   52 Size:     4 [unused]
//   float Depth_Map_Adjust;            // Offset:   56 Size:     4 [unused]
//   float Offset;                      // Offset:   60 Size:     4 [unused]
//   float Auto_Depth_Adjust;           // Offset:   64 Size:     4 [unused]
//   bool Depth_Map_View;               // Offset:   68 Size:     4 [unused]
//   bool Depth_Detection;              // Offset:   72 Size:     4 [unused]
//   bool Depth_Map_Flip;               // Offset:   76 Size:     4 [unused]
//   int WP;                            // Offset:   80 Size:     4 [unused]
//   float4 Weapon_Adjust;              // Offset:   96 Size:    16 [unused]
//   float3 WZPD_and_WND;               // Offset:  112 Size:    12 [unused]
//   int FPSDFIO;                       // Offset:  124 Size:     4 [unused]
//   int3 Eye_Fade_Reduction_n_Power;   // Offset:  128 Size:    12 [unused]
//   float Weapon_ZPD_Boundary;         // Offset:  140 Size:     4 [unused]
//   int Cursor_Type;                   // Offset:  144 Size:     4 [unused]
//   int2 Cursor_SC;                    // Offset:  148 Size:     8 [unused]
//   bool Cursor_Lock;                  // Offset:  156 Size:     4 [unused]
//   int Barrel_Distortion;             // Offset:  160 Size:     4 [unused]
//   float FoV;                         // Offset:  164 Size:     4 [unused]
//   float3 Polynomial_Colors_K1;       // Offset:  176 Size:    12 [unused]
//   float3 Polynomial_Colors_K2;       // Offset:  192 Size:    12 [unused]
//   bool Theater_Mode;                 // Offset:  204 Size:     4 [unused]
//   float Blinders;                    // Offset:  208 Size:     4 [unused]
//   float Adjust_Vignette;             // Offset:  212 Size:     4 [unused]
//   float Sharpen_Power;               // Offset:  216 Size:     4
//   float Saturation;                  // Offset:  220 Size:     4 [unused]
//   bool NCAOC;                        // Offset:  224 Size:     4 [unused]
//   bool Cancel_Depth;                 // Offset:  228 Size:     4 [unused]
//   bool Mask_Cycle;                   // Offset:  232 Size:     4 [unused]
//   bool Text_Info;                    // Offset:  236 Size:     4 [unused]
//   bool CLK;                          // Offset:  240 Size:     4 [unused]
//   bool Trigger_Fade_A;               // Offset:  244 Size:     4 [unused]
//   bool Trigger_Fade_B;               // Offset:  248 Size:     4 [unused]
//   bool overlay_open;                 // Offset:  252 Size:     4
//   float2 Mousecoords;                // Offset:  256 Size:     8 [unused]
//   float frametime;                   // Offset:  264 Size:     4 [unused]
//   float timer;                       // Offset:  268 Size:     4 [unused]
//   bool DepthCheck;                   // Offset:  272 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__BackBufferTex                texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[16], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 7
movc r0.x, cb0[15].w, l(0), cb0[13].z
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t2.wxyz, s1
lt r1.x, l(0.000000), r0.x
if_nz r1.x
  mov r1.xyzw, l(0,0,0,0)
  mov r2.xyzw, l(0,0,0,-1)
  mov r3.x, l(-1)
  loop 
    breakc_z r3.x
    itof r4.x, r2.w
    mov r3.yzw, r1.xxyz
    mov r5.xyz, r2.xyzx
    mov r4.z, r1.w
    mov r4.w, l(-1)
    mov r5.w, l(-1)
    loop 
      breakc_z r5.w
      itof r4.y, r4.w
      mad r6.xy, r4.xyxx, l(0.000218, 0.000521, 0.000000, 0.000000), v1.xyxx
      sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r6.xyxx, t2.xyzw, s1, l(0.000000)
      add r6.xyz, -r0.yzwy, r5.xyzx
      dp3 r4.y, r6.xyzx, r6.xyzx
      mul r4.y, r4.y, l(-11.541560)
      exp r4.y, r4.y
      mul r6.x, r4.y, l(1.595760)
      mad r4.z, r4.y, l(1.595760), r4.z
      mad r3.yzw, r6.xxxx, r5.xxyz, r3.yyzw
      iadd r4.w, r4.w, l(1)
      ige r5.w, l(1), r4.w
    endloop 
    mov r1.xyz, r3.yzwy
    mov r2.xyz, r5.xyzx
    mov r1.w, r4.z
    iadd r2.w, r2.w, l(1)
    ige r3.x, l(1), r2.w
  endloop 
  div_sat r1.xyz, r1.xyzx, r1.wwww
  dp3 r1.w, r0.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  dp3 r2.w, r1.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  min r3.x, r1.w, r2.w
  dp3 r2.x, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  min r2.y, r2.x, r3.x
  max r1.w, r1.w, r2.w
  max r1.w, r2.x, r1.w
  rcp r2.x, r1.w
  add r1.w, -r1.w, l(2.000000)
  min r1.w, r1.w, r2.y
  mul_sat r1.w, r2.x, r1.w
  add r1.xyz, r0.yzwy, -r1.xyzx
  mul r1.xyz, r0.xxxx, r1.xyzx
  mad o0.xyz, r1.wwww, r1.xyzx, r0.yzwy
else 
  mov o0.xyz, r0.yzwy
endif 
ret 
// Approximately 55 instruction slots used
