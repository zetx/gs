//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float lin_bp;                      // Offset:    0 Size:     4
//   float lin_wp;                      // Offset:    4 Size:     4
//   float lin_g;                       // Offset:    8 Size:     4
//   float lio_s;                       // Offset:   12 Size:     4
//   float lout_bp;                     // Offset:   16 Size:     4
//   float lout_wp;                     // Offset:   20 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mad r0.xyz, -cb0[0].xxxx, l(0.003922, 0.003922, 0.003922, 0.000000), r0.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.w, cb0[0].x, l(0.003922)
mad r0.w, cb0[0].y, l(0.003922), -r0.w
div r0.xyz, r0.xyzx, r0.wwww
min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
log r1.xyz, |r0.xyzx|
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[0].z
mul r1.xyz, r1.xyzx, r0.wwww
exp r1.xyz, r1.xyzx
ne r2.xy, cb0[0].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
movc r0.xyz, r2.xxxx, r1.xyzx, r0.xyzx
mul r1.xy, cb0[1].xyxx, l(0.003922, 0.003922, 0.000000, 0.000000)
mad r0.w, cb0[1].y, l(0.003922), -r1.x
mad r0.xyz, r0.xyzx, r0.wwww, r1.xxxx
max r0.xyz, r1.xxxx, r0.xyzx
min r0.xyz, r1.yyyy, r0.xyzx
add r0.w, r0.y, r0.x
add r0.w, r0.z, r0.w
mad r1.xyz, r0.wwww, l(0.333333, 0.333333, 0.333333, 0.000000), -r0.xyzx
mul r0.w, r0.w, l(0.333333)
mad r1.xyz, -r1.xyzx, cb0[0].wwww, r0.wwww
movc o0.xyz, r2.yyyy, r1.xyzx, r0.xyzx
ret 
// Approximately 25 instruction slots used
