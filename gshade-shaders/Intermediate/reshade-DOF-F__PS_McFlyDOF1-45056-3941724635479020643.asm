//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool DOF_AUTOFOCUS;                // Offset:    0 Size:     4 [unused]
//   bool DOF_MOUSEDRIVEN_AF;           // Offset:    4 Size:     4 [unused]
//   float2 DOF_FOCUSPOINT;             // Offset:    8 Size:     8 [unused]
//   float DOF_FOCUSSAMPLES;            // Offset:   16 Size:     4 [unused]
//   float DOF_FOCUSRADIUS;             // Offset:   20 Size:     4 [unused]
//   float DOF_NEARBLURCURVE;           // Offset:   24 Size:     4
//   float DOF_FARBLURCURVE;            // Offset:   28 Size:     4 [unused]
//   float DOF_MANUALFOCUSDEPTH;        // Offset:   32 Size:     4 [unused]
//   float DOF_INFINITEFOCUS;           // Offset:   36 Size:     4 [unused]
//   float DOF_BLURRADIUS;              // Offset:   40 Size:     4
//   float iRingDOFSamples;             // Offset:   44 Size:     4 [unused]
//   float iRingDOFRings;               // Offset:   48 Size:     4 [unused]
//   float fRingDOFThreshold;           // Offset:   52 Size:     4 [unused]
//   float fRingDOFGain;                // Offset:   56 Size:     4 [unused]
//   float fRingDOFBias;                // Offset:   60 Size:     4 [unused]
//   float fRingDOFFringe;              // Offset:   64 Size:     4 [unused]
//   float iMagicDOFBlurQuality;        // Offset:   68 Size:     4 [unused]
//   float fMagicDOFColorCurve;         // Offset:   72 Size:     4 [unused]
//   float iGPDOFQuality;               // Offset:   76 Size:     4 [unused]
//   bool bGPDOFPolygonalBokeh;         // Offset:   80 Size:     4 [unused]
//   float iGPDOFPolygonCount;          // Offset:   84 Size:     4 [unused]
//   float fGPDOFBias;                  // Offset:   88 Size:     4 [unused]
//   float fGPDOFBiasCurve;             // Offset:   92 Size:     4 [unused]
//   float fGPDOFBrightnessThreshold;   // Offset:   96 Size:     4 [unused]
//   float fGPDOFBrightnessMultiplier;  // Offset:  100 Size:     4 [unused]
//   float fGPDOFChromaAmount;          // Offset:  104 Size:     4 [unused]
//   bool bMatsoDOFChromaEnable;        // Offset:  108 Size:     4 [unused]
//   float fMatsoDOFChromaPow;          // Offset:  112 Size:     4 [unused]
//   float fMatsoDOFBokehCurve;         // Offset:  116 Size:     4 [unused]
//   float iMatsoDOFBokehQuality;       // Offset:  120 Size:     4 [unused]
//   float fMatsoDOFBokehAngle;         // Offset:  124 Size:     4 [unused]
//   int iADOF_ShapeType;               // Offset:  128 Size:     4
//   float iADOF_ShapeQuality;          // Offset:  132 Size:     4
//   float fADOF_ShapeRotation;         // Offset:  136 Size:     4
//   bool bADOF_RotAnimationEnable;     // Offset:  140 Size:     4
//   float fADOF_RotAnimationSpeed;     // Offset:  144 Size:     4
//   bool bADOF_ShapeCurvatureEnable;   // Offset:  148 Size:     4
//   float fADOF_ShapeCurvatureAmount;  // Offset:  152 Size:     4
//   bool bADOF_ShapeApertureEnable;    // Offset:  156 Size:     4
//   float fADOF_ShapeApertureAmount;   // Offset:  160 Size:     4
//   bool bADOF_ShapeAnamorphEnable;    // Offset:  164 Size:     4
//   float fADOF_ShapeAnamorphRatio;    // Offset:  168 Size:     4
//   bool bADOF_ShapeDistortEnable;     // Offset:  172 Size:     4
//   float fADOF_ShapeDistortAmount;    // Offset:  176 Size:     4
//   bool bADOF_ShapeDiffusionEnable;   // Offset:  180 Size:     4
//   float fADOF_ShapeDiffusionAmount;  // Offset:  184 Size:     4
//   bool bADOF_ShapeWeightEnable;      // Offset:  188 Size:     4
//   float fADOF_ShapeWeightCurve;      // Offset:  192 Size:     4
//   float fADOF_ShapeWeightAmount;     // Offset:  196 Size:     4
//   float fADOF_BokehCurve;            // Offset:  200 Size:     4
//   bool bADOF_ShapeChromaEnable;      // Offset:  204 Size:     4
//   int iADOF_ShapeChromaMode;         // Offset:  208 Size:     4
//   float fADOF_ShapeChromaAmount;     // Offset:  212 Size:     4
//   bool bADOF_ImageChromaEnable;      // Offset:  216 Size:     4 [unused]
//   float iADOF_ImageChromaHues;       // Offset:  220 Size:     4 [unused]
//   float fADOF_ImageChromaCurve;      // Offset:  224 Size:     4 [unused]
//   float fADOF_ImageChromaAmount;     // Offset:  228 Size:     4 [unused]
//   float fADOF_SmootheningAmount;     // Offset:  232 Size:     4 [unused]
//   float2 MouseCoords;                // Offset:  240 Size:     8 [unused]
//   float Timer;                       // Offset:  248 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__texHDR1                      texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[16], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 22
dcl_indexableTemp x0[13], 4
mul r0.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000)
mov_sat r0.zw, r0.xxxy
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.zwzz, t0.xyzw, s0
mad r0.z, r1.w, l(2.000000), l(-1.000000)
mul r0.z, |r0.z|, cb0[2].z
lt r0.w, r1.w, l(0.500000)
add r2.x, cb0[1].z, cb0[1].z
max r2.x, r2.x, l(1.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r2.x, r0.z, r2.x
movc r0.z, r0.w, r2.x, r0.z
max r0.w, r0.y, r0.x
ge r0.w, l(1.050000), r0.w
ge r2.x, r0.z, l(1.200000)
and r0.w, r0.w, r2.x
if_nz r0.w
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyxx, t0.xyzw, s0, l(0.000000)
  div r0.w, r0.z, cb0[2].z
  add r2.w, cb0[8].y, l(-1.000000)
  mad r0.w, r0.w, r2.w, l(1.000000)
  round_ne r0.w, r0.w
  mul r3.zw, r0.zzzz, l(0.000000, 0.000000, 0.000291, 0.000694)
  mov x0[4].xy, l(0,0,0,0)
  mov x0[5].xy, l(0,0,0,0)
  mov x0[6].xy, l(0,0,0,0)
  mov x0[7].xy, l(0,0,0,0)
  mov x0[8].xy, l(0,0,0,0)
  mov x0[9].xy, l(0,0,0,0)
  mov x0[10].xy, l(0,0,0,0)
  mov x0[11].xy, l(0,0,0,0)
  mov x0[12].xy, l(0,0,0,0)
  switch cb0[8].x
    case l(0)
    add r2.w, -cb0[12].y, l(1.000000)
    movc r2.w, cb0[11].w, r2.w, l(1.000000)
    log r5.xyz, |r2.xyzx|
    mul r5.xyz, r5.xyzx, cb0[12].zzzz
    exp r5.xyz, r5.xyzx
    mul r5.xyz, r2.wwww, r5.xyzx
    mul r4.w, r3.z, cb0[10].z
    movc r3.y, cb0[10].y, r4.w, r3.z
    mul r4.w, cb0[9].x, cb0[15].z
    mad r4.w, r4.w, l(0.005000), cb0[8].z
    movc r4.w, cb0[8].w, r4.w, cb0[8].z
    mul r6.xy, v1.yyyy, l(905.516663, 955.516663, 0.000000, 0.000000)
    mad r5.w, v1.x, l(1.666667), r6.x
    sincos r5.w, null, r5.w
    mul r5.w, r5.w, l(493013.000000)
    frc r7.x, r5.w
    mad r5.w, v1.x, l(1.666667), -r6.y
    sincos null, r5.w, r5.w
    mul r5.w, r5.w, l(289013.000000)
    frc r7.y, r5.w
    add r6.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r6.xy, r6.xyxx, cb0[11].zzzz, l(1.000000, 1.000000, 0.000000, 0.000000)
    movc r6.xy, cb0[11].yyyy, r6.xyxx, l(0,0,0,0)
    mul r5.w, r4.w, l(0.017453)
    sincos r7.x, r8.x, r5.w
    mov x0[0].y, r7.x
    mov x0[0].x, r8.x
    mad r7.xyzw, r4.wwww, l(0.017453, 0.017453, 0.017453, 0.017453), l(0.523599, 1.047197, 1.570796, 2.094395)
    sincos r7.x, r8.x, r7.x
    mov x0[1].y, r7.x
    mov x0[1].x, r8.x
    sincos r7.x, r8.x, r7.y
    mov x0[2].y, r7.x
    mov x0[2].x, r8.x
    sincos r7.x, r8.x, r7.z
    mov x0[3].y, r7.x
    mov x0[3].x, r8.x
    sincos r7.x, r8.x, r7.w
    mov x0[4].y, r7.x
    mov x0[4].x, r8.x
    mad r7.xyzw, r4.wwww, l(0.017453, 0.017453, 0.017453, 0.017453), l(2.617994, 3.141593, 3.665191, 4.188790)
    sincos r7.x, r8.x, r7.x
    mov x0[5].y, r7.x
    mov x0[5].x, r8.x
    sincos r7.x, r8.x, r7.y
    mov x0[6].y, r7.x
    mov x0[6].x, r8.x
    sincos r7.x, r8.x, r7.z
    mov x0[7].y, r7.x
    mov x0[7].x, r8.x
    sincos r7.x, r8.x, r7.w
    mov x0[8].y, r7.x
    mov x0[8].x, r8.x
    mad r7.xyzw, r4.wwww, l(0.017453, 0.017453, 0.017453, 0.017453), l(4.712389, 5.235987, 5.759586, 6.283185)
    sincos r7.x, r8.x, r7.x
    mov x0[9].y, r7.x
    mov x0[9].x, r8.x
    sincos r7.x, r8.x, r7.y
    mov x0[10].y, r7.x
    mov x0[10].x, r8.x
    sincos r7.x, r8.x, r7.z
    mov x0[11].y, r7.x
    mov x0[11].x, r8.x
    sincos r7.x, r8.x, r7.w
    mov x0[12].y, r7.x
    mov x0[12].x, r8.x
    ge r4.w, r0.w, l(1.000000)
    mad r6.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), l(0.000000, 0.000000, -0.500000, -0.500000)
    mad r7.xy, v1.yxyy, l(1.666667, -1.666667, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
    dp2 r5.w, r7.xyxx, r7.xyxx
    rsq r5.w, r5.w
    mul r7.xy, r5.wwww, r7.xyxx
    dp2 r5.w, r6.zwzz, r6.zwzz
    sqrt r5.w, r5.w
    mul r5.w, r5.w, cb0[11].x
    mul r5.w, r5.w, l(2.221000)
    sincos null, r5.w, r5.w
    add r6.z, -r5.w, l(1.000000)
    mul r6.w, r1.w, l(0.990000)
    add r7.z, -cb0[13].y, l(1.000000)
    add r7.w, cb0[13].y, l(1.000000)
    mov r4.xyz, r5.xyzx
    mov r8.xy, cb0[9].ywyy
    mov r8.z, cb0[10].w
    mov r8.w, cb0[11].y
    mov r9.x, cb0[11].w
    mov r9.y, cb0[12].w
    mov r0.z, r2.w
    mov r9.z, l(1.000000)
    mov r9.w, r4.w
    loop 
      breakc_z r9.w
      div r10.x, r9.z, r0.w
      lt r10.y, l(0.000000), r9.z
      mov r11.xyz, r4.xyzx
      mov r10.zw, r8.xxxy
      mov r11.w, r8.z
      mov r12.x, r8.w
      mov r12.yz, r9.xxyx
      mov r12.w, r0.z
      mov r13.xy, l(1,-1,0,0)
      loop 
        breakc_z r13.y
        iadd r13.zw, r13.xxxx, l(0, 0, -1, 1)
        mov r14.xy, x0[r13.z + 0].xyxx
        mov r14.zw, x0[r13.x + 0].xxxy
        add r14.zw, -r14.xxxy, r14.zzzw
        mov r15.xyz, r11.xyzx
        mov r13.z, r10.z
        mov r15.w, r10.w
        mov r16.x, r11.w
        mov r16.yzw, r12.xxyz
        mov r17.x, r12.w
        mov r17.z, l(0)
        mov r17.yw, r10.xxxy
        loop 
          breakc_z r17.w
          div r18.x, r17.z, r9.z
          mad r18.y, r18.x, l(6.283185), l(-1.570796)
          sincos r18.y, null, r18.y
          mad r18.y, r18.y, cb0[10].x, l(1.000000)
          mul r18.y, r17.y, r18.y
          movc r17.y, r15.w, r18.y, r17.y
          mad r18.xy, r18.xxxx, r14.zwzz, r14.xyxx
          mul r18.xy, r17.yyyy, r18.xyxx
          dp2 r18.z, r18.xyxx, r18.xyxx
          rsq r18.z, r18.z
          mul r18.zw, r18.zzzz, r18.xxxy
          mad r18.zw, r18.zzzw, r17.yyyy, -r18.xxxy
          mad r18.zw, cb0[9].zzzz, r18.zzzw, r18.xxxy
          movc r18.xy, r13.zzzz, r18.zwzz, r18.xyxx
          dp2 r18.z, r7.xyxx, r18.xyxx
          mul r18.zw, r7.xxxy, r18.zzzz
          mul r18.zw, r6.zzzz, r18.zzzw
          mad r18.zw, r18.xxxy, r5.wwww, r18.zzzw
          movc r18.xy, r16.xxxx, r18.zwzz, r18.xyxx
          mul r18.zw, r6.xxxy, r18.xxxy
          movc r18.xy, r16.yyyy, r18.zwzz, r18.xyxx
          if_nz r16.w
            mul r18.zw, r3.yyyw, r18.xxxy
            mad r19.xy, r18.zwzz, r7.zzzz, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r19.xyxx, t0.xyzw, s0, l(0.000000)
            mad r20.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000), r18.zwzz
            sample_l_indexable(texture2d)(float,float,float,float) r20.xyzw, r20.xyxx, t0.xyzw, s0, l(0.000000)
            mad r18.zw, r18.zzzw, r7.wwww, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r21.xyz, r18.zwzz, t0.xyzw, s0, l(0.000000)
            switch cb0[13].x
              case l(0)
              mov r20.x, r19.x
              mov r20.z, r21.z
              break 
              case l(1)
              mov r20.y, r21.y
              mov r20.z, r19.z
              break 
              case l(2)
              mov r20.x, r21.x
              mov r20.y, r19.y
              break 
              case l(3)
              mov r20.x, r19.x
              mov r20.y, r21.y
              break 
              case l(4)
              mov r20.y, r19.y
              mov r20.z, r21.z
              break 
              default 
              mov r20.x, r21.x
              mov r20.z, r19.z
              break 
            endswitch 
          else 
            mad r18.zw, r18.xxxy, r3.yyyw, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r20.xyzw, r18.zwzz, t0.xyzw, s0, l(0.000000)
          endif 
          ge r18.z, r20.w, r6.w
          mad r18.w, r20.w, l(2.000000), l(-1.000000)
          mul r18.w, |r18.w|, |r18.w|
          mul r18.w, r18.w, r18.w
          movc r18.z, r18.z, l(1.000000), r18.w
          dp2 r18.x, r18.xyxx, r18.xyxx
          sqrt r18.x, r18.x
          log r18.x, r18.x
          mul r18.x, r18.x, cb0[12].x
          exp r18.x, r18.x
          add r18.x, r18.x, l(-1.000000)
          mad r18.x, cb0[12].y, r18.x, l(1.000000)
          mul r18.x, r18.x, r18.z
          movc r18.x, r16.z, r18.x, r18.z
          log r18.yzw, |r20.xxyz|
          mul r18.yzw, r18.yyzw, cb0[12].zzzz
          exp r18.yzw, r18.yyzw
          mad r15.xyz, r18.yzwy, r18.xxxx, r15.xyzx
          add r17.x, r17.x, r18.x
          add r17.z, r17.z, l(1.000000)
          lt r17.w, r17.z, r9.z
        endloop 
        mov r11.xyz, r15.xyzx
        mov r12.w, r17.x
        ige r13.y, l(12), r13.w
        mov r13.xy, r13.wyww
      endloop 
      mov r4.xyz, r11.xyzx
      mov r0.z, r12.w
      add r9.z, r9.z, l(1.000000)
      ge r9.w, r0.w, r9.z
    endloop 
    break 
    case l(2)
    add r2.w, -cb0[12].y, l(1.000000)
    movc r2.w, cb0[11].w, r2.w, l(1.000000)
    log r5.xyz, |r2.xyzx|
    mul r5.xyz, r5.xyzx, cb0[12].zzzz
    exp r5.xyz, r5.xyzx
    mul r5.xyz, r2.wwww, r5.xyzx
    mul r3.y, r3.z, cb0[10].z
    movc r3.x, cb0[10].y, r3.y, r3.z
    mul r3.y, cb0[9].x, cb0[15].z
    mad r3.y, r3.y, l(0.005000), cb0[8].z
    movc r3.y, cb0[8].w, r3.y, cb0[8].z
    mul r6.xy, v1.yyyy, l(905.516663, 955.516663, 0.000000, 0.000000)
    mad r4.w, v1.x, l(1.666667), r6.x
    sincos r4.w, null, r4.w
    mul r4.w, r4.w, l(493013.000000)
    frc r7.x, r4.w
    mad r4.w, v1.x, l(1.666667), -r6.y
    sincos null, r4.w, r4.w
    mul r4.w, r4.w, l(289013.000000)
    frc r7.y, r4.w
    add r6.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r6.xy, r6.xyxx, cb0[11].zzzz, l(1.000000, 1.000000, 0.000000, 0.000000)
    movc r6.xy, cb0[11].yyyy, r6.xyxx, l(0,0,0,0)
    mul r4.w, r3.y, l(0.017453)
    sincos r7.x, r8.x, r4.w
    mov x0[0].y, r7.x
    mov x0[0].x, r8.x
    mad r7.xyzw, r3.yyyy, l(0.017453, 0.017453, 0.017453, 0.017453), l(1.570796, 3.141593, 4.712389, 6.283185)
    sincos r7.x, r8.x, r7.x
    mov x0[1].y, r7.x
    mov x0[1].x, r8.x
    sincos r7.x, r8.x, r7.y
    mov x0[2].y, r7.x
    mov x0[2].x, r8.x
    sincos r7.x, r8.x, r7.z
    mov x0[3].y, r7.x
    mov x0[3].x, r8.x
    sincos r7.x, r8.x, r7.w
    mov x0[4].y, r7.x
    mov x0[4].x, r8.x
    ge r3.y, r0.w, l(1.000000)
    mad r6.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), l(0.000000, 0.000000, -0.500000, -0.500000)
    mad r7.xy, v1.yxyy, l(1.666667, -1.666667, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
    dp2 r4.w, r7.xyxx, r7.xyxx
    rsq r4.w, r4.w
    mul r7.xy, r4.wwww, r7.xyxx
    dp2 r4.w, r6.zwzz, r6.zwzz
    sqrt r4.w, r4.w
    mul r4.w, r4.w, cb0[11].x
    mul r4.w, r4.w, l(2.221000)
    sincos null, r4.w, r4.w
    add r5.w, -r4.w, l(1.000000)
    mul r6.z, r1.w, l(0.990000)
    add r6.w, -cb0[13].y, l(1.000000)
    add r7.z, cb0[13].y, l(1.000000)
    mov r4.xyz, r5.xyzx
    mov r7.w, cb0[9].y
    mov r8.x, cb0[9].w
    mov r8.y, cb0[10].w
    mov r8.zw, cb0[11].yyyw
    mov r9.x, cb0[12].w
    mov r0.z, r2.w
    mov r9.y, l(1.000000)
    mov r9.z, r3.y
    loop 
      breakc_z r9.z
      div r9.w, r9.y, r0.w
      lt r10.x, l(0.000000), r9.y
      mov r10.yzw, r4.xxyz
      mov r11.x, r7.w
      mov r11.yzw, r8.xxyz
      mov r12.x, r8.w
      mov r12.y, r9.x
      mov r12.z, r0.z
      mov r12.w, l(1)
      mov r13.x, l(-1)
      loop 
        breakc_z r13.x
        iadd r13.yz, r12.wwww, l(0, -1, 1, 0)
        mov r13.yw, x0[r13.y + 0].xxxy
        mov r14.xy, x0[r12.w + 0].xyxx
        add r14.xy, -r13.ywyy, r14.xyxx
        mov r15.xyz, r10.yzwy
        mov r14.zw, r11.xxxy
        mov r15.w, r11.z
        mov r16.x, r11.w
        mov r16.yzw, r12.xxyz
        mov r17.x, r9.w
        mov r17.y, l(0)
        mov r17.z, r10.x
        loop 
          breakc_z r17.z
          div r17.w, r17.y, r9.y
          mad r18.x, r17.w, l(6.283185), l(-1.570796)
          sincos r18.x, null, r18.x
          mad r18.x, r18.x, cb0[10].x, l(1.000000)
          mul r18.x, r17.x, r18.x
          movc r17.x, r14.w, r18.x, r17.x
          mad r18.xy, r17.wwww, r14.xyxx, r13.ywyy
          mul r18.xy, r17.xxxx, r18.xyxx
          dp2 r17.w, r18.xyxx, r18.xyxx
          rsq r17.w, r17.w
          mul r18.zw, r17.wwww, r18.xxxy
          mad r18.zw, r18.zzzw, r17.xxxx, -r18.xxxy
          mad r18.zw, cb0[9].zzzz, r18.zzzw, r18.xxxy
          movc r18.xy, r14.zzzz, r18.zwzz, r18.xyxx
          dp2 r17.w, r7.xyxx, r18.xyxx
          mul r18.zw, r7.xxxy, r17.wwww
          mul r18.zw, r5.wwww, r18.zzzw
          mad r18.zw, r18.xxxy, r4.wwww, r18.zzzw
          movc r18.xy, r15.wwww, r18.zwzz, r18.xyxx
          mul r18.zw, r6.xxxy, r18.xxxy
          movc r18.xy, r16.xxxx, r18.zwzz, r18.xyxx
          if_nz r16.z
            mul r18.zw, r3.xxxw, r18.xxxy
            mad r19.xy, r18.zwzz, r6.wwww, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r19.xyxx, t0.xyzw, s0, l(0.000000)
            mad r20.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000), r18.zwzz
            sample_l_indexable(texture2d)(float,float,float,float) r20.xyzw, r20.xyxx, t0.xyzw, s0, l(0.000000)
            mad r18.zw, r18.zzzw, r7.zzzz, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r21.xyz, r18.zwzz, t0.xyzw, s0, l(0.000000)
            switch cb0[13].x
              case l(0)
              mov r20.x, r19.x
              mov r20.z, r21.z
              break 
              case l(1)
              mov r20.y, r21.y
              mov r20.z, r19.z
              break 
              case l(2)
              mov r20.x, r21.x
              mov r20.y, r19.y
              break 
              case l(3)
              mov r20.x, r19.x
              mov r20.y, r21.y
              break 
              case l(4)
              mov r20.y, r19.y
              mov r20.z, r21.z
              break 
              default 
              mov r20.x, r21.x
              mov r20.z, r19.z
              break 
            endswitch 
          else 
            mad r18.zw, r18.xxxy, r3.xxxw, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r20.xyzw, r18.zwzz, t0.xyzw, s0, l(0.000000)
          endif 
          ge r17.w, r20.w, r6.z
          mad r18.z, r20.w, l(2.000000), l(-1.000000)
          mul r18.z, |r18.z|, |r18.z|
          mul r18.z, r18.z, r18.z
          movc r17.w, r17.w, l(1.000000), r18.z
          dp2 r18.x, r18.xyxx, r18.xyxx
          sqrt r18.x, r18.x
          log r18.x, r18.x
          mul r18.x, r18.x, cb0[12].x
          exp r18.x, r18.x
          add r18.x, r18.x, l(-1.000000)
          mad r18.x, cb0[12].y, r18.x, l(1.000000)
          mul r18.x, r17.w, r18.x
          movc r17.w, r16.y, r18.x, r17.w
          log r18.xyz, |r20.xyzx|
          mul r18.xyz, r18.xyzx, cb0[12].zzzz
          exp r18.xyz, r18.xyzx
          mad r15.xyz, r18.xyzx, r17.wwww, r15.xyzx
          add r16.w, r16.w, r17.w
          add r17.y, r17.y, l(1.000000)
          lt r17.z, r17.y, r9.y
        endloop 
        mov r10.yzw, r15.xxyz
        mov r12.z, r16.w
        ige r13.x, l(4), r13.z
        mov r12.w, r13.z
      endloop 
      mov r4.xyz, r10.yzwy
      mov r0.z, r12.z
      add r9.y, r9.y, l(1.000000)
      ge r9.z, r0.w, r9.y
    endloop 
    break 
    case l(3)
    add r2.w, -cb0[12].y, l(1.000000)
    movc r2.w, cb0[11].w, r2.w, l(1.000000)
    log r5.xyz, |r2.xyzx|
    mul r5.xyz, r5.xyzx, cb0[12].zzzz
    exp r5.xyz, r5.xyzx
    mul r5.xyz, r2.wwww, r5.xyzx
    mul r3.x, r3.z, cb0[10].z
    movc r6.x, cb0[10].y, r3.x, r3.z
    mul r3.x, cb0[9].x, cb0[15].z
    mad r3.x, r3.x, l(0.005000), cb0[8].z
    movc r3.x, cb0[8].w, r3.x, cb0[8].z
    mul r7.xy, v1.yyyy, l(905.516663, 955.516663, 0.000000, 0.000000)
    mad r3.y, v1.x, l(1.666667), r7.x
    sincos r3.y, null, r3.y
    mul r3.y, r3.y, l(493013.000000)
    frc r8.x, r3.y
    mad r3.y, v1.x, l(1.666667), -r7.y
    sincos null, r3.y, r3.y
    mul r3.y, r3.y, l(289013.000000)
    frc r8.y, r3.y
    add r7.xy, r8.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r7.xy, r7.xyxx, cb0[11].zzzz, l(1.000000, 1.000000, 0.000000, 0.000000)
    movc r7.xy, cb0[11].yyyy, r7.xyxx, l(0,0,0,0)
    mul r3.y, r3.x, l(0.017453)
    sincos r8.x, r9.x, r3.y
    mov x0[0].y, r8.x
    mov x0[0].x, r9.x
    mad r8.xyz, r3.xxxx, l(0.017453, 0.017453, 0.017453, 0.000000), l(2.094395, 4.188790, 6.283185, 0.000000)
    sincos r3.x, r8.x, r8.x
    mov x0[1].y, r3.x
    mov x0[1].x, r8.x
    sincos r3.x, r8.x, r8.y
    mov x0[2].y, r3.x
    mov x0[2].x, r8.x
    sincos r3.x, r8.x, r8.z
    mov x0[3].y, r3.x
    mov x0[3].x, r8.x
    ge r3.x, r0.w, l(1.000000)
    mad r7.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), l(0.000000, 0.000000, -0.500000, -0.500000)
    mad r8.xy, v1.yxyy, l(1.666667, -1.666667, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
    dp2 r3.y, r8.xyxx, r8.xyxx
    rsq r3.y, r3.y
    mul r8.xy, r3.yyyy, r8.xyxx
    dp2 r3.y, r7.zwzz, r7.zwzz
    sqrt r3.y, r3.y
    mul r3.y, r3.y, cb0[11].x
    mul r3.y, r3.y, l(2.221000)
    sincos null, r3.y, r3.y
    add r4.w, -r3.y, l(1.000000)
    mul r5.w, r1.w, l(0.990000)
    add r6.w, -cb0[13].y, l(1.000000)
    add r7.z, cb0[13].y, l(1.000000)
    mov r6.yz, r3.wwww
    mov r4.xyz, r5.xyzx
    mov r7.w, cb0[9].y
    mov r8.z, cb0[9].w
    mov r8.w, cb0[10].w
    mov r9.xy, cb0[11].ywyy
    mov r9.z, cb0[12].w
    mov r0.z, r2.w
    mov r9.w, l(1.000000)
    mov r10.x, r3.x
    loop 
      breakc_z r10.x
      div r10.y, r9.w, r0.w
      lt r10.z, l(0.000000), r9.w
      mov r11.xyz, r4.xyzx
      mov r10.w, r7.w
      mov r11.w, r8.z
      mov r12.x, r8.w
      mov r12.yzw, r9.xxyz
      mov r13.x, r0.z
      mov r13.yz, l(0,1,-1,0)
      loop 
        breakc_z r13.z
        iadd r14.xy, r13.yyyy, l(-1, 1, 0, 0)
        mov r14.xz, x0[r14.x + 0].xxyx
        mov r15.xy, x0[r13.y + 0].xyxx
        add r15.xy, -r14.xzxx, r15.xyxx
        mov r16.xyz, r11.xyzx
        mov r13.w, r10.w
        mov r14.w, r11.w
        mov r15.zw, r12.xxxy
        mov r16.w, r12.z
        mov r17.x, r12.w
        mov r17.y, r13.x
        mov r17.z, r10.y
        mov r17.w, l(0)
        mov r18.x, r10.z
        loop 
          breakc_z r18.x
          div r18.y, r17.w, r9.w
          mad r18.z, r18.y, l(6.283185), l(-1.570796)
          sincos r18.z, null, r18.z
          mad r18.z, r18.z, cb0[10].x, l(1.000000)
          mul r18.z, r17.z, r18.z
          movc r17.z, r14.w, r18.z, r17.z
          mad r18.yz, r18.yyyy, r15.xxyx, r14.xxzx
          mul r18.yz, r17.zzzz, r18.yyzy
          dp2 r18.w, r18.yzyy, r18.yzyy
          rsq r18.w, r18.w
          mul r19.xy, r18.wwww, r18.yzyy
          mad r19.xy, r19.xyxx, r17.zzzz, -r18.yzyy
          mad r19.xy, cb0[9].zzzz, r19.xyxx, r18.yzyy
          movc r18.yz, r13.wwww, r19.xxyx, r18.yyzy
          dp2 r18.w, r8.xyxx, r18.yzyy
          mul r19.xy, r8.xyxx, r18.wwww
          mul r19.xy, r4.wwww, r19.xyxx
          mad r19.xy, r18.yzyy, r3.yyyy, r19.xyxx
          movc r18.yz, r15.zzzz, r19.xxyx, r18.yyzy
          mul r19.xy, r7.xyxx, r18.yzyy
          movc r18.yz, r15.wwww, r19.xxyx, r18.yyzy
          if_nz r17.x
            mul r19.xy, r6.xyxx, r18.yzyy
            mad r19.zw, r19.xxxy, r6.wwww, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r20.xyz, r19.zwzz, t0.xyzw, s0, l(0.000000)
            mad r19.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), r19.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r21.xyzw, r19.zwzz, t0.xyzw, s0, l(0.000000)
            mad r19.xy, r19.xyxx, r7.zzzz, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r19.xyxx, t0.xyzw, s0, l(0.000000)
            switch cb0[13].x
              case l(0)
              mov r21.x, r20.x
              mov r21.z, r19.z
              break 
              case l(1)
              mov r21.y, r19.y
              mov r21.z, r20.z
              break 
              case l(2)
              mov r21.x, r19.x
              mov r21.y, r20.y
              break 
              case l(3)
              mov r21.x, r20.x
              mov r21.y, r19.y
              break 
              case l(4)
              mov r21.y, r20.y
              mov r21.z, r19.z
              break 
              default 
              mov r21.x, r19.x
              mov r21.z, r20.z
              break 
            endswitch 
          else 
            mad r19.xy, r18.yzyy, r6.xzxx, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r21.xyzw, r19.xyxx, t0.xyzw, s0, l(0.000000)
          endif 
          ge r18.w, r21.w, r5.w
          mad r19.x, r21.w, l(2.000000), l(-1.000000)
          mul r19.x, |r19.x|, |r19.x|
          mul r19.x, r19.x, r19.x
          movc r18.w, r18.w, l(1.000000), r19.x
          dp2 r18.y, r18.yzyy, r18.yzyy
          sqrt r18.y, r18.y
          log r18.y, r18.y
          mul r18.y, r18.y, cb0[12].x
          exp r18.y, r18.y
          add r18.y, r18.y, l(-1.000000)
          mad r18.y, cb0[12].y, r18.y, l(1.000000)
          mul r18.y, r18.y, r18.w
          movc r18.y, r16.w, r18.y, r18.w
          log r19.xyz, |r21.xyzx|
          mul r19.xyz, r19.xyzx, cb0[12].zzzz
          exp r19.xyz, r19.xyzx
          mad r16.xyz, r19.xyzx, r18.yyyy, r16.xyzx
          add r17.y, r17.y, r18.y
          add r17.w, r17.w, l(1.000000)
          lt r18.x, r17.w, r9.w
        endloop 
        mov r11.xyz, r16.xyzx
        mov r13.x, r17.y
        ige r13.z, l(3), r14.y
        mov r13.y, r14.y
      endloop 
      mov r4.xyz, r11.xyzx
      mov r0.z, r13.x
      add r9.w, r9.w, l(1.000000)
      ge r10.x, r0.w, r9.w
    endloop 
    break 
    default 
    add r2.w, -cb0[12].y, l(1.000000)
    movc r2.w, cb0[11].w, r2.w, l(1.000000)
    log r2.xyz, |r2.xyzx|
    mul r2.xyz, r2.xyzx, cb0[12].zzzz
    exp r2.xyz, r2.xyzx
    mul r2.xyz, r2.wwww, r2.xyzx
    mul r3.x, r3.z, cb0[10].z
    movc r3.x, cb0[10].y, r3.x, r3.z
    mul r4.w, cb0[9].x, cb0[15].z
    mad r4.w, r4.w, l(0.005000), cb0[8].z
    movc r4.w, cb0[8].w, r4.w, cb0[8].z
    mul r5.xy, v1.yyyy, l(905.516663, 955.516663, 0.000000, 0.000000)
    mad r5.x, v1.x, l(1.666667), r5.x
    sincos r5.x, null, r5.x
    mul r5.x, r5.x, l(493013.000000)
    frc r6.x, r5.x
    mad r5.x, v1.x, l(1.666667), -r5.y
    sincos null, r5.x, r5.x
    mul r5.x, r5.x, l(289013.000000)
    frc r6.y, r5.x
    add r5.xy, r6.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r5.xy, r5.xyxx, cb0[11].zzzz, l(1.000000, 1.000000, 0.000000, 0.000000)
    movc r5.xy, cb0[11].yyyy, r5.xyxx, l(0,0,0,0)
    mul r5.z, r4.w, l(0.017453)
    sincos r6.x, r7.x, r5.z
    mov x0[0].y, r6.x
    mov x0[0].x, r7.x
    mad r6.xyzw, r4.wwww, l(0.017453, 0.017453, 0.017453, 0.017453), l(1.256637, 2.513274, 3.769911, 5.026548)
    sincos r6.x, r7.x, r6.x
    mov x0[1].y, r6.x
    mov x0[1].x, r7.x
    sincos r6.x, r7.x, r6.y
    mov x0[2].y, r6.x
    mov x0[2].x, r7.x
    sincos r6.x, r7.x, r6.z
    mov x0[3].y, r6.x
    mov x0[3].x, r7.x
    sincos r6.x, r7.x, r6.w
    mov x0[4].y, r6.x
    mov x0[4].x, r7.x
    mad r4.w, r4.w, l(0.017453), l(6.283185)
    sincos r6.x, r7.x, r4.w
    mov x0[5].y, r6.x
    mov x0[5].x, r7.x
    ge r4.w, r0.w, l(1.000000)
    mad r5.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), l(0.000000, 0.000000, -0.500000, -0.500000)
    mad r6.xy, v1.yxyy, l(1.666667, -1.666667, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
    dp2 r6.z, r6.xyxx, r6.xyxx
    rsq r6.z, r6.z
    mul r6.xy, r6.zzzz, r6.xyxx
    dp2 r5.z, r5.zwzz, r5.zwzz
    sqrt r5.z, r5.z
    mul r5.z, r5.z, cb0[11].x
    mul r5.z, r5.z, l(2.221000)
    sincos null, r5.z, r5.z
    add r5.w, -r5.z, l(1.000000)
    mul r6.z, r1.w, l(0.990000)
    add r6.w, -cb0[13].y, l(1.000000)
    add r7.x, cb0[13].y, l(1.000000)
    mov r3.yz, r3.wwww
    mov r4.xyz, r2.xyzx
    mov r3.w, cb0[9].y
    mov r7.y, cb0[9].w
    mov r7.z, cb0[10].w
    mov r7.w, cb0[11].y
    mov r8.x, cb0[11].w
    mov r8.y, cb0[12].w
    mov r0.z, r2.w
    mov r8.z, l(1.000000)
    mov r8.w, r4.w
    loop 
      breakc_z r8.w
      div r9.x, r8.z, r0.w
      lt r9.y, l(0.000000), r8.z
      mov r10.xyz, r4.xyzx
      mov r9.z, r3.w
      mov r9.w, r7.y
      mov r10.w, r7.z
      mov r11.x, r7.w
      mov r11.yz, r8.xxyx
      mov r11.w, r0.z
      mov r12.xy, l(1,-1,0,0)
      loop 
        breakc_z r12.y
        iadd r12.zw, r12.xxxx, l(0, 0, -1, 1)
        mov r13.xy, x0[r12.z + 0].xyxx
        mov r13.zw, x0[r12.x + 0].xxxy
        add r13.zw, -r13.xxxy, r13.zzzw
        mov r14.xyz, r10.xyzx
        mov r12.z, r9.z
        mov r14.w, r9.w
        mov r15.x, r10.w
        mov r15.yzw, r11.xxyz
        mov r16.x, r11.w
        mov r16.z, l(0)
        mov r16.yw, r9.xxxy
        loop 
          breakc_z r16.w
          div r17.x, r16.z, r8.z
          mad r17.y, r17.x, l(6.283185), l(-1.570796)
          sincos r17.y, null, r17.y
          mad r17.y, r17.y, cb0[10].x, l(1.000000)
          mul r17.y, r16.y, r17.y
          movc r16.y, r14.w, r17.y, r16.y
          mad r17.xy, r17.xxxx, r13.zwzz, r13.xyxx
          mul r17.xy, r16.yyyy, r17.xyxx
          dp2 r17.z, r17.xyxx, r17.xyxx
          rsq r17.z, r17.z
          mul r17.zw, r17.zzzz, r17.xxxy
          mad r17.zw, r17.zzzw, r16.yyyy, -r17.xxxy
          mad r17.zw, cb0[9].zzzz, r17.zzzw, r17.xxxy
          movc r17.xy, r12.zzzz, r17.zwzz, r17.xyxx
          dp2 r17.z, r6.xyxx, r17.xyxx
          mul r17.zw, r6.xxxy, r17.zzzz
          mul r17.zw, r5.wwww, r17.zzzw
          mad r17.zw, r17.xxxy, r5.zzzz, r17.zzzw
          movc r17.xy, r15.xxxx, r17.zwzz, r17.xyxx
          mul r17.zw, r5.xxxy, r17.xxxy
          movc r17.xy, r15.yyyy, r17.zwzz, r17.xyxx
          if_nz r15.w
            mul r17.zw, r3.xxxy, r17.xxxy
            mad r18.xy, r17.zwzz, r6.wwww, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r18.xyz, r18.xyxx, t0.xyzw, s0, l(0.000000)
            mad r19.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000), r17.zwzz
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r19.xyxx, t0.xyzw, s0, l(0.000000)
            mad r17.zw, r17.zzzw, r7.xxxx, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r20.xyz, r17.zwzz, t0.xyzw, s0, l(0.000000)
            switch cb0[13].x
              case l(0)
              mov r19.x, r18.x
              mov r19.z, r20.z
              break 
              case l(1)
              mov r19.y, r20.y
              mov r19.z, r18.z
              break 
              case l(2)
              mov r19.x, r20.x
              mov r19.y, r18.y
              break 
              case l(3)
              mov r19.x, r18.x
              mov r19.y, r20.y
              break 
              case l(4)
              mov r19.y, r18.y
              mov r19.z, r20.z
              break 
              default 
              mov r19.x, r20.x
              mov r19.z, r18.z
              break 
            endswitch 
          else 
            mad r17.zw, r17.xxxy, r3.xxxz, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r17.zwzz, t0.xyzw, s0, l(0.000000)
          endif 
          ge r17.z, r19.w, r6.z
          mad r17.w, r19.w, l(2.000000), l(-1.000000)
          mul r17.w, |r17.w|, |r17.w|
          mul r17.w, r17.w, r17.w
          movc r17.z, r17.z, l(1.000000), r17.w
          dp2 r17.x, r17.xyxx, r17.xyxx
          sqrt r17.x, r17.x
          log r17.x, r17.x
          mul r17.x, r17.x, cb0[12].x
          exp r17.x, r17.x
          add r17.x, r17.x, l(-1.000000)
          mad r17.x, cb0[12].y, r17.x, l(1.000000)
          mul r17.x, r17.x, r17.z
          movc r17.x, r15.z, r17.x, r17.z
          log r17.yzw, |r19.xxyz|
          mul r17.yzw, r17.yyzw, cb0[12].zzzz
          exp r17.yzw, r17.yyzw
          mad r14.xyz, r17.yzwy, r17.xxxx, r14.xyzx
          add r16.x, r16.x, r17.x
          add r16.z, r16.z, l(1.000000)
          lt r16.w, r16.z, r8.z
        endloop 
        mov r10.xyz, r14.xyzx
        mov r11.w, r16.x
        ige r12.y, l(5), r12.w
        mov r12.xy, r12.wyww
      endloop 
      mov r4.xyz, r10.xyzx
      mov r0.z, r11.w
      add r8.z, r8.z, l(1.000000)
      ge r8.w, r0.w, r8.z
    endloop 
    break 
  endswitch 
  div r0.xyz, r4.xyzx, r0.zzzz
  max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[12].z
  log r0.xyz, r0.xyzx
  mul r0.xyz, r0.xyzx, r0.wwww
  exp r1.xyz, r0.xyzx
endif 
mov o0.xyzw, r1.xyzw
ret 
// Approximately 812 instruction slots used
