//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int iUIInfo;                       // Offset:    0 Size:     4 [unused]
//   int iUIWhiteLevelFormula;          // Offset:    4 Size:     4
//   float3 f3UICurveWhiteParam;        // Offset:   16 Size:    12
//   int iUIBlackLevelFormula;          // Offset:   28 Size:     4
//   float3 f3UICurveBlackParam;        // Offset:   32 Size:    12
//   float fUIColorTempScaling;         // Offset:   44 Size:     4
//   float fUISaturation;               // Offset:   48 Size:     4
//   float3 fUITintWarm;                // Offset:   52 Size:    12
//   float3 fUITintCold;                // Offset:   64 Size:    12
//   int iUIDebug;                      // Offset:   76 Size:     4
//   float fUIStrength;                 // Offset:   80 Size:     4
//   int2 AdaptiveTintDebugPosition;    // Offset:   84 Size:     8 [unused]
//   float AdaptiveTintDebugOpacity;    // Offset:   92 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__Stats__shared_texStatsAvgLuma    texture  float4          2d             t8      1 
// __V__Stats__shared_texStatsAvgColorTemp    texture  float4          2d            t10      1 
// __V__texAlphaCheckerboard         texture  float4          2d            t14      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mul r1.xyz, r0.xyzx, cb0[4].xyzx
ld_indexable(texture2d)(float,float,float,float) r0.w, l(0, 0, 0, 0), t10.yzwx
mul r0.w, r0.w, cb0[2].w
max r0.w, r0.w, l(-0.595700)
min r0.w, r0.w, l(0.595700)
add r0.w, r0.w, l(0.595700)
mul r0.w, r0.w, l(0.839349)
mad r2.xyz, cb0[3].yzwy, r0.xyzx, -r1.xyzx
mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
ld_indexable(texture2d)(float,float,float,float) r1.w, l(0, 0, 0, 0), t8.yzwx
add r2.x, r1.w, -cb0[2].y
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.x
mad r2.y, cb0[2].x, r2.y, cb0[2].z
ieq r2.zw, cb0[1].wwww, l(0, 0, 2, 1)
mul r3.x, r2.x, cb0[2].x
mad r3.x, r3.x, l(2.000000), cb0[2].z
mad r2.x, r2.x, cb0[2].x, cb0[2].z
movc r2.x, r2.w, r3.x, r2.x
movc_sat r2.x, r2.z, r2.y, r2.x
add r1.w, r1.w, -cb0[1].y
mul r2.y, r1.w, r1.w
mul r2.y, r1.w, r2.y
mad r2.y, cb0[1].x, r2.y, cb0[1].z
ieq r2.zw, cb0[0].yyyy, l(0, 0, 2, 1)
mul r3.x, r1.w, cb0[1].x
mad r3.x, r3.x, l(2.000000), cb0[1].z
mad r1.w, r1.w, cb0[1].x, cb0[1].z
movc r1.w, r2.w, r3.x, r1.w
movc_sat r1.w, r2.z, r2.y, r1.w
max r2.y, r0.w, r2.x
min r2.y, r1.w, r2.y
add r2.z, -r2.x, r1.w
lt r2.w, |r2.z|, l(0.000001)
movc r2.z, r2.w, l(0.000001), r2.z
max r2.y, r2.x, r2.y
min r1.w, r1.w, r2.y
add r1.w, -r2.x, r1.w
div r2.xyz, r1.wwww, r2.zzzz
ieq r1.w, cb0[4].w, l(1)
if_nz r1.w
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t14.xyzw, s0
  add r3.xyz, -r1.xyzx, r3.xyzx
  mad o0.xyz, r2.zzzz, r3.xyzx, r1.xyzx
  ret 
endif 
ieq r1.w, cb0[4].w, l(2)
if_nz r1.w
  mov o0.xyz, r2.xyzx
  ret 
endif 
add r1.w, cb0[3].x, l(1.000000)
add r2.xyw, -r0.wwww, r0.xyxz
mad r2.xyw, r1.wwww, r2.xyxw, r0.wwww
add r2.xyw, -r1.xyxz, r2.xyxw
mad r1.xyz, r2.zzzz, r2.xywx, r1.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad o0.xyz, cb0[5].xxxx, r1.xyzx, r0.xyzx
ret 
// Approximately 61 instruction slots used
