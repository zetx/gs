//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool LIGHTROOM_ENABLE_LUT;         // Offset:    0 Size:     4 [unused]
//   int LIGHTROOM_LUT_TILE_SIZE;       // Offset:    4 Size:     4 [unused]
//   int LIGHTROOM_LUT_TILE_COUNT;      // Offset:    8 Size:     4 [unused]
//   int LIGHTROOM_LUT_SCROLL;          // Offset:   12 Size:     4 [unused]
//   bool LIGHTROOM_ENABLE_CURVE_DISPLAY;// Offset:   16 Size:     4 [unused]
//   bool LIGHTROOM_ENABLE_CLIPPING_DISPLAY;// Offset:   20 Size:     4 [unused]
//   float LIGHTROOM_RED_HUESHIFT;      // Offset:   24 Size:     4 [unused]
//   float LIGHTROOM_ORANGE_HUESHIFT;   // Offset:   28 Size:     4 [unused]
//   float LIGHTROOM_YELLOW_HUESHIFT;   // Offset:   32 Size:     4 [unused]
//   float LIGHTROOM_GREEN_HUESHIFT;    // Offset:   36 Size:     4 [unused]
//   float LIGHTROOM_AQUA_HUESHIFT;     // Offset:   40 Size:     4 [unused]
//   float LIGHTROOM_BLUE_HUESHIFT;     // Offset:   44 Size:     4 [unused]
//   float LIGHTROOM_MAGENTA_HUESHIFT;  // Offset:   48 Size:     4 [unused]
//   float LIGHTROOM_RED_EXPOSURE;      // Offset:   52 Size:     4
//   float LIGHTROOM_ORANGE_EXPOSURE;   // Offset:   56 Size:     4
//   float LIGHTROOM_YELLOW_EXPOSURE;   // Offset:   60 Size:     4
//   float LIGHTROOM_GREEN_EXPOSURE;    // Offset:   64 Size:     4
//   float LIGHTROOM_AQUA_EXPOSURE;     // Offset:   68 Size:     4
//   float LIGHTROOM_BLUE_EXPOSURE;     // Offset:   72 Size:     4
//   float LIGHTROOM_MAGENTA_EXPOSURE;  // Offset:   76 Size:     4
//   float LIGHTROOM_RED_SATURATION;    // Offset:   80 Size:     4
//   float LIGHTROOM_ORANGE_SATURATION; // Offset:   84 Size:     4
//   float LIGHTROOM_YELLOW_SATURATION; // Offset:   88 Size:     4
//   float LIGHTROOM_GREEN_SATURATION;  // Offset:   92 Size:     4
//   float LIGHTROOM_AQUA_SATURATION;   // Offset:   96 Size:     4
//   float LIGHTROOM_BLUE_SATURATION;   // Offset:  100 Size:     4
//   float LIGHTROOM_MAGENTA_SATURATION;// Offset:  104 Size:     4
//   float LIGHTROOM_GLOBAL_BLACK_LEVEL;// Offset:  108 Size:     4
//   float LIGHTROOM_GLOBAL_WHITE_LEVEL;// Offset:  112 Size:     4
//   float LIGHTROOM_GLOBAL_EXPOSURE;   // Offset:  116 Size:     4
//   float LIGHTROOM_GLOBAL_GAMMA;      // Offset:  120 Size:     4
//   float LIGHTROOM_GLOBAL_BLACKS_CURVE;// Offset:  124 Size:     4
//   float LIGHTROOM_GLOBAL_SHADOWS_CURVE;// Offset:  128 Size:     4
//   float LIGHTROOM_GLOBAL_MIDTONES_CURVE;// Offset:  132 Size:     4
//   float LIGHTROOM_GLOBAL_HIGHLIGHTS_CURVE;// Offset:  136 Size:     4
//   float LIGHTROOM_GLOBAL_WHITES_CURVE;// Offset:  140 Size:     4
//   float LIGHTROOM_GLOBAL_CONTRAST;   // Offset:  144 Size:     4
//   float LIGHTROOM_GLOBAL_SATURATION; // Offset:  148 Size:     4
//   float LIGHTROOM_GLOBAL_VIBRANCE;   // Offset:  152 Size:     4
//   float LIGHTROOM_GLOBAL_TEMPERATURE;// Offset:  156 Size:     4
//   float LIGHTROOM_GLOBAL_TINT;       // Offset:  160 Size:     4
//   bool LIGHTROOM_ENABLE_VIGNETTE;    // Offset:  164 Size:     4 [unused]
//   bool LIGHTROOM_VIGNETTE_SHOW_RADII;// Offset:  168 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_RADIUS_INNER;// Offset:  172 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_RADIUS_OUTER;// Offset:  176 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_WIDTH;    // Offset:  180 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_HEIGHT;   // Offset:  184 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_AMOUNT;   // Offset:  188 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_CURVE;    // Offset:  192 Size:     4 [unused]
//   int LIGHTROOM_VIGNETTE_BLEND_MODE; // Offset:  196 Size:     4 [unused]
//   float FRAME_TIME;                  // Offset:  200 Size:     4 [unused]
//   int FRAME_COUNT;                   // Offset:  204 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
// TEXCOORD                 1   x           2     NONE   float   x   
// TEXCOORD                 2   x           3     NONE   float   x   
// TEXCOORD                 3   x           4     NONE   float   x   
// TEXCOORD                 4   x           5     NONE   float   x   
// TEXCOORD                 5   x           6     NONE   float   x   
// TEXCOORD                 6   x           7     NONE   float   x   
// TEXCOORD                 7   x           8     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[11], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps constant v2.x
dcl_input_ps constant v3.x
dcl_input_ps constant v4.x
dcl_input_ps constant v5.x
dcl_input_ps constant v6.x
dcl_input_ps constant v7.x
dcl_input_ps constant v8.x
dcl_output o0.xyzw
dcl_temps 8
mul r0.xy, v0.xyxx, l(0.015625, 0.015625, 0.000000, 0.000000)
round_ni r0.z, r0.x
frc r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(-0.007812, -0.007812, 0.000000, 0.000000)
mul r0.w, cb0[6].w, l(0.003922)
mad r0.z, r0.z, l(0.015873), -r0.w
mad r1.x, cb0[7].x, l(0.003922), -r0.w
mad r0.xy, r0.xyxx, l(1.015873, 1.015873, 0.000000, 0.000000), -r0.wwww
div_sat r0.xyz, r0.xyzx, r1.xxxx
exp r0.w, cb0[7].y
mul r0.xyz, r0.wwww, r0.xyzx
log r0.xy, r0.xyxx
log r0.z, r0.z
exp r1.xy, -cb0[7].zwzz
mul r0.xyz, r0.xyzx, r1.xxxx
exp r0.z, r0.z
min r0.z, r0.z, l(1.000000)
add r2.xyzw, r0.zzzz, l(-0.250000, -0.500000, -0.750000, -1.000000)
mul r3.xyz, r2.ywzy, l(4.000000, -4.000000, 4.000000, 0.000000)
mul r2.xyzw, r2.yxzx, l(-4.000000, 4.000000, -4.000000, -4.000000)
mov_sat r3.x, r3.x
mad r0.w, r3.x, l(-2.000000), l(3.000000)
mul r1.z, r3.x, r3.x
mul r0.w, r0.w, r1.z
min r1.z, r3.y, l(1.000000)
max r1.w, r3.z, l(0.000000)
mad r3.x, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r3.x
mul r0.w, r0.w, r1.z
mov_sat r2.xyz, r2.xyzx
max r1.z, r2.w, l(0.000000)
mad r3.xyz, r2.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mul r2.xyz, r2.xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mul r2.y, r2.z, r2.y
mad r2.z, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r2.z
mul r2.z, r0.z, l(4.000000)
log r0.z, r0.z
min r2.z, r2.z, l(1.000000)
mad r2.w, r2.z, l(-2.000000), l(3.000000)
mul r2.z, r2.z, r2.z
mul r2.z, r2.z, r2.w
mul r2.x, r2.x, r2.z
exp r3.xyzw, -cb0[8].xyzw
mul r2.x, r2.x, r3.x
mad r1.z, r1.z, r1.y, r2.x
mad r1.z, r2.y, r3.y, r1.z
mad r0.w, r0.w, r3.z, r1.z
mad r1.z, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.z, r1.w, r1.z
mad r0.w, r1.z, r3.w, r0.w
add r0.w, r0.w, l(-1.000000)
exp r0.w, r0.w
mul r0.z, r0.z, r0.w
exp r0.z, r0.z
mul r0.w, r0.z, r0.z
mad r1.z, -r0.z, l(2.000000), l(3.000000)
mad r0.w, r0.w, r1.z, -r0.z
mad_sat r2.z, cb0[9].x, r0.w, r0.z
exp r0.xy, r0.xyxx
min r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r4.xyzw, r0.yyyy, l(-0.250000, -0.500000, -0.750000, -1.000000)
mul r5.xyzw, r4.yxzx, l(-4.000000, 4.000000, -4.000000, -4.000000)
mul r1.xzw, r4.yywz, l(4.000000, 0.000000, -4.000000, 4.000000)
max r0.z, r5.w, l(0.000000)
mov_sat r5.xyz, r5.xyzx
mad r0.w, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r0.w
mad r4.xyz, r5.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mul r5.xyz, r5.xyzx, r5.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mul r5.xy, r0.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
min r5.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r5.zw, r5.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mul r5.xy, r5.xyxx, r5.xyxx
mul r5.xy, r5.xyxx, r5.zwzz
mul r0.w, r4.x, r5.y
mul r2.w, r4.z, r4.y
mul r0.w, r3.x, r0.w
mad r0.z, r0.z, r1.y, r0.w
mad r0.z, r2.w, r3.y, r0.z
mov_sat r1.x, r1.x
mad r0.w, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
min r1.x, r1.z, l(1.000000)
max r1.z, r1.w, l(0.000000)
mad r1.w, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.w
mul r0.w, r0.w, r1.x
mad r0.z, r0.w, r3.z, r0.z
mad r0.w, r1.z, l(-2.000000), l(3.000000)
mul r1.x, r1.z, r1.z
mul r0.w, r0.w, r1.x
mad r0.z, r0.w, r3.w, r0.z
add r0.z, r0.z, l(-1.000000)
exp r0.z, r0.z
log r0.yw, r0.xxxy
add r4.xyzw, r0.xxxx, l(-0.250000, -0.500000, -0.750000, -1.000000)
mul r0.x, r0.w, r0.z
exp r0.x, r0.x
mul r0.z, r0.x, r0.x
mad r0.w, -r0.x, l(2.000000), l(3.000000)
mad r0.z, r0.z, r0.w, -r0.x
mad_sat r2.y, cb0[9].x, r0.z, r0.x
lt r0.x, r2.y, r2.z
movc r6.xy, r0.xxxx, r2.zyzz, r2.yzyy
mul r7.xyzw, r4.yxzx, l(-4.000000, 4.000000, -4.000000, -4.000000)
mul r0.xzw, r4.yywz, l(4.000000, 0.000000, -4.000000, 4.000000)
max r1.x, r7.w, l(0.000000)
mov_sat r7.xyz, r7.xyzx
mad r1.z, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.z
mad r4.xyz, r7.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mul r5.yzw, r7.xxyz, r7.xxyz
mul r4.xyz, r4.xyzx, r5.yzwy
mul r1.z, r4.x, r5.x
mul r1.w, r4.z, r4.y
mul r1.z, r3.x, r1.z
mad r1.x, r1.x, r1.y, r1.z
mad r1.x, r1.w, r3.y, r1.x
mov_sat r0.x, r0.x
mad r1.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r1.y
min r0.z, r0.z, l(1.000000)
max r0.w, r0.w, l(0.000000)
mad r1.y, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r1.y
mul r0.x, r0.z, r0.x
mad r0.x, r0.x, r3.z, r1.x
mad r0.z, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.z, r0.w, r0.z
mad r0.x, r0.z, r3.w, r0.x
add r0.x, r0.x, l(-1.000000)
exp r0.x, r0.x
mul r0.x, r0.y, r0.x
exp r0.x, r0.x
mul r0.y, r0.x, r0.x
mad r0.z, -r0.x, l(2.000000), l(3.000000)
mad r0.y, r0.y, r0.z, -r0.x
mad_sat r6.z, cb0[9].x, r0.y, r0.x
lt r0.x, r6.z, r6.x
movc r0.xyz, r0.xxxx, r6.xyzx, r6.zyxz
mov r2.x, r6.z
min r0.y, r0.y, r0.z
add r0.y, -r0.y, r0.x
mad_sat r0.x, -r0.y, l(0.500000), r0.x
mad r0.y, r0.x, l(2.000000), l(-1.000000)
add r0.y, -|r0.y|, l(1.000000)
mad r1.xyz, r0.yyyy, l(0.500000, -0.133340, -0.500000, 0.000000), r0.xxxx
add r1.xyz, -r2.xyzx, r1.xyzx
mad r1.xyz, cb0[9].wwww, r1.xyzx, r2.xyzx
mad r3.xyz, r0.yyyy, l(-0.500000, 0.133340, 0.500000, 0.000000), r0.xxxx
add r3.xyz, -r2.xyzx, r3.xyzx
mad r2.xyz, -cb0[9].wwww, r3.xyzx, r2.xyzx
lt r0.z, l(0.000000), cb0[9].w
movc r1.xyz, r0.zzzz, r1.xyzx, r2.xyzx
mad r2.xyz, r0.yyyy, l(-0.366660, 0.500000, -0.500000, 0.000000), r0.xxxx
mad r0.xyw, r0.yyyy, l(0.366660, -0.500000, 0.000000, 0.500000), r0.xxxx
add r0.xyw, -r1.xyxz, r0.xyxw
mad r0.xyw, -cb0[10].xxxx, r0.xyxw, r1.xyxz
add r2.xyz, -r1.xyzx, r2.xyzx
mad r1.xyz, cb0[10].xxxx, r2.xyzx, r1.xyzx
movc_sat r0.xyw, r0.zzzz, r1.yzyx, r0.ywyx
lt r1.x, r0.x, r0.y
mov r2.xy, r0.yxyy
mov r3.xy, r2.yxyy
mov r2.zw, l(0,0,-1.000000,0.666667)
mov r3.zw, l(0,0,0,-0.333333)
movc r1.xyzw, r1.xxxx, r2.xyzw, r3.xyzw
lt r2.x, r0.w, r1.x
mov r0.xyz, r1.xywx
mov r1.xyw, r0.wywx
movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
add r1.x, -r0.y, r0.w
min r0.y, r0.y, r0.w
add r0.y, -r0.y, r0.x
mad r0.w, r0.y, l(6.000000), l(0.000000)
div r0.w, r1.x, r0.w
add r0.z, r0.z, r0.w
mad r1.z, -r0.y, l(0.500000), r0.x
mov r1.x, |r0.z|
mad r0.x, r1.z, l(2.000000), l(-1.000000)
add r0.x, -|r0.x|, l(1.000000)
div r0.x, r0.y, r0.x
mad_sat r0.x, r0.x, cb0[9].y, r0.x
log r0.x, r0.x
exp r0.y, -cb0[9].z
mul r0.x, r0.x, r0.y
exp r1.y, r0.x
mov_sat r1.xyz, r1.xyzx
mad r0.x, -r1.x, l(12.000000), l(1.000000)
add r2.xyzw, r1.xxxx, l(-1.000000, -0.083333, -0.166667, -0.333333)
mad r0.y, r2.x, l(6.000000), l(1.000000)
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.x, r0.y, r0.x
sqrt r0.y, r1.y
mul r3.xyz, r0.yyyy, cb0[3].yzwy
mul r4.xyzw, r0.yyyy, cb0[4].xyzw
add r0.y, -r1.z, l(1.000000)
mul r3.xyz, r0.yyyy, r3.xyzx
mul r4.xyzw, r0.yyyy, r4.xyzw
mul r4.xyzw, r1.yyyy, r4.xyzw
exp r4.xyzw, r4.xyzw
mul r4.xyzw, r1.zzzz, r4.yzxw
mul r0.yzw, r1.yyyy, r3.xxyz
exp r0.yzw, r0.yyzw
mul r0.yzw, r0.zzwy, r1.zzzz
mov_sat r0.yzw, r0.yyzw
mad_sat r3.xyzw, r1.yyyy, cb0[5].yxzw, r1.yyyy
mov_sat r3.xyzw, r3.xyzw
mad r1.z, r0.w, l(2.000000), l(-1.000000)
add r1.z, -|r1.z|, l(1.000000)
mul r1.z, r3.y, r1.z
mov_sat r1.w, v2.x
mad r5.xyz, r1.wwww, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r5.xyz, |r5.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r5.xyz, r5.xyzx, r1.zzzz, r0.wwww
mad r0.w, r0.y, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r3.x, r0.w
mov_sat r1.z, v3.x
mad r6.xyz, r1.zzzz, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r6.xyz, |r6.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r6.xyz, r6.xyzx, r0.wwww, r0.yyyy
mul r2.xyz, r2.yzzy, l(12.000000, 12.000000, 6.000000, 0.000000)
mul r0.y, r2.w, l(6.000000)
add r0.y, -|r0.y|, l(1.000000)
max r0.y, r0.y, l(0.000000)
add r2.xyz, -|r2.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r6.xyz, r6.xyzx, r2.xxxx
mad r5.xyz, r0.xxxx, r5.xyzx, r6.xyzx
ge r0.x, l(0.166667), r1.x
ge r0.w, r1.x, l(0.166667)
and r0.xw, r0.xxxw, l(0x3f800000, 0, 0, 0x3f800000)
mul r0.xw, r0.xxxw, r2.yyyz
max r0.x, r0.w, r0.x
mad r0.w, r0.z, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r3.z, r0.w
mov_sat r1.z, v4.x
mad r2.xyz, r1.zzzz, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r2.xyz, |r2.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r2.xyz, r2.xyzx, r0.wwww, r0.zzzz
mad r0.xzw, r0.xxxx, r2.xxyz, r5.xxyz
mov_sat r4.xyzw, r4.xyzw
mad r1.z, r4.z, l(2.000000), l(-1.000000)
add r1.z, -|r1.z|, l(1.000000)
mul r1.z, r3.w, r1.z
mov_sat r1.w, v5.x
mad r2.xyz, r1.wwww, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r2.xyz, |r2.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r2.xyz, r2.xyzx, r1.zzzz, r4.zzzz
mad r0.xyz, r0.yyyy, r2.xyzx, r0.xzwx
add r1.xzw, r1.xxxx, l(-0.500000, 0.000000, -0.666667, -0.833333)
mad_sat r2.xyz, r1.yyyy, cb0[6].yxzy, r1.yyyy
mul r1.xyz, r1.xzwx, l(6.000000, 6.000000, 6.000000, 0.000000)
add r1.xyz, -|r1.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov_sat r2.xyz, r2.xyzx
mad r0.w, r4.x, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r2.y, r0.w
mov_sat r1.w, v6.x
mad r3.xyz, r1.wwww, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r3.xyz, |r3.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r3.xyz, r3.xyzx, r0.wwww, r4.xxxx
mad r0.xyz, r1.xxxx, r3.xyzx, r0.xyzx
mad r0.w, r4.y, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r2.x, r0.w
mov_sat r1.x, v7.x
mad r2.xyw, r1.xxxx, l(6.000000, 6.000000, 0.000000, 6.000000), l(-3.000000, -2.000000, 0.000000, -4.000000)
mad_sat r2.xyw, |r2.xyxw|, l(1.000000, -1.000000, 0.000000, -1.000000), l(-1.000000, 2.000000, 0.000000, 2.000000)
add r2.xyw, r2.xyxw, l(-0.500000, -0.500000, 0.000000, -0.500000)
mad r2.xyw, r2.xyxw, r0.wwww, r4.yyyy
mad r0.xyz, r1.yyyy, r2.xywx, r0.xyzx
mad r0.w, r4.w, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r2.z, r0.w
mov_sat r1.x, v8.x
mad r1.xyw, r1.xxxx, l(6.000000, 6.000000, 0.000000, 6.000000), l(-3.000000, -2.000000, 0.000000, -4.000000)
mad_sat r1.xyw, |r1.xyxw|, l(1.000000, -1.000000, 0.000000, -1.000000), l(-1.000000, 2.000000, 0.000000, 2.000000)
add r1.xyw, r1.xyxw, l(-0.500000, -0.500000, 0.000000, -0.500000)
mad r1.xyw, r1.xyxw, r0.wwww, r4.wwww
mad o0.xyz, r1.zzzz, r1.xywx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 304 instruction slots used
