//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool LIGHTROOM_ENABLE_LUT;         // Offset:    0 Size:     4
//   int LIGHTROOM_LUT_TILE_SIZE;       // Offset:    4 Size:     4
//   int LIGHTROOM_LUT_TILE_COUNT;      // Offset:    8 Size:     4
//   int LIGHTROOM_LUT_SCROLL;          // Offset:   12 Size:     4
//   bool LIGHTROOM_ENABLE_CURVE_DISPLAY;// Offset:   16 Size:     4 [unused]
//   bool LIGHTROOM_ENABLE_CLIPPING_DISPLAY;// Offset:   20 Size:     4 [unused]
//   float LIGHTROOM_RED_HUESHIFT;      // Offset:   24 Size:     4 [unused]
//   float LIGHTROOM_ORANGE_HUESHIFT;   // Offset:   28 Size:     4 [unused]
//   float LIGHTROOM_YELLOW_HUESHIFT;   // Offset:   32 Size:     4 [unused]
//   float LIGHTROOM_GREEN_HUESHIFT;    // Offset:   36 Size:     4 [unused]
//   float LIGHTROOM_AQUA_HUESHIFT;     // Offset:   40 Size:     4 [unused]
//   float LIGHTROOM_BLUE_HUESHIFT;     // Offset:   44 Size:     4 [unused]
//   float LIGHTROOM_MAGENTA_HUESHIFT;  // Offset:   48 Size:     4 [unused]
//   float LIGHTROOM_RED_EXPOSURE;      // Offset:   52 Size:     4 [unused]
//   float LIGHTROOM_ORANGE_EXPOSURE;   // Offset:   56 Size:     4 [unused]
//   float LIGHTROOM_YELLOW_EXPOSURE;   // Offset:   60 Size:     4 [unused]
//   float LIGHTROOM_GREEN_EXPOSURE;    // Offset:   64 Size:     4 [unused]
//   float LIGHTROOM_AQUA_EXPOSURE;     // Offset:   68 Size:     4 [unused]
//   float LIGHTROOM_BLUE_EXPOSURE;     // Offset:   72 Size:     4 [unused]
//   float LIGHTROOM_MAGENTA_EXPOSURE;  // Offset:   76 Size:     4 [unused]
//   float LIGHTROOM_RED_SATURATION;    // Offset:   80 Size:     4 [unused]
//   float LIGHTROOM_ORANGE_SATURATION; // Offset:   84 Size:     4 [unused]
//   float LIGHTROOM_YELLOW_SATURATION; // Offset:   88 Size:     4 [unused]
//   float LIGHTROOM_GREEN_SATURATION;  // Offset:   92 Size:     4 [unused]
//   float LIGHTROOM_AQUA_SATURATION;   // Offset:   96 Size:     4 [unused]
//   float LIGHTROOM_BLUE_SATURATION;   // Offset:  100 Size:     4 [unused]
//   float LIGHTROOM_MAGENTA_SATURATION;// Offset:  104 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_BLACK_LEVEL;// Offset:  108 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_WHITE_LEVEL;// Offset:  112 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_EXPOSURE;   // Offset:  116 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_GAMMA;      // Offset:  120 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_BLACKS_CURVE;// Offset:  124 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_SHADOWS_CURVE;// Offset:  128 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_MIDTONES_CURVE;// Offset:  132 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_HIGHLIGHTS_CURVE;// Offset:  136 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_WHITES_CURVE;// Offset:  140 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_CONTRAST;   // Offset:  144 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_SATURATION; // Offset:  148 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_VIBRANCE;   // Offset:  152 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_TEMPERATURE;// Offset:  156 Size:     4 [unused]
//   float LIGHTROOM_GLOBAL_TINT;       // Offset:  160 Size:     4 [unused]
//   bool LIGHTROOM_ENABLE_VIGNETTE;    // Offset:  164 Size:     4 [unused]
//   bool LIGHTROOM_VIGNETTE_SHOW_RADII;// Offset:  168 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_RADIUS_INNER;// Offset:  172 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_RADIUS_OUTER;// Offset:  176 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_WIDTH;    // Offset:  180 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_HEIGHT;   // Offset:  184 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_AMOUNT;   // Offset:  188 Size:     4 [unused]
//   float LIGHTROOM_VIGNETTE_CURVE;    // Offset:  192 Size:     4 [unused]
//   int LIGHTROOM_VIGNETTE_BLEND_MODE; // Offset:  196 Size:     4 [unused]
//   float FRAME_TIME;                  // Offset:  200 Size:     4 [unused]
//   int FRAME_COUNT;                   // Offset:  204 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__qUINT__BackBufferTex         texture  float4          2d             t0      1 
// __V__LutTexInternal               texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   x           2     NONE   float       
// TEXCOORD                 2   x           3     NONE   float       
// TEXCOORD                 3   x           4     NONE   float       
// TEXCOORD                 4   x           5     NONE   float       
// TEXCOORD                 5   x           6     NONE   float       
// TEXCOORD                 6   x           7     NONE   float       
// TEXCOORD                 7   x           8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
mov r0.y, v0.y
itof r1.xyz, cb0[0].yzwy
mad r0.x, r1.z, l(3440.000000), v0.x
div r0.yz, r0.xxyx, r1.xxxx
frc r0.zw, r0.yyyz
round_ni r0.y, r0.y
div r1.z, l(0.500000), r1.x
add r0.zw, r0.zzzw, -r1.zzzz
rcp r1.z, r1.x
add r1.z, -r1.z, l(1.000000)
div r2.xy, r0.zwzz, r1.zzzz
add r0.z, r1.y, l(-1.000000)
div r2.z, r0.y, r0.z
mul r0.yzw, r2.xxyz, l(0.000000, 255.000000, 255.000000, 255.000000)
round_ni r0.yzw, r0.yyzw
mul r0.yzw, r0.yyzw, l(0.000000, 0.003922, 0.003922, 0.003922)
mul r1.y, r1.y, r1.x
lt r1.x, v0.y, r1.x
lt r0.x, r0.x, r1.y
and r0.x, r1.x, r0.x
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
movc r0.xyz, cb0[0].xxxx, r0.xyzx, r1.xyzx
mov o0.w, r1.w
mad r0.xy, r0.xyxx, l(63.000000, 63.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.z, r0.z, l(63.000000)
mul r1.yz, r0.xxyx, l(0.000000, 0.000244, 0.015625, 0.000000)
round_ni r0.x, r0.z
frc r0.y, r0.z
mad r1.x, r0.x, l(0.015625), r1.y
add r1.w, r1.x, l(0.015625)
sample_indexable(texture2d)(float,float,float,float) r0.xzw, r1.xzxx, t4.xwyz, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.wzww, t4.xyzw, s0
add r1.xyz, -r0.xzwx, r1.xyzx
mad o0.xyz, r0.yyyy, r1.xyzx, r0.xzwx
ret 
// Approximately 36 instruction slots used
