//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int iBloomMixmode;                 // Offset:    0 Size:     4
//   float fBloomThreshold;             // Offset:    4 Size:     4 [unused]
//   float fBloomAmount;                // Offset:    8 Size:     4 [unused]
//   float fBloomSaturation;            // Offset:   12 Size:     4
//   float3 fBloomTint;                 // Offset:   16 Size:    12
//   bool bLensdirtEnable;              // Offset:   28 Size:     4
//   int iLensdirtMixmode;              // Offset:   32 Size:     4
//   float fLensdirtIntensity;          // Offset:   36 Size:     4
//   float fLensdirtSaturation;         // Offset:   40 Size:     4
//   float3 fLensdirtTint;              // Offset:   48 Size:    12 [unused]
//   bool bAnamFlareEnable;             // Offset:   60 Size:     4
//   float fAnamFlareThreshold;         // Offset:   64 Size:     4 [unused]
//   float fAnamFlareWideness;          // Offset:   68 Size:     4 [unused]
//   float fAnamFlareAmount;            // Offset:   72 Size:     4 [unused]
//   float fAnamFlareCurve;             // Offset:   76 Size:     4
//   float3 fAnamFlareColor;            // Offset:   80 Size:    12
//   bool bLenzEnable;                  // Offset:   92 Size:     4
//   float fLenzIntensity;              // Offset:   96 Size:     4 [unused]
//   float fLenzThreshold;              // Offset:  100 Size:     4 [unused]
//   bool bChapFlareEnable;             // Offset:  104 Size:     4
//   float fChapFlareTreshold;          // Offset:  108 Size:     4 [unused]
//   int iChapFlareCount;               // Offset:  112 Size:     4 [unused]
//   float fChapFlareDispersal;         // Offset:  116 Size:     4 [unused]
//   float fChapFlareSize;              // Offset:  120 Size:     4 [unused]
//   float3 fChapFlareCA;               // Offset:  128 Size:    12 [unused]
//   float fChapFlareIntensity;         // Offset:  140 Size:     4 [unused]
//   bool bGodrayEnable;                // Offset:  144 Size:     4
//   float fGodrayDecay;                // Offset:  148 Size:     4 [unused]
//   float fGodrayExposure;             // Offset:  152 Size:     4 [unused]
//   float fGodrayWeight;               // Offset:  156 Size:     4 [unused]
//   float fGodrayDensity;              // Offset:  160 Size:     4 [unused]
//   float fGodrayThreshold;            // Offset:  164 Size:     4 [unused]
//   int iGodraySamples;                // Offset:  168 Size:     4 [unused]
//   float fFlareLuminance;             // Offset:  172 Size:     4 [unused]
//   float fFlareBlur;                  // Offset:  176 Size:     4 [unused]
//   float fFlareIntensity;             // Offset:  180 Size:     4 [unused]
//   float3 fFlareTint;                 // Offset:  192 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__texDirt                      texture  float4          2d             t0      1 
// __V__texSprite                    texture  float4          2d             t2      1 
// __V__texBloom3                    texture  float4          2d             t8      1 
// __V__texBloom5                    texture  float4          2d            t12      1 
// __V__texLensFlare1                texture  float4          2d            t14      1 
// __V__ReShade__BackBufferTex       texture  float4          2d            t18      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t18.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t8.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t12.xyzw, s0
mad r1.xyz, r2.xyzx, l(9.000000, 9.000000, 9.000000, 0.000000), r1.xyzx
mul_sat r1.xyz, r1.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
dp3 r1.w, r1.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
add r1.xyz, -r1.wwww, r1.xyzx
mad r1.xyz, cb0[0].wwww, r1.xyzx, r1.wwww
mul r3.xyz, r1.xyzx, cb0[1].xyzx
switch cb0[0].x
  case l(0)
  mad r0.xyz, r1.xyzx, cb0[1].xyzx, r0.xyzx
  break 
  case l(1)
  add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r1.xyz, -r1.xyzx, cb0[1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r0.xyz, -r4.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  break 
  case l(2)
  mov_sat r3.xyz, r3.xyzx
  add r1.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r1.xyz, -r1.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  max r0.xyz, r0.xyzx, r1.xyzx
  break 
  case l(3)
  max r0.xyz, r0.xyzx, r3.xyzx
  break 
  default 
  break 
endswitch 
if_nz cb0[3].w
  add r1.x, r2.w, r2.w
  mul r1.xyz, r1.xxxx, cb0[5].xyzx
  max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[4].w
  log r1.xyz, r1.xyzx
  mul r1.xyz, r1.xyzx, r1.wwww
  exp r1.xyz, r1.xyzx
  add r0.xyz, r0.xyzx, r1.xyzx
endif 
if_nz cb0[1].w
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
  dp3 r1.w, r2.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
  mul r1.w, r1.w, cb0[2].y
  mul r2.xyz, r1.wwww, r1.xyzx
  dp3 r2.x, r2.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
  mad r1.xyz, r1.xyzx, r1.wwww, -r2.xxxx
  mad r1.xyz, cb0[2].zzzz, r1.xyzx, r2.xxxx
  switch cb0[2].x
    case l(0)
    add r0.xyz, r0.xyzx, r1.xyzx
    break 
    case l(1)
    add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r0.xyz, -r2.xyzx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    break 
    case l(2)
    mov_sat r1.xyz, r1.xyzx
    add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r2.xyz, -r2.xyzx, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    max r0.xyz, r0.xyzx, r2.xyzx
    break 
    case l(3)
    max r0.xyz, r0.xyzx, r1.xyzx
    break 
    default 
    break 
  endswitch 
endif 
or r1.x, cb0[3].w, cb0[5].w
or r1.x, r1.x, cb0[9].x
or r1.x, r1.x, cb0[6].z
if_nz r1.x
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t14.xyzw, s0
  add r2.xyzw, v1.xyxy, l(-0.000145, -0.000347, 0.000145, 0.000347)
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.zwzz, t2.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.xwxx, t2.xyzw, s0
  add r3.xyz, r3.xyzx, r4.xyzx
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.zyzz, t2.xyzw, s0
  add r3.xyz, r3.xyzx, r4.xyzx
  sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t2.xyzw, s0
  add r2.xyz, r2.xyzx, r3.xyzx
  mul r1.xyz, r1.xyzx, r2.xyzx
  mad r0.xyz, r1.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r0.xyzx
endif 
mov o0.xyzw, r0.xyzw
ret 
// Approximately 88 instruction slots used
