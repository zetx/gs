//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float sharp_strength;              // Offset:    0 Size:     4
//   float sharp_clamp;                 // Offset:    4 Size:     4
//   int pattern;                       // Offset:    8 Size:     4
//   float offset_bias;                 // Offset:   12 Size:     4
//   bool debug;                        // Offset:   16 Size:     4
//   float sharpenEndDepth;             // Offset:   20 Size:     4
//   float sharpenMaxDeltaDepth;        // Offset:   24 Size:     4
//   float dofStartDepth;               // Offset:   28 Size:     4
//   float dofTransitionDepth;          // Offset:   32 Size:     4
//   float contourBlurMinDeltaDepth;    // Offset:   36 Size:     4
//   float contourDepthExponent;        // Offset:   40 Size:     4
//   float maxDepth;                    // Offset:   44 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div r0.w, r0.w, r1.x
lt r1.x, cb0[2].w, r0.w
if_nz r1.x
  mov o0.xyz, r0.xyzx
  ret 
endif 
add r1.xyzw, v1.xyxy, l(-0.000291, -0.000694, 0.000291, -0.000694)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div r1.x, r1.x, r1.y
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t2.yxzw, s0, l(0.000000)
mad r1.z, -r1.y, l(999.000000), l(1000.000000)
div r1.y, r1.y, r1.z
add r1.xy, r0.wwww, -r1.xyxx
lt r1.z, r0.w, cb0[1].y
ge r1.w, cb0[1].z, |r1.x|
and r1.z, r1.w, r1.z
ge r1.w, cb0[1].z, |r1.y|
and r1.z, r1.w, r1.z
ge r1.w, |r1.x|, cb0[2].y
ge r2.x, |r1.y|, cb0[2].y
or r1.w, r1.w, r2.x
add r1.x, |r1.y|, |r1.x|
mul r1.x, r1.x, l(5.000000)
min r1.x, r1.x, l(1.000000)
log r1.y, |r0.w|
mul r1.y, r1.y, cb0[2].z
exp r1.y, r1.y
mul r1.x, r1.y, r1.x
add r1.y, r0.w, -cb0[1].w
div r1.y, r1.y, cb0[2].x
movc r1.x, r1.w, r1.x, r1.y
ge r1.y, l(0.000000), r1.x
not r1.z, r1.z
and r1.y, r1.z, r1.y
if_nz r1.y
  if_nz cb0[1].x
    mul o0.xyz, r0.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
    ret 
  else 
    mov o0.xyz, r0.xyzx
    ret 
  endif 
endif 
ieq r2.xyz, cb0[0].zzzz, l(1, 2, 3, 0)
if_z cb0[0].z
  mad r3.xyzw, cb0[0].wwww, l(0.000097, 0.000231, -0.000097, -0.000231), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t0.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t0.xyzw, s0
  add r3.xyz, r3.xyzx, r4.xyzx
  mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r4.xyz, cb0[0].xxxx, l(0.318900, 1.072800, 0.108300, 0.000000)
else 
  mul r4.xyz, cb0[0].xxxx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mov r3.xyz, l(0,0,0,0)
endif 
if_nz r2.x
  mad r5.xyzw, cb0[0].wwww, l(0.000145, -0.000347, 0.000145, 0.000347), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t0.xyzw, s0
  mad r7.xyzw, -cb0[0].wwww, l(0.000145, 0.000347, 0.000145, -0.000347), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r8.xyz, r7.xyxx, t0.xyzw, s0
  add r6.xyz, r6.xyzx, r8.xyzx
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t0.xyzw, s0
  add r5.xyz, r5.xyzx, r6.xyzx
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, r7.zwzz, t0.xyzw, s0
  add r5.xyz, r5.xyzx, r6.xyzx
  mul r3.xyz, r5.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
endif 
if_nz r2.y
  mad r5.xyzw, cb0[0].wwww, l(0.000116, -0.000833, 0.000349, 0.000278), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r2.xyw, r5.xyxx, t0.xywz, s0
  mad r6.xyzw, -cb0[0].wwww, l(0.000349, 0.000278, 0.000116, -0.000833), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyxx, t0.xyzw, s0
  add r2.xyw, r2.xyxw, r7.xyxz
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t0.xyzw, s0
  add r2.xyw, r2.xyxw, r5.xyxz
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r6.zwzz, t0.xyzw, s0
  add r2.xyw, r2.xyxw, r5.xyxz
  mul r3.xyz, r2.xywx, l(0.250000, 0.250000, 0.250000, 0.000000)
  mul r4.xyz, r4.xyzx, l(0.510000, 0.510000, 0.510000, 0.000000)
endif 
if_nz r2.z
  mov r2.xw, l(0.000145,0,0,-0.000347)
  mul r2.yz, cb0[0].wwww, l(0.000000, -0.000694, -0.000291, 0.000000)
  add r2.xyzw, r2.xyzw, v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r2.xyxx, t0.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t0.xyzw, s0
  add r2.xyz, r2.xyzx, r5.xyzx
  mul r5.xw, cb0[0].wwww, l(0.000291, 0.000000, 0.000000, 0.000694)
  mov r5.yz, l(0,0.000347,-0.000145,0)
  add r5.xyzw, r5.xyzw, v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t0.xyzw, s0
  add r2.xyz, r2.xyzx, r6.xyzx
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t0.xyzw, s0
  add r2.xyz, r2.xyzx, r5.xyzx
  mul r3.xyz, r2.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
  mul r4.xyz, r4.xyzx, l(0.666000, 0.666000, 0.666000, 0.000000)
endif 
lt r1.y, l(0.000000), r1.x
if_nz r1.y
  mov_sat r1.x, r1.x
  if_nz cb0[1].x
    if_nz r1.w
      mul o0.xyz, r1.xxxx, l(0.000000, 0.000000, 1.000000, 0.000000)
      ret 
    else 
      mul o0.xyz, r1.xxxx, l(1.000000, 0.000000, 0.000000, 0.000000)
      ret 
    endif 
  endif 
  add r1.y, -r1.x, l(1.000000)
  mul r1.yzw, r0.xxyz, r1.yyyy
  mad o0.xyz, r3.xyzx, r1.xxxx, r1.yzwy
  ret 
endif 
lt r1.x, cb0[1].y, l(1.000000)
div r0.w, r0.w, cb0[1].y
add r0.w, -r0.w, l(1.000000)
mul r1.yzw, r0.wwww, r4.xxyz
movc r1.xyz, r1.xxxx, r1.yzwy, r4.xyzx
add r2.xyz, r0.xyzx, -r3.xyzx
div r0.w, l(0.500000), cb0[0].y
mul r1.xyz, r0.wwww, r1.xyzx
mov r2.w, l(1.000000)
mov r1.w, l(0.500000)
dp4_sat r0.w, r2.xyzw, r1.xyzw
dp2 r0.w, cb0[0].yyyy, r0.wwww
add r0.w, r0.w, -cb0[0].y
if_nz cb0[1].x
  mad r1.x, r0.w, l(4.000000), l(0.500000)
  mov_sat o0.xyz, r1.xxxx
  ret 
endif 
add o0.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 138 instruction slots used
