//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float DofScale;                    // Offset:    0 Size:     4 [unused]
//   float FocusTime;                   // Offset:    4 Size:     4
//   float2 FocusPoint;                 // Offset:    8 Size:     8
//   float FrameTime;                   // Offset:   16 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__FocalDOF_LastFocus           texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float       
// TEXCOORD                 1     z         1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t6
dcl_output o0.xyzw
dcl_temps 1
sample_l_indexable(texture2d)(float,float,float,float) r0.x, cb0[0].zwzz, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
ld_indexable(texture2d)(float,float,float,float) r0.y, l(0, 0, 0, 0), t6.yxzw
add r0.x, -r0.y, r0.x
div r0.z, cb0[1].x, cb0[0].y
mad r0.x, r0.z, r0.x, r0.y
mov_sat o0.xyzw, r0.xxxx
ret 
// Approximately 9 instruction slots used
