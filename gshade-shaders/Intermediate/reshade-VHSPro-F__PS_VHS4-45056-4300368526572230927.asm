//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float screenLinesNum;              // Offset:    0 Size:     4 [unused]
//   bool VHS_Bleed;                    // Offset:    4 Size:     4 [unused]
//   int VHS_BleedMode;                 // Offset:    8 Size:     4 [unused]
//   float bleedAmount;                 // Offset:   12 Size:     4 [unused]
//   bool VHS_FishEye;                  // Offset:   16 Size:     4 [unused]
//   bool VHS_FishEye_Hyperspace;       // Offset:   20 Size:     4 [unused]
//   float fisheyeBend;                 // Offset:   24 Size:     4 [unused]
//   float cutoffX;                     // Offset:   28 Size:     4 [unused]
//   float cutoffY;                     // Offset:   32 Size:     4 [unused]
//   float cutoffFadeX;                 // Offset:   36 Size:     4 [unused]
//   float cutoffFadeY;                 // Offset:   40 Size:     4 [unused]
//   bool VHS_Vignette;                 // Offset:   44 Size:     4 [unused]
//   float vignetteAmount;              // Offset:   48 Size:     4 [unused]
//   float vignetteSpeed;               // Offset:   52 Size:     4 [unused]
//   float noiseLinesNum;               // Offset:   56 Size:     4 [unused]
//   float noiseQuantizeX;              // Offset:   60 Size:     4 [unused]
//   bool VHS_FilmGrain;                // Offset:   64 Size:     4 [unused]
//   float filmGrainAmount;             // Offset:   68 Size:     4 [unused]
//   bool VHS_YIQNoise;                 // Offset:   72 Size:     4 [unused]
//   int signalNoiseType;               // Offset:   76 Size:     4 [unused]
//   float signalNoiseAmount;           // Offset:   80 Size:     4 [unused]
//   float signalNoisePower;            // Offset:   84 Size:     4 [unused]
//   bool VHS_LineNoise;                // Offset:   88 Size:     4 [unused]
//   float lineNoiseAmount;             // Offset:   92 Size:     4 [unused]
//   float lineNoiseSpeed;              // Offset:   96 Size:     4 [unused]
//   bool VHS_TapeNoise;                // Offset:  100 Size:     4 [unused]
//   float tapeNoiseTH;                 // Offset:  104 Size:     4 [unused]
//   float tapeNoiseAmount;             // Offset:  108 Size:     4 [unused]
//   float tapeNoiseSpeed;              // Offset:  112 Size:     4 [unused]
//   bool VHS_ScanLines;                // Offset:  116 Size:     4 [unused]
//   float scanLineWidth;               // Offset:  120 Size:     4 [unused]
//   bool VHS_LinesFloat;               // Offset:  124 Size:     4 [unused]
//   float linesFloatSpeed;             // Offset:  128 Size:     4 [unused]
//   bool VHS_Stretch;                  // Offset:  132 Size:     4 [unused]
//   bool VHS_Jitter_H;                 // Offset:  136 Size:     4 [unused]
//   float jitterHAmount;               // Offset:  140 Size:     4 [unused]
//   bool VHS_Jitter_V;                 // Offset:  144 Size:     4 [unused]
//   float jitterVAmount;               // Offset:  148 Size:     4 [unused]
//   float jitterVSpeed;                // Offset:  152 Size:     4 [unused]
//   bool VHS_Twitch_H;                 // Offset:  156 Size:     4 [unused]
//   float twitchHFreq;                 // Offset:  160 Size:     4 [unused]
//   bool VHS_Twitch_V;                 // Offset:  164 Size:     4 [unused]
//   float twitchVFreq;                 // Offset:  168 Size:     4 [unused]
//   bool VHS_SignalTweak;              // Offset:  172 Size:     4 [unused]
//   float signalAdjustY;               // Offset:  176 Size:     4 [unused]
//   float signalAdjustI;               // Offset:  180 Size:     4 [unused]
//   float signalAdjustQ;               // Offset:  184 Size:     4 [unused]
//   float signalShiftY;                // Offset:  188 Size:     4 [unused]
//   float signalShiftI;                // Offset:  192 Size:     4 [unused]
//   float signalShiftQ;                // Offset:  196 Size:     4 [unused]
//   float gammaCorection;              // Offset:  200 Size:     4 [unused]
//   bool VHS_Feedback;                 // Offset:  204 Size:     4
//   float feedbackAmount;              // Offset:  208 Size:     4 [unused]
//   float feedbackFade;                // Offset:  212 Size:     4 [unused]
//   float feedbackThresh;              // Offset:  216 Size:     4 [unused]
//   float3 feedbackColor;              // Offset:  224 Size:    12 [unused]
//   bool feedbackDebug;                // Offset:  236 Size:     4
//   int VHS_Filter;                    // Offset:  240 Size:     4 [unused]
//   float Timer;                       // Offset:  244 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__VHS_FeedbackTexB             texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[15], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s1
add r1.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t10.xyzw, s1
add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, -r1.xyzx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
movc r1.xyz, cb0[14].wwww, r2.xyzx, r1.xyzx
movc o0.xyz, cb0[12].wwww, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 9 instruction slots used
