//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Coefficients;                  // Offset:    0 Size:     4
//   float2 LightControl;               // Offset:    4 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 2
ieq r0.x, cb0[0].x, l(1)
if_nz r0.x
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
  dp3 r0.w, l(0.212600, 0.715200, 0.072200, 0.000000), r0.xyzx
  dp3 r1.y, l(-0.099910, -0.336090, 0.436000, 0.000000), r0.xyzx
  dp3 r1.z, l(0.615000, -0.558610, -0.056390, 0.000000), r0.xyzx
  min r0.x, r0.w, l(0.500000)
  max r0.y, r0.w, l(0.500000)
  add r0.z, r0.y, r0.y
  mad r0.z, r0.x, r0.x, r0.z
  mad r0.z, -r0.y, r0.y, r0.z
  mad r0.z, r0.z, l(2.000000), l(-1.500000)
  min r0.w, r0.z, l(0.500000)
  max r0.z, r0.z, l(0.500000)
  add r0.w, -r0.x, r0.w
  mad r0.x, -cb0[0].y, r0.w, r0.x
  add r0.yz, r0.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
  add r0.w, -r0.z, l(0.500000)
  mad r0.z, r0.z, r0.w, -r0.y
  mad r0.y, -cb0[0].z, r0.z, r0.y
  add r1.x, r0.y, r0.x
  dp2 o0.x, l(1.000000, 1.280330, 0.000000, 0.000000), r1.xzxx
  dp3 o0.y, l(1.000000, -0.214820, -0.380590, 0.000000), r1.xyzx
  dp2 o0.z, l(1.000000, 2.127980, 0.000000, 0.000000), r1.xyxx
else 
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
  dp3 r0.w, l(0.299000, 0.587000, 0.114000, 0.000000), r0.xyzx
  dp3 r1.y, l(-0.147130, -0.288860, 0.436000, 0.000000), r0.xyzx
  dp3 r1.z, l(0.615000, -0.514990, -0.100010, 0.000000), r0.xyzx
  min r0.x, r0.w, l(0.500000)
  max r0.y, r0.w, l(0.500000)
  add r0.z, r0.y, r0.y
  mad r0.z, r0.x, r0.x, r0.z
  mad r0.z, -r0.y, r0.y, r0.z
  mad r0.z, r0.z, l(2.000000), l(-1.500000)
  min r0.w, r0.z, l(0.500000)
  max r0.z, r0.z, l(0.500000)
  add r0.w, -r0.x, r0.w
  mad r0.x, -cb0[0].y, r0.w, r0.x
  add r0.yz, r0.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
  add r0.w, -r0.z, l(0.500000)
  mad r0.z, r0.z, r0.w, -r0.y
  mad r0.y, -cb0[0].z, r0.z, r0.y
  add r1.x, r0.y, r0.x
  dp2 o0.x, l(1.000000, 1.139830, 0.000000, 0.000000), r1.xzxx
  dp3 o0.y, l(1.000000, -0.394650, -0.580600, 0.000000), r1.xyzx
  dp2 o0.z, l(1.000000, 2.032110, 0.000000, 0.000000), r1.xyxx
endif 
ret 
// Approximately 49 instruction slots used
