//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Depth_Map;                     // Offset:    0 Size:     4
//   float Depth_Map_Adjust;            // Offset:    4 Size:     4
//   bool Depth_Map_Flip;               // Offset:    8 Size:     4
//   bool DEPTH_DEBUG;                  // Offset:   12 Size:     4
//   bool No_Depth_Map;                 // Offset:   16 Size:     4
//   float Shade_Power;                 // Offset:   20 Size:     4 [unused]
//   float Blur_Cues;                   // Offset:   24 Size:     4
//   float Spread;                      // Offset:   28 Size:     4 [unused]
//   bool Debug_View;                   // Offset:   32 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__DepthBufferTex               texture  float4          2d             t0      1 
// __V__BackBufferTex                texture  float4          2d             t2      1 
// __V__texDC                        texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 2
mul r0.x, cb0[1].z, l(1.500000)
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t6.xyzw, s0, r0.x
add r0.y, -v1.y, l(1.000000)
movc r1.y, cb0[0].z, r0.y, v1.y
mov r1.x, v1.x
sample_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t0.yxzw, s0
div r0.z, l(0.125000), cb0[0].y
add r0.w, -r0.y, l(1.000000)
add r1.x, r0.z, l(-1.000000)
mad r1.y, r0.y, r1.x, l(1.000000)
div r1.y, r0.z, r1.y
ieq r1.z, cb0[0].x, l(1)
mad r0.w, r0.w, r1.x, l(1.000000)
div r0.z, r0.z, r0.w
movc r0.y, r1.z, r0.z, r0.y
movc_sat r0.y, cb0[0].x, r0.y, r1.y
movc r0.yzw, cb0[1].xxxx, l(0,0,0,0), r0.yyyy
if_nz cb0[2].x
  add r1.x, -r0.x, l(1.000000)
  mad o0.xyz, r0.wwww, r1.xxxx, r0.xxxx
  ret 
endif 
if_nz cb0[0].w
  mov o0.xyz, r0.yzwy
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t2.xyzw, s0
add r0.y, -r0.x, l(1.000000)
mad r0.x, r0.w, r0.y, r0.x
mul o0.xyz, r0.xxxx, r1.xyzx
ret 
// Approximately 31 instruction slots used
