//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Power;                       // Offset:    0 Size:     4
//   float3 RGBNegativeAmount;          // Offset:    4 Size:    12
//   float Strength;                    // Offset:   16 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 4
mul r0.xyz, cb0[0].xxxx, cb0[0].yzwy
div r0.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
mul r2.xyzw, r0.xxyy, r1.xyxy
mul r0.xy, r0.zzzz, r1.xzxx
dp2 r0.x, l(1.000000, 1.050000, 0.000000, 0.000000), r0.xyxx
add r0.xyz, r0.xxxx, l(1.600000, 1.600000, 0.050000, 0.000000)
dp2 r0.w, l(1.050000, 0.620000, 0.000000, 0.000000), r2.xyxx
dp2 r1.w, l(0.300000, 1.000000, 0.000000, 0.000000), r2.zwzz
add r2.xyz, r1.wwww, l(1.000000, 0.000000, 1.050000, 0.000000)
add r3.xyz, r0.wwww, l(0.000000, 1.300000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, -r1.xyzx
mad o0.xyz, cb0[1].xxxx, r0.xyzx, r1.xyzx
ret 
// Approximately 15 instruction slots used
