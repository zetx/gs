//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int AA_Adjust;                     // Offset:    0 Size:     4
//   int View_Mode;                     // Offset:    4 Size:     4
//   float Mask_Adjust;                 // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__BackBufferTex                texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
add r0.xyzw, v1.xyxy, l(0.000000, -0.000694, 0.000000, 0.000694)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t0.xyzw, s0
dp3 r0.x, r1.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.zwzz, t0.wxyz, s0
dp3 r0.y, r0.yzwy, l(0.333000, 0.333000, 0.333000, 0.000000)
add r1.xyzw, v1.xyxy, l(-0.000291, 0.000000, 0.000291, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t0.xyzw, s0
dp3 r0.z, r2.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t0.xyzw, s0
dp3 r0.w, r1.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
add r1.xy, -r0.zyzz, r0.wxww
mov r1.z, -r1.x
dp2 r0.x, r1.yzyy, r1.yzyy
sqrt r0.x, r0.x
itof r0.y, cb0[0].x
rcp r0.y, r0.y
ieq r0.z, cb0[0].y, l(3)
movc r0.y, r0.z, l(0.007812), r0.y
lt r0.y, r0.x, r0.y
if_nz r0.y
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
else 
  mul r0.y, r0.x, l(0.500000)
  div r3.xyzw, l(0.000291, 0.000694, 0.000291, 0.000694), r0.yyyy
  mul r3.xyzw, r1.yzyz, r3.xyzw
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xyzw, s0
  mad r5.xyzw, r3.xyzw, l(0.500000, -0.500000, 0.900000, 0.900000), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyxx, t0.xyzw, s0
  mad r3.xyzw, -r3.xyzw, l(0.500000, -0.500000, 0.900000, 0.900000), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r3.xyxx, t0.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.zwzz, t0.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.zwzz, t0.xyzw, s0
  mad r4.xyzw, r6.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000), r4.xyzw
  mad r4.xyzw, r7.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000), r4.xyzw
  mad r4.xyzw, r5.xyzw, l(0.750000, 0.750000, 0.750000, 0.750000), r4.xyzw
  mad r3.xyzw, r3.xyzw, l(0.750000, 0.750000, 0.750000, 0.750000), r4.xyzw
  mul r2.xyzw, r3.xyzw, l(0.232558, 0.232558, 0.232558, 0.232558)
endif 
mul r0.x, r0.x, cb0[0].z
lt r0.y, l(0.010000), r0.x
mad r0.x, -r0.x, l(2.500000), l(1.000000)
movc r0.x, r0.y, r0.x, l(1.000000)
add r0.y, -r0.x, l(1.000000)
add_sat r0.x, -r0.y, r0.x
if_z cb0[0].y
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t0.xyzw, s0
  add r3.xyzw, -r2.xyzw, r3.xyzw
  mad o0.xyzw, r0.xxxx, r3.xyzw, r2.xyzw
else 
  ieq r0.yz, cb0[0].yyyy, l(0, 1, 2, 0)
  mad r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mov r1.zw, l(0,0,1.000000,1.000000)
  movc r1.xyzw, r0.zzzz, r1.xyzw, r2.xyzw
  movc o0.xyzw, r0.yyyy, r0.xxxx, r1.xyzw
endif 
ret 
// Approximately 56 instruction slots used
