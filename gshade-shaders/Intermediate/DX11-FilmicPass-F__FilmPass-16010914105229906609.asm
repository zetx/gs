//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Strength;                    // Offset:    0 Size:     4
//   float Fade;                        // Offset:    4 Size:     4
//   float Contrast;                    // Offset:    8 Size:     4
//   float Linearization;               // Offset:   12 Size:     4
//   float Bleach;                      // Offset:   16 Size:     4
//   float Saturation;                  // Offset:   20 Size:     4
//   float RedCurve;                    // Offset:   24 Size:     4
//   float GreenCurve;                  // Offset:   28 Size:     4
//   float BlueCurve;                   // Offset:   32 Size:     4
//   float BaseCurve;                   // Offset:   36 Size:     4
//   float BaseGamma;                   // Offset:   40 Size:     4
//   float EffectGamma;                 // Offset:   44 Size:     4
//   float EffectGammaR;                // Offset:   48 Size:     4
//   float EffectGammaG;                // Offset:   52 Size:     4
//   float EffectGammaB;                // Offset:   56 Size:     4
//   float3 LumCoeff;                   // Offset:   64 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mov_sat r0.xyz, r0.xyzx
log r0.xyz, r0.xyzx
mul r0.xyz, r0.xyzx, cb0[0].wwww
exp r0.xyz, r0.xyzx
add r0.xyz, r0.xyzx, l(-0.010000, -0.010000, -0.010000, 0.000000)
mad r0.xyz, cb0[0].zzzz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
dp3 r0.w, r0.xyzx, cb0[4].xyzx
log r0.xyz, |r0.xyzx|
add r0.w, r0.w, l(-0.500000)
mul r1.xy, r0.wwww, -cb0[1].wzww
mul r0.w, r0.w, -cb0[2].x
mul r0.w, r0.w, l(1.442695)
exp r0.w, r0.w
add r0.w, r0.w, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r1.xy, r1.xyxx, l(1.442695, 1.442695, 0.000000, 0.000000)
exp r1.xy, r1.xyxx
add r1.xy, r1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
div r1.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyxx
mul r1.zw, cb0[1].wwwz, l(0.000000, 0.000000, 0.721348, 0.721348)
exp r1.zw, r1.zzzw
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
div r1.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.zzzw
add r1.xy, -r1.zwzz, r1.xyxx
mad r1.zw, -r1.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
div r1.xz, r1.xxyx, r1.zzwz
mul r2.xy, cb0[2].xyxx, l(0.721348, 0.721348, 0.000000, 0.000000)
exp r2.xy, r2.xyxx
add r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyxx
add r0.w, r0.w, -r2.x
mad r2.xz, -r2.xxyx, l(2.000000, 0.000000, 2.000000, 0.000000), l(1.000000, 0.000000, 1.000000, 0.000000)
div r1.y, r0.w, r2.x
log r1.xyz, |r1.xyzx|
div r2.xw, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[2].zzzw
mul r1.xyz, r1.xyzx, r2.wwww
mul r0.xyz, r0.xyzx, r2.xxxx
exp r0.xyz, r0.xyzx
exp r1.xyz, r1.xyzx
mad r3.xyz, r1.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, cb0[1].xxxx, r3.xyzx, r1.xyzx
log r1.xyz, |r1.xyzx|
div r3.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[3].yzxy
mul r1.xyz, r1.xyzx, r3.xyzx
exp r1.xyz, r1.xyzx
lt r3.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
sqrt r4.xyz, r0.yzxy
add r4.xyz, -r0.yzxy, r4.xyzx
mad r4.xyz, r1.xyzx, r4.xyzx, r0.yzxy
mad r5.xyz, -r0.yzxy, r0.yzxy, r0.yzxy
mad r1.xyz, r1.xyzx, r5.xyzx, r0.yzxy
movc r1.xyz, r3.xyzx, r1.xyzx, r4.xyzx
add r1.xyz, -r0.yzxy, r1.xyzx
mad r1.xyz, cb0[0].xxxx, r1.xyzx, r0.yzxy
add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mul r1.xyz, r1.xyzx, -cb0[2].yyyy
mul r1.xyz, r1.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r1.xyz, r1.xyzx
add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r1.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzx
add r1.xyz, -r2.yyyy, r1.xyzx
div r1.xyz, r1.xyzx, r2.zzzz
mul r2.xy, r1.xzxx, cb0[1].yyyy
add r0.w, -cb0[1].y, l(1.000000)
mad r0.w, r1.z, r0.w, r2.x
mad r3.x, r1.y, cb0[1].y, r0.w
add r0.w, -cb0[0].y, -cb0[1].y
add r0.w, r0.w, l(1.000000)
mul r1.w, r0.w, r1.x
mad r1.z, r1.z, cb0[1].y, r1.w
add r1.w, cb0[0].y, cb0[1].y
mad r3.y, r1.y, r1.w, r1.z
mad r1.x, r1.x, r1.w, r2.y
mad r3.z, r1.y, r0.w, r1.x
sqrt r1.xyz, r3.xyzx
add r1.xyz, -r3.xyzx, r1.xyzx
dp3 r0.w, r3.xyzx, cb0[4].xyzx
mad r1.w, r0.w, l(2.000000), l(-1.000000)
lt r0.w, r0.w, l(0.500000)
mad r1.xyz, r1.wwww, r1.xyzx, r3.xyzx
mad r2.xyz, -r3.xyzx, r3.xyzx, r3.xyzx
mad r2.xyz, r1.wwww, r2.xyzx, r3.xyzx
movc r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r1.xyz, r1.xyzx
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[0].w
mul r1.xyz, r1.xyzx, r0.wwww
exp r1.xyz, r1.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad o0.xyz, cb0[0].xxxx, r1.xyzx, r0.xyzx
ret 
// Approximately 93 instruction slots used
