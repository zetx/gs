//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float FocusPlane;                  // Offset:    0 Size:     4 [unused]
//   float FocusRange;                  // Offset:    4 Size:     4 [unused]
//   float FocusPlaneMaxRange;          // Offset:    8 Size:     4 [unused]
//   float BlurAngle;                   // Offset:   12 Size:     4 [unused]
//   float BlurLength;                  // Offset:   16 Size:     4
//   float BlurQuality;                 // Offset:   20 Size:     4 [unused]
//   float ScaleFactor;                 // Offset:   24 Size:     4 [unused]
//   int BlurType;                      // Offset:   28 Size:     4 [unused]
//   float2 FocusPoint;                 // Offset:   32 Size:     8 [unused]
//   float3 FocusPointBlendColor;       // Offset:   48 Size:    12 [unused]
//   float FocusPointBlendFactor;       // Offset:   60 Size:     4 [unused]
//   float HighlightGain;               // Offset:   64 Size:     4 [unused]
//   float BlendFactor;                 // Offset:   68 Size:     4 [unused]
//   float2 MouseCoords;                // Offset:   72 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__DirectionalDepthBlur__texBlurDestination    texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float       
// TEXCOORD                 2   x           2     NONE   float       
// TEXCOORD                 3    y          2     NONE   float    y  
// TEXCOORD                 4     z         2     NONE   float     z 
// TEXCOORD                 5   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.y
dcl_input_ps linear v2.z
dcl_output o0.xyzw
dcl_temps 2
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
ge r0.y, v2.y, r0.x
ge r0.z, l(0.000000), cb0[1].x
or r0.y, r0.z, r0.y
if_nz r0.y
  mov o0.xyzw, r1.xyzw
  ret 
endif 
add r0.y, v2.z, v2.y
lt r0.z, r0.x, r0.y
add r0.x, -r0.x, r0.y
div r0.x, r0.x, v2.z
add_sat r0.x, -r0.x, l(1.000000)
mad r0.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.y
movc r0.x, r0.z, r0.x, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t6.wxyz, s0, l(0.000000)
add r0.yzw, -r1.xxyz, r0.yyzw
mad o0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
mov o0.w, r1.w
ret 
// Approximately 25 instruction slots used
