//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float FocusPlane;                  // Offset:    0 Size:     4 [unused]
//   float FocusRange;                  // Offset:    4 Size:     4 [unused]
//   float FocusPlaneMaxRange;          // Offset:    8 Size:     4 [unused]
//   float BlurAngle;                   // Offset:   12 Size:     4 [unused]
//   float BlurLength;                  // Offset:   16 Size:     4 [unused]
//   float BlurQuality;                 // Offset:   20 Size:     4
//   float ScaleFactor;                 // Offset:   24 Size:     4
//   int BlurType;                      // Offset:   28 Size:     4
//   float2 FocusPoint;                 // Offset:   32 Size:     8
//   float3 FocusPointBlendColor;       // Offset:   48 Size:    12
//   float FocusPointBlendFactor;       // Offset:   60 Size:     4
//   float HighlightGain;               // Offset:   64 Size:     4
//   float BlendFactor;                 // Offset:   68 Size:     4
//   float2 MouseCoords;                // Offset:   72 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__DirectionalDepthBlur__texDownsampledBackBuffer    texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   x           2     NONE   float   x   
// TEXCOORD                 3    y          2     NONE   float    y  
// TEXCOORD                 4     z         2     NONE   float       
// TEXCOORD                 5   xyzw        3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.x
dcl_input_ps linear v2.y
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 8
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t4.xyzw, s1, l(0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r1.xyz, r1.xyzx, l(1.490000, 1.490000, 1.490000, 0.000000)
add r1.xyz, -r1.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
div r1.xyz, r0.xyzx, r1.xyzx
add r2.xy, -v1.xyxx, cb0[2].xyxx
mul r2.xy, r2.xyxx, l(0.000753, 0.000753, 0.000000, 0.000000)
movc r2.xy, cb0[1].wwww, r2.xyxx, v1.zwzz
dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
lt r1.w, l(0.000000), v2.x
div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[1].y
mov r4.xyz, r1.xyzx
mov r2.w, l(1.000000)
mov r3.xyzw, r0.xyzw
mov r4.w, l(0)
mov r5.x, r1.w
loop 
  breakc_z r5.x
  mad r5.yz, r2.xxyx, r4.wwww, v1.xxyx
  mul r6.xy, r5.yzyy, cb0[1].zzzz
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t4.xyzw, s1, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.y, r5.yzyy, t2.yxzw, s0, l(0.000000)
  mad r5.z, -r5.y, l(999.000000), l(1000.000000)
  div r5.y, r5.y, r5.z
  ge r5.y, v2.y, r5.y
  div r5.z, r4.w, v2.x
  add r5.z, -r5.z, l(1.000000)
  movc r5.y, r5.y, l(0), r5.z
  mad r3.xyz, r6.xyzx, r5.yyyy, r3.xyzx
  add r2.w, r2.w, r5.y
  max r7.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r7.xyz, r7.xyzx, l(1.490000, 1.490000, 1.490000, 0.000000)
  add r7.xyz, -r7.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
  div r6.xyz, r6.xyzx, r7.xyzx
  mad r4.xyz, r6.xyzx, r5.yyyy, r4.xyzx
  lt r5.y, l(0.000000), r5.y
  dp3_sat r5.z, r6.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
  max r5.z, r3.w, r5.z
  movc r3.w, r5.y, r5.z, r3.w
  add r4.w, r2.z, r4.w
  lt r5.x, r4.w, v2.x
endloop 
eq r0.w, r2.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
add r0.w, r0.w, r2.w
div r1.xyz, r3.xyzx, r0.wwww
add r2.xy, v1.xyxx, -cb0[2].xyxx
dp2 r1.w, r2.xyxx, r2.xyxx
sqrt r1.w, r1.w
min r1.w, r1.w, l(1.000000)
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
add r2.xyz, r1.xyzx, -cb0[3].xyzx
mad r2.xyz, r1.wwww, r2.xyzx, cb0[3].xyzx
add r2.xyz, -r1.xyzx, r2.xyzx
mad r2.xyz, cb0[3].wwww, r2.xyzx, r1.xyzx
movc r1.xyz, cb0[1].wwww, r2.xyzx, r1.xyzx
mov_sat r3.w, r3.w
div r2.xyz, r4.xyzx, r0.wwww
mul r3.xyz, r2.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r2.xyz, r3.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add_sat r0.w, -r0.w, r3.w
add r0.w, r0.w, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
add r0.w, -cb0[4].x, l(1.000000)
mul r2.xyz, r2.xyzx, cb0[4].xxxx
mad r1.xyz, r0.wwww, r1.xyzx, r2.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad o0.xyz, cb0[4].yyyy, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 74 instruction slots used
