//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool bADOF_AutofocusEnable;        // Offset:    0 Size:     4 [unused]
//   float2 fADOF_AutofocusCenter;      // Offset:    4 Size:     8 [unused]
//   float fADOF_AutofocusRadius;       // Offset:   12 Size:     4 [unused]
//   float fADOF_AutofocusSpeed;        // Offset:   16 Size:     4 [unused]
//   float fADOF_ManualfocusDepth;      // Offset:   20 Size:     4 [unused]
//   float fADOF_NearBlurCurve;         // Offset:   24 Size:     4 [unused]
//   float fADOF_FarBlurCurve;          // Offset:   28 Size:     4 [unused]
//   float fADOF_HyperFocus;            // Offset:   32 Size:     4 [unused]
//   float fADOF_RenderResolutionMult;  // Offset:   36 Size:     4 [unused]
//   float fADOF_ShapeRadius;           // Offset:   40 Size:     4
//   float fADOF_SmootheningAmount;     // Offset:   44 Size:     4 [unused]
//   float fADOF_BokehIntensity;        // Offset:   48 Size:     4 [unused]
//   int iADOF_BokehMode;               // Offset:   52 Size:     4 [unused]
//   int iADOF_ShapeVertices;           // Offset:   56 Size:     4 [unused]
//   int iADOF_ShapeQuality;            // Offset:   60 Size:     4 [unused]
//   float fADOF_ShapeCurvatureAmount;  // Offset:   64 Size:     4 [unused]
//   float fADOF_ShapeRotation;         // Offset:   68 Size:     4 [unused]
//   float fADOF_ShapeAnamorphRatio;    // Offset:   72 Size:     4
//   float fADOF_ShapeChromaAmount;     // Offset:   76 Size:     4
//   int iADOF_ShapeChromaMode;         // Offset:   80 Size:     4
//   float FRAME_TIME;                  // Offset:   84 Size:     4 [unused]
//   int FRAME_COUNT;                   // Offset:   88 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__CommonTex0                   texture  float4          2d             t8      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float       
// TEXCOORD                 2   xy          3     NONE   float       
// TEXCOORD                 3   xy          4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
dcl_indexableTemp x0[3], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t8.xyzw, s0
mov x0[0].xyz, r0.xyzx
add r1.xyzw, v1.xyxy, l(-0.000291, -0.000000, -0.000000, -0.000694)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t8.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t8.xyzw, s0
add r1.xyz, r0.xyzx, -r1.xyzx
dp3 r1.y, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r2.xyz, r0.xyzx, -r2.xyzx
dp3 r1.x, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r2.xyzw, v1.xyxy, l(0.000291, 0.000000, 0.000000, 0.000694)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t8.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t8.xyzw, s0
add r2.xyz, -r0.xyzx, r2.xyzx
dp3 r2.y, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r3.xyz, -r0.xyzx, r3.xyzx
dp3 r2.x, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
min r1.xy, r1.xyxx, r2.xyxx
dp2 r1.z, r1.xyxx, r1.xyxx
sqrt r1.z, r1.z
add r1.z, r1.z, l(0.000001)
div r1.xy, r1.xyxx, r1.zzzz
mul r1.z, r1.z, l(32.000000)
min r1.z, r1.z, l(1.000000)
mul r1.xy, r1.zzzz, r1.xyxx
mad r0.w, r0.w, l(2.000000), l(-1.000000)
mul r1.z, |r0.w|, cb0[4].z
mul r2.z, |r0.w|, cb0[2].z
mul r2.x, r1.z, cb0[2].z
mul r1.zw, r2.xxxz, l(0.000000, 0.000000, 0.000600, 0.001433)
mul r1.xy, r1.zwzz, r1.xyxx
mul r1.xy, r1.xyxx, cb0[4].wwww
mad r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.125000, 0.125000), v1.xxxy
mad r1.xy, -r1.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000), v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t8.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t8.xyzw, s0
add r1.xyz, -r0.xyzx, r1.xyzx
mul r0.w, |r1.w|, l(4.000000)
min r0.w, r0.w, l(1.000000)
mad r1.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov x0[1].xyz, r1.xyzx
add r1.xyz, -r0.xyzx, r2.xyzx
mul r0.w, |r2.w|, l(4.000000)
min r0.w, r0.w, l(1.000000)
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov x0[2].xyz, r0.xyzx
iadd r0.xyz, cb0[5].xxxx, l(0, 1, 2, 0)
udiv null, r0.xyz, r0.xyzx, l(3, 3, 3, 0)
mov o0.x, x0[r0.x + 0].x
mov o0.y, x0[r0.y + 0].y
mov o0.z, x0[r0.z + 0].z
mov o0.w, l(1.000000)
ret 
// Approximately 52 instruction slots used
