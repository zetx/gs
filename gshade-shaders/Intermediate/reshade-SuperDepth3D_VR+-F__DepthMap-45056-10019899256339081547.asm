//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int IPD;                           // Offset:    0 Size:     4 [unused]
//   float Divergence;                  // Offset:    4 Size:     4 [unused]
//   float2 ZPD_Separation;             // Offset:    8 Size:     8
//   int Auto_Balance_Ex;               // Offset:   16 Size:     4 [unused]
//   int ZPD_Boundary;                  // Offset:   20 Size:     4
//   float2 ZPD_Boundary_n_Fade;        // Offset:   24 Size:     8
//   int View_Mode;                     // Offset:   32 Size:     4 [unused]
//   int Custom_Sidebars;               // Offset:   36 Size:     4 [unused]
//   float Max_Depth;                   // Offset:   40 Size:     4 [unused]
//   int Performance_Level;             // Offset:   44 Size:     4 [unused]
//   float DLSS_FSR_Offset;             // Offset:   48 Size:     4
//   int Depth_Map;                     // Offset:   52 Size:     4
//   float Depth_Map_Adjust;            // Offset:   56 Size:     4
//   float Offset;                      // Offset:   60 Size:     4
//   float Auto_Depth_Adjust;           // Offset:   64 Size:     4 [unused]
//   bool Depth_Map_View;               // Offset:   68 Size:     4 [unused]
//   bool Depth_Detection;              // Offset:   72 Size:     4 [unused]
//   bool Depth_Map_Flip;               // Offset:   76 Size:     4
//   int WP;                            // Offset:   80 Size:     4
//   float4 Weapon_Adjust;              // Offset:   96 Size:    16
//   float3 WZPD_and_WND;               // Offset:  112 Size:    12
//   int FPSDFIO;                       // Offset:  124 Size:     4
//   int3 Eye_Fade_Reduction_n_Power;   // Offset:  128 Size:    12
//   float Weapon_ZPD_Boundary;         // Offset:  140 Size:     4 [unused]
//   int Cursor_Type;                   // Offset:  144 Size:     4 [unused]
//   int2 Cursor_SC;                    // Offset:  148 Size:     8 [unused]
//   bool Cursor_Lock;                  // Offset:  156 Size:     4 [unused]
//   int Barrel_Distortion;             // Offset:  160 Size:     4 [unused]
//   float FoV;                         // Offset:  164 Size:     4 [unused]
//   float3 Polynomial_Colors_K1;       // Offset:  176 Size:    12 [unused]
//   float3 Polynomial_Colors_K2;       // Offset:  192 Size:    12 [unused]
//   bool Theater_Mode;                 // Offset:  204 Size:     4 [unused]
//   float Blinders;                    // Offset:  208 Size:     4
//   float Adjust_Vignette;             // Offset:  212 Size:     4 [unused]
//   float Sharpen_Power;               // Offset:  216 Size:     4 [unused]
//   float Saturation;                  // Offset:  220 Size:     4 [unused]
//   bool NCAOC;                        // Offset:  224 Size:     4 [unused]
//   bool Cancel_Depth;                 // Offset:  228 Size:     4 [unused]
//   bool Mask_Cycle;                   // Offset:  232 Size:     4 [unused]
//   bool Text_Info;                    // Offset:  236 Size:     4 [unused]
//   bool CLK;                          // Offset:  240 Size:     4 [unused]
//   bool Trigger_Fade_A;               // Offset:  244 Size:     4
//   bool Trigger_Fade_B;               // Offset:  248 Size:     4
//   bool overlay_open;                 // Offset:  252 Size:     4 [unused]
//   float2 Mousecoords;                // Offset:  256 Size:     8 [unused]
//   float frametime;                   // Offset:  264 Size:     4
//   float timer;                       // Offset:  268 Size:     4 [unused]
//   bool DepthCheck;                   // Offset:  272 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__DepthBufferTex               texture  float4          2d             t0      1 
// __V__BackBufferTex                texture  float4          2d             t2      1 
// __V__texLumVR                     texture  float4          2d            t16      1 
// __V__texOtherVR                   texture  float4          2d            t18      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[17], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 33
dcl_indexableTemp x0[7], 4
dcl_indexableTemp x1[7], 4
dcl_indexableTemp x2[4], 4
dcl_indexableTemp x3[7], 4
dcl_indexableTemp x4[7], 4
dcl_indexableTemp x5[12], 4
add r0.xy, -v1.yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
movc r1.y, cb0[4].w, r0.x, v1.y
mov r1.x, v1.x
mad r0.zw, -cb0[3].xxxx, l(0.000000, 0.000000, 0.000291, 0.000694), r1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.yzxw, s0, l(0.000000)
div r0.w, l(0.125000), cb0[3].z
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r1.x, -r0.w, l(1.000000)
lt r1.y, cb0[3].w, l(0.000000)
add r1.z, |cb0[3].w|, l(1.000000)
mul r1.w, r0.z, r1.z
min r1.w, r1.w, l(1.000000)
add r2.x, -r0.z, l(1.000000)
mad r2.yz, r0.zzzz, l(0.000000, 1.000000, -1.000000, 0.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
movc r3.xy, r1.yyyy, r1.wwww, r2.yzyy
lt r1.w, l(0.000000), cb0[3].w
or r1.w, r1.y, r1.w
add r2.w, cb0[3].w, l(1.000000)
mul r4.x, r2.w, r3.x
add r3.w, -cb0[3].w, l(1.000000)
div r4.y, r3.y, r3.w
min r4.xy, r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r3.z, -r3.y, l(1.000000)
movc r4.xy, r1.yyyy, r3.xzxx, r4.xyxx
movc r3.xy, r1.wwww, r4.xyxx, r3.xyxx
mad r3.xy, r3.xyxx, r1.xxxx, r0.wwww
ieq r3.z, cb0[3].y, l(1)
rcp r3.xy, r3.xyxx
movc r3.y, r3.z, r3.y, r0.z
movc_sat r4.z, cb0[3].y, r3.y, r3.x
itof r3.x, cb0[5].x
eq r5.xyzw, r3.xxxx, l(2.000000, 3.000000, 4.000000, 5.000000)
eq r6.xyzw, r3.xxxx, l(6.000000, 7.000000, 8.000000, 9.000000)
eq r7.xyzw, r3.xxxx, l(10.000000, 11.000000, 12.000000, 13.000000)
or r8.xy, r7.zyzz, r7.yxyy
eq r9.xyzw, r3.xxxx, l(14.000000, 15.000000, 16.000000, 17.000000)
eq r10.xyzw, r3.xxxx, l(18.000000, 19.000000, 20.000000, 21.000000)
eq r11.xyzw, r3.xxxx, l(22.000000, 23.000000, 24.000000, 25.000000)
eq r12.xyzw, r3.xxxx, l(26.000000, 27.000000, 28.000000, 29.000000)
or r3.y, r12.w, r12.z
eq r13.xyzw, r3.xxxx, l(30.000000, 31.000000, 32.000000, 33.000000)
eq r14.xyzw, r3.xxxx, l(34.000000, 35.000000, 36.000000, 37.000000)
eq r15.xyzw, r3.xxxx, l(38.000000, 39.000000, 40.000000, 41.000000)
or r8.z, r15.y, r15.x
eq r16.xyzw, r3.xxxx, l(42.000000, 43.000000, 44.000000, 45.000000)
eq r17.xyzw, r3.xxxx, l(46.000000, 47.000000, 48.000000, 49.000000)
eq r18.xyzw, r3.xxxx, l(50.000000, 51.000000, 52.000000, 53.000000)
eq r19.xyzw, r3.xxxx, l(54.000000, 55.000000, 56.000000, 57.000000)
eq r20.xyzw, r3.xxxx, l(58.000000, 59.000000, 60.000000, 61.000000)
eq r21.xyzw, r3.xxxx, l(62.000000, 63.000000, 64.000000, 65.000000)
eq r22.xyzw, r3.xxxx, l(66.000000, 67.000000, 68.000000, 69.000000)
eq r23.xyzw, r3.xxxx, l(70.000000, 71.000000, 72.000000, 73.000000)
eq r24.xyz, r3.xxxx, l(74.000000, 75.000000, 76.000000, 0.000000)
add r3.x, cb0[6].y, l(0.000000)
div r3.x, l(0.125000), r3.x
movc r8.w, r5.x, l(0.025000), r3.x
movc r8.w, r5.y, l(0.007692), r8.w
movc r8.w, r5.z, l(0.003846), r8.w
movc r8.w, r5.w, l(0.011905), r8.w
movc r8.w, r6.x, l(0.003205), r8.w
movc r8.w, r6.y, l(0.006250), r8.w
movc r8.w, r6.z, l(0.005952), r8.w
movc r8.w, r6.w, l(0.000704), r8.w
movc r8.w, r7.x, l(0.001250), r8.w
movc r8.x, r8.x, l(0.000615), r8.w
movc r8.x, r7.w, l(0.001000), r8.x
movc r8.x, r9.x, l(0.000625), r8.x
movc r8.x, r9.y, l(0.000769), r8.x
movc r8.x, r9.z, l(0.005263), r8.x
movc r8.x, r9.w, l(0.002083), r8.x
movc r8.x, r10.x, l(0.008696), r8.x
movc r8.x, r10.y, l(0.004167), r8.x
movc r8.x, r10.z, l(0.002000), r8.x
movc r8.x, r10.w, l(0.010417), r8.x
movc r8.x, r11.x, l(0.010000), r8.x
movc r8.x, r11.y, l(0.000083), r8.x
movc r8.x, r11.z, l(0.000500), r8.x
movc r8.x, r11.w, l(0.000357), r8.x
movc r8.x, r12.x, l(0.019608), r8.x
movc r8.x, r12.y, l(0.022472), r8.x
movc r3.y, r3.y, l(0.004167), r8.x
movc r3.y, r13.x, l(0.006250), r3.y
movc r3.y, r13.y, l(0.013889), r3.y
movc r3.y, r13.z, l(0.002000), r3.y
movc r3.y, r13.w, l(0.001333), r3.y
movc r3.y, r14.x, l(0.002273), r3.y
movc r3.y, r14.y, l(0.003333), r3.y
movc r3.y, r14.z, l(0.001190), r3.y
movc r3.y, r14.w, l(12500000.000000), r3.y
movc r3.y, r8.z, l(0.006250), r3.y
movc r3.y, r15.z, l(0.001563), r3.y
movc r3.y, r15.w, l(0.006667), r3.y
movc r3.y, r16.x, l(0.007143), r3.y
movc r3.y, r16.y, l(0.010000), r3.y
movc r3.y, r16.z, l(0.006250), r3.y
movc r3.y, r16.w, l(0.007143), r3.y
movc r3.y, r17.x, l(0.013889), r3.y
movc r3.y, r17.y, l(0.006250), r3.y
movc r3.y, r17.z, l(0.010000), r3.y
movc r3.y, r17.w, l(0.003333), r3.y
movc r3.y, r18.x, l(0.007692), r3.y
movc r3.y, r18.y, l(0.002000), r3.y
movc r3.y, r18.z, l(0.001818), r3.y
movc r3.y, r18.w, l(0.000526), r3.y
movc r3.y, r19.x, l(0.002500), r3.y
movc r3.y, r19.y, l(0.008333), r3.y
movc r3.y, r19.z, l(0.005882), r3.y
movc r3.y, r19.w, l(0.023810), r3.y
movc r3.y, r20.x, l(0.004000), r3.y
movc r3.y, r20.y, l(0.015625), r3.y
movc r3.y, r20.z, l(0.013889), r3.y
movc r3.y, r20.w, l(0.009091), r3.y
movc r3.y, r21.x, l(0.023810), r3.y
movc r3.y, r21.y, l(0.000694), r3.y
movc r3.y, r21.z, l(0.002273), r3.y
movc r3.y, r21.w, l(0.001250), r3.y
movc r3.y, r22.x, l(0.002381), r3.y
movc r3.y, r22.y, l(0.010000), r3.y
movc r3.y, r22.z, l(0.007812), r3.y
movc r3.y, r22.w, l(0.007407), r3.y
movc r3.y, r23.x, l(0.021978), r3.y
movc r3.y, r23.y, l(0.012346), r3.y
movc r3.y, r23.z, l(0.020000), r3.y
movc r3.y, r23.w, l(0.008333), r3.y
movc r3.y, r24.x, l(0.002000), r3.y
movc r3.y, r24.y, l(0.001111), r3.y
movc r3.y, r24.z, l(0.007143), r3.y
movc r8.xz, r5.xxxx, l(1.125000,0,0.425000,0), cb0[6].zzxz
movc r5.xy, r5.yyyy, l(9.150000,0.276000,0,0), r8.xzxx
movc r5.xy, r5.zzzz, l(7.150000,0.500000,0,0), r5.xyxx
movc r5.xy, r5.wwww, l(0.872500,0.284000,0,0), r5.xyxx
movc r5.xy, r6.xxxx, l(97.500000,0.253000,0,0), r5.xyxx
movc r5.xy, r6.yyyy, l(9.562500,0.276000,0,0), r5.xyxx
movc r5.xy, r6.zzzz, l(9.137500,0.338000,0,0), r5.xyxx
movc r5.xy, r6.wwww, l(63.025002,0.255000,0,0), r5.xyxx
movc r5.x, r7.x, l(0.984300), r5.x
movc r5.x, r7.y, l(0.984350), r5.x
movc r5.x, r7.z, l(0.984330), r5.x
movc r5.x, r7.w, l(0.984300), r5.x
movc r5.x, r9.x, l(63.000000), r5.x
movc r5.x, r9.y, l(3.975000), r5.x
movc r5.x, r9.z, l(0.984250), r5.x
movc r5.x, r9.w, l(15.156250), r5.x
movc r5.x, r10.x, l(2.500000), r5.x
movc r5.x, r10.y, l(1.050000), r5.x
movc r5.x, r10.z, l(9.100000), r5.x
movc r5.x, r10.w, l(23.750000), r5.x
movc r5.x, r11.x, l(2.000000), r5.x
movc r5.x, r11.y, l(7.000000), r5.x
movc r5.x, r11.z, l(0), r5.x
movc r5.x, r11.w, l(0.785000), r5.x
movc r5.x, r12.x, l(53.750000), r5.x
movc r5.x, r12.y, l(0), r5.x
movc r5.x, r12.z, l(1.025000), r5.x
movc r5.x, r12.w, l(14.000000), r5.x
movc r5.x, r13.x, l(0), r5.x
movc r5.x, r13.y, l(2.362500), r5.x
movc r5.x, r13.z, l(0.988750), r5.x
movc r5.x, r13.w, l(0.818750), r5.x
movc r5.x, r14.x, l(0.900000), r5.x
movc r5.x, r14.y, l(9.100000), r5.x
movc r5.x, r14.z, l(8.862500), r5.x
movc r5.x, r14.w, l(0), r5.x
movc r5.x, r15.x, l(0.180000), r5.x
movc r5.x, r15.y, l(1.187500), r5.x
movc r5.x, r15.z, l(7.000000), r5.x
movc r5.x, r15.w, l(9.030000), r5.x
movc r5.x, r16.x, l(0.901500), r5.x
movc r5.x, r16.y, l(0.300000), r5.x
movc r5.x, r16.z, l(8.800000), r5.x
movc r5.x, r16.w, l(0), r5.x
movc r5.x, r17.x, l(2.375000), r5.x
movc r5.x, r17.y, l(9.000000), r5.x
movc r5.x, r17.z, l(1.000000), r5.x
movc r5.x, r17.w, l(0.998750), r5.x
movc r5.x, r18.x, l(0.090000), r5.x
movc r5.x, r18.y, l(0.962500), r5.x
movc r5.x, r18.z, l(1.020000), r5.x
movc r5.x, r18.w, l(0.836250), r5.x
movc r5.x, r19.x, l(0), r5.x
movc r5.x, r19.y, l(99.000000), r5.x
movc r5.x, r19.z, l(99.500000), r5.x
movc r5.x, r19.w, l(1.000000), r5.x
movc r5.x, r20.x, l(8.875000), r5.x
movc r5.x, r20.y, l(0), r5.x
movc r5.x, r20.z, l(1.800000), r5.x
or r5.z, r20.w, r21.x
movc r5.x, r5.z, l(0), r5.x
movc r5.x, r21.y, l(9.000000), r5.x
movc r5.x, r21.z, l(1000.000000), r5.x
movc r5.x, r21.w, l(0.905000), r5.x
movc r5.x, r22.x, l(987.500000), r5.x
movc r5.x, r22.y, l(925.000000), r5.x
movc r5.x, r22.z, l(0.185000), r5.x
movc r5.x, r22.w, l(0), r5.x
movc r5.x, r23.x, l(950.000000), r5.x
movc r5.x, r23.y, l(1.825000), r5.x
movc r5.x, r23.z, l(0.100000), r5.x
movc r5.x, r23.w, l(0.300000), r5.x
movc r5.x, r24.x, l(0), r5.x
movc r5.x, r24.y, l(0.500000), r5.x
movc r5.x, r24.z, l(2.050000), r5.x
add r5.z, r5.x, l(1.000000)
add r5.w, -r5.x, l(1.000000)
lt r5.x, l(0.000000), r5.x
mul r6.x, r0.z, r5.z
div r6.y, r2.x, r5.w
min r5.zw, r6.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
movc r2.xy, r5.xxxx, r5.zwzz, r2.yzyy
if_z cb0[3].y
  add r2.z, r3.y, l(-1.000000)
  mad r2.z, r2.x, r2.z, l(1.000000)
  div r2.z, r3.y, r2.z
else 
  add r5.x, r3.y, l(-1.000000)
  mad r5.x, r2.y, r5.x, l(1.000000)
  div r5.x, r3.y, r5.x
  movc r2.z, r3.z, r5.x, r0.z
endif 
or r5.x, r7.z, r8.y
or r5.x, r7.w, r5.x
movc r5.x, r5.x, l(0.254000), r5.y
movc r5.x, r9.x, l(0.255000), r5.x
movc r5.x, r9.y, l(0.510000), r5.x
movc r5.x, r9.z, l(0.254000), r5.x
movc r5.x, r9.w, l(0.375000), r5.x
movc r5.x, r10.x, l(0.700000), r5.x
movc r5.x, r10.y, l(0.750000), r5.x
movc r5.x, r10.z, l(0.278000), r5.x
movc r5.x, r10.w, l(0.450000), r5.x
movc r5.x, r11.x, l(0.350000), r5.x
movc r5.x, r11.y, l(0.286000), r5.x
movc r5.x, r11.z, l(35.000000), r5.x
movc r5.x, r11.w, l(0.625000), r5.x
movc r5.x, r12.x, l(0.255000), r5.x
movc r5.x, r12.y, l(0.450000), r5.x
movc r5.x, r12.z, l(0.750000), r5.x
movc r5.x, r12.w, l(0.266000), r5.x
movc r5.x, r13.x, l(3.625000), r5.x
movc r5.x, r13.y, l(0.700000), r5.x
movc r5.x, r13.z, l(0.489400), r5.x
movc r5.x, r13.w, l(1.000000), r5.x
movc r5.x, r14.x, l(1.150000), r5.x
movc r5.x, r14.y, l(0.278000), r5.x
movc r5.x, r14.z, l(0.277000), r5.x
movc r5.x, r14.w, l(0), r5.x
movc r5.x, r15.x, l(0.780000), r5.x
movc r5.x, r15.y, l(0.444000), r5.x
movc r5.x, r15.z, l(0.286000), r5.x
movc r5.x, r15.w, l(0.280000), r5.x
movc r5.x, r16.x, l(0.300000), r5.x
movc r5.x, r16.y, l(1.200000), r5.x
movc r5.x, r16.z, l(0.277000), r5.x
movc r5.x, r16.w, l(1.300000), r5.x
movc r5.x, r17.x, l(0.625000), r5.x
movc r5.x, r17.y, l(0.280000), r5.x
movc r5.x, r17.z, l(0.460000), r5.x
movc r5.x, r17.w, l(1.500000), r5.x
movc r5.x, r18.x, l(2.000000), r5.x
movc r5.x, r18.y, l(0.485000), r5.x
movc r5.x, r18.z, l(0.489000), r5.x
movc r5.x, r18.w, l(1.000000), r5.x
movc r5.x, r19.x, l(13.870000), r5.x
or r5.y, r19.z, r19.y
or r5.y, r19.w, r5.y
movc r5.x, r5.y, l(0.425000), r5.x
movc r5.x, r20.x, l(0.519000), r5.x
movc r5.x, r20.y, l(0.500000), r5.x
movc r5.x, r20.z, l(0.350000), r5.x
movc r5.x, r20.w, l(1.825000), r5.x
movc r5.x, r21.x, l(1.953000), r5.x
movc r5.x, r21.y, l(0.287000), r5.x
movc r5.x, r21.z, l(0.250300), r5.x
movc r5.x, r21.w, l(0.279000), r5.x
movc r5.x, r22.x, l(0.250300), r5.x
movc r5.x, r22.y, l(0.251000), r5.x
movc r5.x, r22.z, l(1.035000), r5.x
movc r5.x, r22.w, l(1.553000), r5.x
movc r5.x, r23.x, l(0.251000), r5.x
movc r5.x, r23.y, l(0.345000), r5.x
movc r5.x, r23.z, l(0.430000), r5.x
movc r5.x, r23.w, l(0.800000), r5.x
movc r5.x, r24.x, l(13.300000), r5.x
movc r5.x, r24.y, l(0.750000), r5.x
movc r5.x, r24.z, l(0.350000), r5.x
div r5.x, r5.x, cb0[3].z
mul r5.x, r5.x, l(0.500000)
ge r5.x, r5.x, r4.z
and r5.x, r5.x, l(0x3f800000)
if_z cb0[5].x
  mov r5.y, r4.z
else 
  mov_sat r2.z, r2.z
  add r2.z, -r4.z, r2.z
  mad r5.y, r5.x, r2.z, r4.z
endif 
if_z cb0[3].y
  add r2.z, r3.y, l(-1.000000)
  mad r2.z, r2.x, r2.z, l(1.000000)
  div r2.z, r3.y, r2.z
else 
  add r5.z, r3.y, l(-1.000000)
  mad r5.z, r2.y, r5.z, l(1.000000)
  div r5.z, r3.y, r5.z
  movc r2.z, r3.z, r5.z, r0.z
endif 
if_z cb0[5].x
  mov r5.z, r4.z
else 
  mov_sat r2.z, r2.z
  mul r5.z, r2.z, r5.x
endif 
mul r2.z, r4.z, l(0.400000)
mad r5.w, r4.z, l(-0.800000), l(3.000000)
mul r2.z, r2.z, r2.z
mul r2.z, r2.z, r5.w
lt r2.z, r2.z, r5.z
and r4.y, r2.z, l(0x3f800000)
if_z cb0[3].y
  add r2.z, r3.y, l(-1.000000)
  mad r2.x, r2.x, r2.z, l(1.000000)
  div r2.x, r3.y, r2.x
else 
  add r2.z, r3.y, l(-1.000000)
  mad r2.y, r2.y, r2.z, l(1.000000)
  div r2.y, r3.y, r2.y
  movc r2.x, r3.z, r2.y, r0.z
endif 
if_nz cb0[5].x
  mov_sat r2.x, r2.x
  add r0.z, r2.x, l(-0.500000)
  mad r4.z, r5.x, r0.z, l(0.500000)
endif 
lt r2.xy, v1.xyxx, l(0.000581, 0.001389, 0.000000, 0.000000)
and r0.z, r2.y, r2.x
if_nz r0.z
  sample_indexable(texture2d)(float,float,float,float) r0.z, l(0.000000, 0.083000, 0.000000, 0.000000), t16.xyzw, s2
  ieq r2.z, cb0[8].z, l(2)
  ieq r3.yz, cb0[7].wwww, l(0, 1, 2, 0)
  movc r5.xz, cb0[15].yyzy, l(1.000000,0,1.000000,0), l(0,0,0,0)
  and r3.z, r3.z, r5.z
  movc r3.y, r3.y, r5.x, r3.z
  add r3.y, -r0.z, r3.y
  movc r2.z, r2.z, l(156.250000), l(437.500000)
  movc r2.z, cb0[8].z, r2.z, l(718.750000)
  div r2.z, -cb0[16].z, r2.z
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  add r2.z, -r2.z, l(1.000000)
  mad r4.x, r3.y, r2.z, r0.z
else 
  lt r0.z, l(0.000000), cb0[7].y
  sample_indexable(texture2d)(float,float,float,float) r2.z, l(0.000000, 0.750000, 0.000000, 0.000000), t16.xyzw, s2
  movc r2.z, r0.z, r2.z, l(1.000000)
  mul r2.z, r2.z, -cb0[7].z
  min r2.z, r2.z, -cb0[7].y
  add r3.y, -r2.z, l(1.000000)
  add r2.z, -r2.z, r5.y
  div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r3.y
  mul_sat r2.z, r2.z, r3.y
  mad r3.y, r2.z, l(-2.000000), l(3.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, r3.y
  add r3.y, -r5.y, l(1.000000)
  mad r2.z, r2.z, r3.y, r5.y
  min r2.z, r2.z, l(1.000000)
  mul r3.y, r2.z, l(4.000000)
  min r3.y, r3.y, l(1.000000)
  mad r3.z, r3.y, l(-2.000000), l(3.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, r3.z
  add r3.z, -r2.z, r5.y
  mad_sat r2.z, r3.y, r3.z, r2.z
  movc r4.x, r0.z, r2.z, r5.y
endif 
lt r0.xy, r0.xyxx, l(0.001389, 0.000581, 0.000000, 0.000000)
and r0.z, r0.x, r0.y
if_nz r0.z
  ilt r0.z, l(0), cb0[1].y
  if_nz r0.z
    mov x0[0].x, l(0.125000)
    mov x0[1].x, l(0.250000)
    mov x0[2].x, l(0.375000)
    mov x0[3].x, l(0.500000)
    mov x0[4].x, l(0.625000)
    mov x0[5].x, l(0.750000)
    mov x0[6].x, l(0.875000)
    mov x1[0].x, l(0.250000)
    mov x1[1].x, l(0.375000)
    mov x1[2].x, l(0.437500)
    mov x1[3].x, l(0.500000)
    mov x1[4].x, l(0.562500)
    mov x1[5].x, l(0.625000)
    mov x1[6].x, l(0.750000)
    mov x2[0].x, l(0.875000)
    mov x2[1].x, l(0.750000)
    mov x2[2].x, l(0.500000)
    mov x2[3].x, l(0.250000)
    mul r5.xyzw, cb0[0].zzzz, l(0.625000, 0.750000, 0.875000, 0.300000)
    mov x3[0].x, r5.x
    mov x3[1].x, r5.y
    mov x3[2].x, r5.z
    mov x3[3].x, cb0[0].z
    mov x3[4].x, r5.z
    mov x3[5].x, r5.y
    mov x3[6].x, r5.x
    mul r3.yz, cb0[0].zzzz, l(0.000000, 0.500000, 0.937500, 0.000000)
    mov x4[0].x, r5.w
    mov x4[1].x, r3.y
    mov x4[2].x, r5.y
    mov x4[3].x, cb0[0].z
    mov x4[4].x, r5.y
    mov x4[5].x, r3.y
    mov x4[6].x, r5.w
    mov x5[0].x, r3.y
    mov x5[1].x, r5.x
    mov x5[2].x, r5.y
    mov x5[3].x, r5.z
    mov x5[4].x, r3.z
    mov x5[5].x, cb0[0].z
    mov x5[6].x, cb0[0].z
    mov x5[7].x, r3.z
    mov x5[8].x, r5.z
    mov x5[9].x, r5.y
    mov x5[10].x, r5.x
    mov x5[11].x, r3.y
    ieq r0.z, cb0[1].y, l(3)
    movc r5.xyz, r0.zzzz, l(12,4,0.071429,0), l(7,7,0.111111,0)
    mov r6.x, cb0[1].y
    mov r6.y, cb0[3].y
    mov r6.z, cb0[5].x
    mov r6.w, l(0)
    mov r0.z, l(0)
    mov r2.z, l(0)
    mov r3.yz, l(0,0,-1,0)
    loop 
      breakc_z r3.z
      mov r5.w, x0[r3.y + 0].x
      mov r7.x, x1[r3.y + 0].x
      iadd r7.y, r3.y, l(1)
      itof r7.z, r7.y
      mul r7.z, r5.z, r7.z
      mov r7.w, r6.x
      mov r8.xy, r6.yzyy
      mov r8.z, r0.z
      mov r9.x, r6.w
      mov r8.w, r2.z
      mov r9.w, l(0)
      mov r10.x, l(-1)
      loop 
        breakc_z r10.x
        ieq r11.xyzw, r7.wwww, l(1, 3, 2, 5)
        if_nz r11.x
          mov r8.w, x0[r9.w + 0].x
          mov r9.x, r5.w
        else 
          ieq r10.yz, r7.wwww, l(0, 2, 5, 0)
          or r10.y, r10.z, r10.y
          if_nz r10.y
            mov r8.w, x0[r9.w + 0].x
            mov r9.x, r7.x
          else 
            ieq r10.y, r7.w, l(3)
            if_nz r10.y
              imin r10.y, r9.w, l(3)
              mov r8.w, x2[r10.y + 0].x
              mov r9.x, r7.z
            else 
              ieq r10.y, r7.w, l(4)
              if_nz r10.y
                mov r8.w, x1[r9.w + 0].x
                mov r9.x, r5.w
              endif 
            endif 
          endif 
        endif 
        or r10.y, r11.w, r11.z
        mov r10.z, x4[r3.y + 0].x
        mov r10.w, x3[r3.y + 0].x
        movc r10.y, r10.y, r10.z, r10.w
        mov r10.z, x5[r3.y + 0].x
        movc r10.y, r11.y, r10.z, r10.y
        ige r10.z, r7.w, l(4)
        if_nz r10.z
          add r10.w, -r8.w, l(1.000000)
          movc r9.y, cb0[4].w, r10.w, r8.w
          mad r11.xy, -cb0[3].xxxx, l(0.000291, 0.000694, 0.000000, 0.000000), r9.xyxx
          sample_l_indexable(texture2d)(float,float,float,float) r9.y, r11.xyxx, t0.yxzw, s0, l(0.000000)
          mul r10.w, r1.z, r9.y
          min r10.w, r10.w, l(1.000000)
          add r11.x, -r9.y, l(1.000000)
          mad r11.yz, r9.yyyy, l(0.000000, 1.000000, -1.000000, 0.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
          movc r12.xy, r1.yyyy, r10.wwww, r11.yzyy
          mul r13.x, r2.w, r12.x
          div r13.y, r12.y, r3.w
          min r13.xy, r13.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
          add r12.z, -r12.y, l(1.000000)
          movc r12.zw, r1.yyyy, r12.xxxz, r13.xxxy
          movc r12.xy, r1.wwww, r12.zwzz, r12.xyxx
          mad r12.xy, r12.xyxx, r1.xxxx, r0.wwww
          ieq r10.w, r8.x, l(1)
          rcp r12.xy, r12.xyxx
          movc r11.w, r10.w, r12.y, r9.y
          movc_sat r11.w, r8.x, r11.w, r12.x
          itof r12.x, r8.y
          eq r13.xyzw, r12.xxxx, l(2.000000, 3.000000, 4.000000, 5.000000)
          eq r14.xyzw, r12.xxxx, l(6.000000, 7.000000, 8.000000, 9.000000)
          eq r15.xyzw, r12.xxxx, l(10.000000, 11.000000, 12.000000, 13.000000)
          or r12.y, r15.z, r15.y
          eq r16.xyzw, r12.xxxx, l(14.000000, 15.000000, 16.000000, 17.000000)
          eq r17.xyzw, r12.xxxx, l(18.000000, 19.000000, 20.000000, 21.000000)
          eq r18.xyzw, r12.xxxx, l(22.000000, 23.000000, 24.000000, 25.000000)
          eq r19.xyzw, r12.xxxx, l(26.000000, 27.000000, 28.000000, 29.000000)
          or r12.z, r19.w, r19.z
          eq r20.xyzw, r12.xxxx, l(30.000000, 31.000000, 32.000000, 33.000000)
          eq r21.xyzw, r12.xxxx, l(34.000000, 35.000000, 36.000000, 37.000000)
          eq r22.xyzw, r12.xxxx, l(38.000000, 39.000000, 40.000000, 41.000000)
          or r12.w, r22.y, r22.x
          eq r23.xyzw, r12.xxxx, l(42.000000, 43.000000, 44.000000, 45.000000)
          eq r24.xyzw, r12.xxxx, l(46.000000, 47.000000, 48.000000, 49.000000)
          eq r25.xyzw, r12.xxxx, l(50.000000, 51.000000, 52.000000, 53.000000)
          eq r26.xyzw, r12.xxxx, l(54.000000, 55.000000, 56.000000, 57.000000)
          eq r27.xyzw, r12.xxxx, l(58.000000, 59.000000, 60.000000, 61.000000)
          eq r28.xyzw, r12.xxxx, l(62.000000, 63.000000, 64.000000, 65.000000)
          eq r29.xyzw, r12.xxxx, l(66.000000, 67.000000, 68.000000, 69.000000)
          eq r30.xyzw, r12.xxxx, l(70.000000, 71.000000, 72.000000, 73.000000)
          eq r31.xyz, r12.xxxx, l(74.000000, 75.000000, 76.000000, 0.000000)
          movc r12.x, r13.x, l(0.025000), r3.x
          movc r12.x, r13.y, l(0.007692), r12.x
          movc r12.x, r13.z, l(0.003846), r12.x
          movc r12.x, r13.w, l(0.011905), r12.x
          movc r12.x, r14.x, l(0.003205), r12.x
          movc r12.x, r14.y, l(0.006250), r12.x
          movc r12.x, r14.z, l(0.005952), r12.x
          movc r12.x, r14.w, l(0.000704), r12.x
          movc r12.x, r15.x, l(0.001250), r12.x
          movc r12.x, r12.y, l(0.000615), r12.x
          movc r12.x, r15.w, l(0.001000), r12.x
          movc r12.x, r16.x, l(0.000625), r12.x
          movc r12.x, r16.y, l(0.000769), r12.x
          movc r12.x, r16.z, l(0.005263), r12.x
          movc r12.x, r16.w, l(0.002083), r12.x
          movc r12.x, r17.x, l(0.008696), r12.x
          movc r12.x, r17.y, l(0.004167), r12.x
          movc r12.x, r17.z, l(0.002000), r12.x
          movc r12.x, r17.w, l(0.010417), r12.x
          movc r12.x, r18.x, l(0.010000), r12.x
          movc r12.x, r18.y, l(0.000083), r12.x
          movc r12.x, r18.z, l(0.000500), r12.x
          movc r12.x, r18.w, l(0.000357), r12.x
          movc r12.x, r19.x, l(0.019608), r12.x
          movc r12.x, r19.y, l(0.022472), r12.x
          movc r12.x, r12.z, l(0.004167), r12.x
          movc r12.x, r20.x, l(0.006250), r12.x
          movc r12.x, r20.y, l(0.013889), r12.x
          movc r12.x, r20.z, l(0.002000), r12.x
          movc r12.x, r20.w, l(0.001333), r12.x
          movc r12.x, r21.x, l(0.002273), r12.x
          movc r12.x, r21.y, l(0.003333), r12.x
          movc r12.x, r21.z, l(0.001190), r12.x
          movc r12.x, r21.w, l(12500000.000000), r12.x
          movc r12.x, r12.w, l(0.006250), r12.x
          movc r12.x, r22.z, l(0.001563), r12.x
          movc r12.x, r22.w, l(0.006667), r12.x
          movc r12.x, r23.x, l(0.007143), r12.x
          movc r12.x, r23.y, l(0.010000), r12.x
          movc r12.x, r23.z, l(0.006250), r12.x
          movc r12.x, r23.w, l(0.007143), r12.x
          movc r12.x, r24.x, l(0.013889), r12.x
          movc r12.x, r24.y, l(0.006250), r12.x
          movc r12.x, r24.z, l(0.010000), r12.x
          movc r12.x, r24.w, l(0.003333), r12.x
          movc r12.x, r25.x, l(0.007692), r12.x
          movc r12.x, r25.y, l(0.002000), r12.x
          movc r12.x, r25.z, l(0.001818), r12.x
          movc r12.x, r25.w, l(0.000526), r12.x
          movc r12.x, r26.x, l(0.002500), r12.x
          movc r12.x, r26.y, l(0.008333), r12.x
          movc r12.x, r26.z, l(0.005882), r12.x
          movc r12.x, r26.w, l(0.023810), r12.x
          movc r12.x, r27.x, l(0.004000), r12.x
          movc r12.x, r27.y, l(0.015625), r12.x
          movc r12.x, r27.z, l(0.013889), r12.x
          movc r12.x, r27.w, l(0.009091), r12.x
          movc r12.x, r28.x, l(0.023810), r12.x
          movc r12.x, r28.y, l(0.000694), r12.x
          movc r12.x, r28.z, l(0.002273), r12.x
          movc r12.x, r28.w, l(0.001250), r12.x
          movc r12.x, r29.x, l(0.002381), r12.x
          movc r12.x, r29.y, l(0.010000), r12.x
          movc r12.x, r29.z, l(0.007812), r12.x
          movc r12.x, r29.w, l(0.007407), r12.x
          movc r12.x, r30.x, l(0.021978), r12.x
          movc r12.x, r30.y, l(0.012346), r12.x
          movc r12.x, r30.z, l(0.020000), r12.x
          movc r12.x, r30.w, l(0.008333), r12.x
          movc r12.x, r31.x, l(0.002000), r12.x
          movc r12.x, r31.y, l(0.001111), r12.x
          movc r12.y, r13.x, l(1.125000), cb0[6].z
          movc r12.y, r13.y, l(9.150000), r12.y
          movc r12.y, r13.z, l(7.150000), r12.y
          movc r12.y, r13.w, l(0.872500), r12.y
          movc r12.y, r14.x, l(97.500000), r12.y
          movc r12.y, r14.y, l(9.562500), r12.y
          movc r12.y, r14.z, l(9.137500), r12.y
          movc r12.y, r14.w, l(63.025002), r12.y
          movc r12.y, r15.x, l(0.984300), r12.y
          movc r12.y, r15.y, l(0.984350), r12.y
          movc r12.y, r15.z, l(0.984330), r12.y
          movc r12.y, r15.w, l(0.984300), r12.y
          movc r12.y, r16.x, l(63.000000), r12.y
          movc r12.y, r16.y, l(3.975000), r12.y
          movc r12.y, r16.z, l(0.984250), r12.y
          movc r12.y, r16.w, l(15.156250), r12.y
          movc r12.y, r17.x, l(2.500000), r12.y
          movc r12.y, r17.y, l(1.050000), r12.y
          movc r12.y, r17.z, l(9.100000), r12.y
          movc r12.y, r17.w, l(23.750000), r12.y
          movc r12.y, r18.x, l(2.000000), r12.y
          movc r12.y, r18.y, l(7.000000), r12.y
          movc r12.y, r18.z, l(0), r12.y
          movc r12.y, r18.w, l(0.785000), r12.y
          movc r12.y, r19.x, l(53.750000), r12.y
          movc r12.y, r19.y, l(0), r12.y
          movc r12.y, r19.z, l(1.025000), r12.y
          movc r12.y, r19.w, l(14.000000), r12.y
          movc r12.y, r20.x, l(0), r12.y
          movc r12.y, r20.y, l(2.362500), r12.y
          movc r12.y, r20.z, l(0.988750), r12.y
          movc r12.y, r20.w, l(0.818750), r12.y
          movc r12.y, r21.x, l(0.900000), r12.y
          movc r12.y, r21.y, l(9.100000), r12.y
          movc r12.y, r21.z, l(8.862500), r12.y
          movc r12.y, r21.w, l(0), r12.y
          movc r12.y, r22.x, l(0.180000), r12.y
          movc r12.y, r22.y, l(1.187500), r12.y
          movc r12.y, r22.z, l(7.000000), r12.y
          movc r12.y, r22.w, l(9.030000), r12.y
          movc r12.y, r23.x, l(0.901500), r12.y
          movc r12.y, r23.y, l(0.300000), r12.y
          movc r12.y, r23.z, l(8.800000), r12.y
          movc r12.y, r23.w, l(0), r12.y
          movc r12.y, r24.x, l(2.375000), r12.y
          movc r12.y, r24.y, l(9.000000), r12.y
          movc r12.y, r24.z, l(1.000000), r12.y
          movc r12.y, r24.w, l(0.998750), r12.y
          movc r12.y, r25.x, l(0.090000), r12.y
          movc r12.y, r25.y, l(0.962500), r12.y
          movc r12.y, r25.z, l(1.020000), r12.y
          movc r12.y, r25.w, l(0.836250), r12.y
          movc r12.y, r26.x, l(0), r12.y
          movc r12.y, r26.y, l(99.000000), r12.y
          movc r12.y, r26.z, l(99.500000), r12.y
          movc r12.y, r26.w, l(1.000000), r12.y
          movc r12.y, r27.x, l(8.875000), r12.y
          movc r12.y, r27.y, l(0), r12.y
          movc r12.y, r27.z, l(1.800000), r12.y
          or r12.z, r27.w, r28.x
          movc r12.y, r12.z, l(0), r12.y
          movc r12.y, r28.y, l(9.000000), r12.y
          movc r12.y, r28.z, l(1000.000000), r12.y
          movc r12.y, r28.w, l(0.905000), r12.y
          movc r12.y, r29.x, l(987.500000), r12.y
          movc r12.y, r29.y, l(925.000000), r12.y
          movc r12.y, r29.z, l(0.185000), r12.y
          movc r12.y, r29.w, l(0), r12.y
          movc r12.y, r30.x, l(950.000000), r12.y
          movc r12.y, r30.y, l(1.825000), r12.y
          movc r12.y, r30.z, l(0.100000), r12.y
          movc r12.y, r30.w, l(0.300000), r12.y
          movc r12.xy, r31.zxzz, l(0.007143,0,0,0), r12.xyxx
          movc r12.y, r31.y, l(0.500000), r12.y
          movc r12.y, r31.z, l(2.050000), r12.y
          add r12.z, r12.y, l(1.000000)
          add r12.w, -r12.y, l(1.000000)
          lt r12.y, l(0.000000), r12.y
          mul r32.x, r9.y, r12.z
          div r32.y, r11.x, r12.w
          min r12.zw, r32.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          movc r11.xy, r12.yyyy, r12.zwzz, r11.yzyy
          if_z r8.x
            add r11.z, r12.x, l(-1.000000)
            mad r11.x, r11.x, r11.z, l(1.000000)
            div r11.x, r12.x, r11.x
          else 
            add r11.z, r12.x, l(-1.000000)
            mad r11.y, r11.y, r11.z, l(1.000000)
            div r11.y, r12.x, r11.y
            movc r11.x, r10.w, r11.y, r9.y
          endif 
          if_z r8.y
            mov r9.y, r11.w
            mov r10.w, r11.w
          else 
            mov_sat r11.x, r11.x
            movc r11.y, r13.x, l(0.425000), cb0[6].x
            movc r11.y, r13.y, l(0.276000), r11.y
            movc r11.y, r13.z, l(0.500000), r11.y
            movc r11.y, r13.w, l(0.284000), r11.y
            movc r11.y, r14.x, l(0.253000), r11.y
            movc r11.y, r14.y, l(0.276000), r11.y
            movc r11.y, r14.z, l(0.338000), r11.y
            movc r11.y, r14.w, l(0.255000), r11.y
            or r11.z, r15.y, r15.x
            or r11.z, r15.z, r11.z
            or r11.z, r15.w, r11.z
            movc r11.y, r11.z, l(0.254000), r11.y
            movc r11.y, r16.x, l(0.255000), r11.y
            movc r11.y, r16.y, l(0.510000), r11.y
            movc r11.y, r16.z, l(0.254000), r11.y
            movc r11.y, r16.w, l(0.375000), r11.y
            movc r11.y, r17.x, l(0.700000), r11.y
            movc r11.y, r17.y, l(0.750000), r11.y
            movc r11.y, r17.z, l(0.278000), r11.y
            movc r11.y, r17.w, l(0.450000), r11.y
            movc r11.y, r18.x, l(0.350000), r11.y
            movc r11.y, r18.y, l(0.286000), r11.y
            movc r11.y, r18.z, l(35.000000), r11.y
            movc r11.y, r18.w, l(0.625000), r11.y
            movc r11.y, r19.x, l(0.255000), r11.y
            movc r11.y, r19.y, l(0.450000), r11.y
            movc r11.y, r19.z, l(0.750000), r11.y
            movc r11.y, r19.w, l(0.266000), r11.y
            movc r11.y, r20.x, l(3.625000), r11.y
            movc r11.y, r20.y, l(0.700000), r11.y
            movc r11.y, r20.z, l(0.489400), r11.y
            movc r11.y, r20.w, l(1.000000), r11.y
            movc r11.y, r21.x, l(1.150000), r11.y
            movc r11.y, r21.y, l(0.278000), r11.y
            movc r11.y, r21.z, l(0.277000), r11.y
            movc r11.y, r21.w, l(0), r11.y
            movc r11.y, r22.x, l(0.780000), r11.y
            movc r11.y, r22.y, l(0.444000), r11.y
            movc r11.y, r22.z, l(0.286000), r11.y
            movc r11.y, r22.w, l(0.280000), r11.y
            movc r11.y, r23.x, l(0.300000), r11.y
            movc r11.y, r23.y, l(1.200000), r11.y
            movc r11.y, r23.z, l(0.277000), r11.y
            movc r11.y, r23.w, l(1.300000), r11.y
            movc r11.y, r24.x, l(0.625000), r11.y
            movc r11.y, r24.y, l(0.280000), r11.y
            movc r11.y, r24.z, l(0.460000), r11.y
            movc r11.y, r24.w, l(1.500000), r11.y
            movc r11.y, r25.x, l(2.000000), r11.y
            movc r11.y, r25.y, l(0.485000), r11.y
            movc r11.y, r25.z, l(0.489000), r11.y
            movc r11.y, r25.w, l(1.000000), r11.y
            movc r11.y, r26.x, l(13.870000), r11.y
            or r11.z, r26.z, r26.y
            or r11.z, r26.w, r11.z
            movc r11.y, r11.z, l(0.425000), r11.y
            movc r11.y, r27.x, l(0.519000), r11.y
            movc r11.y, r27.y, l(0.500000), r11.y
            movc r11.y, r27.z, l(0.350000), r11.y
            movc r11.y, r27.w, l(1.825000), r11.y
            movc r11.y, r28.x, l(1.953000), r11.y
            movc r11.y, r28.y, l(0.287000), r11.y
            movc r11.y, r28.z, l(0.250300), r11.y
            movc r11.y, r28.w, l(0.279000), r11.y
            movc r11.y, r29.x, l(0.250300), r11.y
            movc r11.y, r29.y, l(0.251000), r11.y
            movc r11.y, r29.z, l(1.035000), r11.y
            movc r11.y, r29.w, l(1.553000), r11.y
            movc r11.y, r30.x, l(0.251000), r11.y
            movc r11.y, r30.y, l(0.345000), r11.y
            movc r11.y, r30.z, l(0.430000), r11.y
            movc r11.y, r30.w, l(0.800000), r11.y
            movc r11.y, r31.x, l(13.300000), r11.y
            movc r11.y, r31.y, l(0.750000), r11.y
            movc r11.y, r31.z, l(0.350000), r11.y
            div r11.y, r11.y, cb0[3].z
            mul r11.y, r11.y, l(0.500000)
            ge r11.y, r11.y, r11.w
            and r11.y, r11.y, l(0x3f800000)
            add r11.z, -r11.w, r11.x
            mad r9.y, r11.y, r11.z, r11.w
            mul r10.w, r11.x, r11.y
          endif 
          mul r11.x, r11.w, l(0.400000)
          mad r11.y, r11.w, l(-0.800000), l(3.000000)
          mul r11.x, r11.x, r11.x
          mul r11.x, r11.x, r11.y
          lt r10.w, r11.x, r10.w
          and r10.w, r10.w, l(0x3f800000)
          max r9.y, r9.y, r10.w
          eq r9.y, r9.y, l(1.000000)
          movc r10.y, r9.y, l(0), r10.y
        endif 
        add r9.y, -r8.w, l(1.000000)
        movc r9.z, cb0[4].w, r9.y, r8.w
        mad r9.yz, -cb0[3].xxxx, l(0.000000, 0.000291, 0.000694, 0.000000), r9.xxzx
        sample_l_indexable(texture2d)(float,float,float,float) r9.y, r9.yzyy, t0.yxzw, s0, l(0.000000)
        mul r9.z, r1.z, r9.y
        min r9.z, r9.z, l(1.000000)
        add r10.w, -r9.y, l(1.000000)
        mad r11.xy, r9.yyyy, l(1.000000, -1.000000, 0.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
        movc r12.xy, r1.yyyy, r9.zzzz, r11.xyxx
        mul r13.x, r2.w, r12.x
        div r13.y, r12.y, r3.w
        min r11.zw, r13.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        add r12.z, -r12.y, l(1.000000)
        movc r11.zw, r1.yyyy, r12.xxxz, r11.zzzw
        movc r11.zw, r1.wwww, r11.zzzw, r12.xxxy
        mad r11.zw, r11.zzzw, r1.xxxx, r0.wwww
        ieq r9.z, r8.x, l(1)
        rcp r11.zw, r11.zzzw
        movc r11.w, r9.z, r11.w, r9.y
        movc_sat r11.z, r8.x, r11.w, r11.z
        itof r11.w, r8.y
        eq r12.xyzw, r11.wwww, l(2.000000, 3.000000, 4.000000, 5.000000)
        eq r13.xyzw, r11.wwww, l(6.000000, 7.000000, 8.000000, 9.000000)
        eq r14.xyzw, r11.wwww, l(10.000000, 11.000000, 12.000000, 13.000000)
        or r15.x, r14.z, r14.y
        eq r16.xyzw, r11.wwww, l(14.000000, 15.000000, 16.000000, 17.000000)
        eq r17.xyzw, r11.wwww, l(18.000000, 19.000000, 20.000000, 21.000000)
        eq r18.xyzw, r11.wwww, l(22.000000, 23.000000, 24.000000, 25.000000)
        eq r19.xyzw, r11.wwww, l(26.000000, 27.000000, 28.000000, 29.000000)
        or r15.y, r19.w, r19.z
        eq r20.xyzw, r11.wwww, l(30.000000, 31.000000, 32.000000, 33.000000)
        eq r21.xyzw, r11.wwww, l(34.000000, 35.000000, 36.000000, 37.000000)
        eq r22.xyzw, r11.wwww, l(38.000000, 39.000000, 40.000000, 41.000000)
        or r15.z, r22.y, r22.x
        eq r23.xyzw, r11.wwww, l(42.000000, 43.000000, 44.000000, 45.000000)
        eq r24.xyzw, r11.wwww, l(46.000000, 47.000000, 48.000000, 49.000000)
        eq r25.xyzw, r11.wwww, l(50.000000, 51.000000, 52.000000, 53.000000)
        eq r26.xyzw, r11.wwww, l(54.000000, 55.000000, 56.000000, 57.000000)
        eq r27.xyzw, r11.wwww, l(58.000000, 59.000000, 60.000000, 61.000000)
        eq r28.xyzw, r11.wwww, l(62.000000, 63.000000, 64.000000, 65.000000)
        eq r29.xyzw, r11.wwww, l(66.000000, 67.000000, 68.000000, 69.000000)
        eq r30.xyzw, r11.wwww, l(70.000000, 71.000000, 72.000000, 73.000000)
        eq r31.xyz, r11.wwww, l(74.000000, 75.000000, 76.000000, 0.000000)
        movc r11.w, r12.x, l(0.025000), r3.x
        movc r11.w, r12.y, l(0.007692), r11.w
        movc r11.w, r12.z, l(0.003846), r11.w
        movc r11.w, r12.w, l(0.011905), r11.w
        movc r11.w, r13.x, l(0.003205), r11.w
        movc r11.w, r13.y, l(0.006250), r11.w
        movc r11.w, r13.z, l(0.005952), r11.w
        movc r11.w, r13.w, l(0.000704), r11.w
        movc r11.w, r14.x, l(0.001250), r11.w
        movc r11.w, r15.x, l(0.000615), r11.w
        movc r11.w, r14.w, l(0.001000), r11.w
        movc r11.w, r16.x, l(0.000625), r11.w
        movc r11.w, r16.y, l(0.000769), r11.w
        movc r11.w, r16.z, l(0.005263), r11.w
        movc r11.w, r16.w, l(0.002083), r11.w
        movc r11.w, r17.x, l(0.008696), r11.w
        movc r11.w, r17.y, l(0.004167), r11.w
        movc r11.w, r17.z, l(0.002000), r11.w
        movc r11.w, r17.w, l(0.010417), r11.w
        movc r11.w, r18.x, l(0.010000), r11.w
        movc r11.w, r18.y, l(0.000083), r11.w
        movc r11.w, r18.z, l(0.000500), r11.w
        movc r11.w, r18.w, l(0.000357), r11.w
        movc r11.w, r19.x, l(0.019608), r11.w
        movc r11.w, r19.y, l(0.022472), r11.w
        movc r11.w, r15.y, l(0.004167), r11.w
        movc r11.w, r20.x, l(0.006250), r11.w
        movc r11.w, r20.y, l(0.013889), r11.w
        movc r11.w, r20.z, l(0.002000), r11.w
        movc r11.w, r20.w, l(0.001333), r11.w
        movc r11.w, r21.x, l(0.002273), r11.w
        movc r11.w, r21.y, l(0.003333), r11.w
        movc r11.w, r21.z, l(0.001190), r11.w
        movc r11.w, r21.w, l(12500000.000000), r11.w
        movc r11.w, r15.z, l(0.006250), r11.w
        movc r11.w, r22.z, l(0.001563), r11.w
        movc r11.w, r22.w, l(0.006667), r11.w
        movc r11.w, r23.x, l(0.007143), r11.w
        movc r11.w, r23.y, l(0.010000), r11.w
        movc r11.w, r23.z, l(0.006250), r11.w
        movc r11.w, r23.w, l(0.007143), r11.w
        movc r11.w, r24.x, l(0.013889), r11.w
        movc r11.w, r24.y, l(0.006250), r11.w
        movc r11.w, r24.z, l(0.010000), r11.w
        movc r11.w, r24.w, l(0.003333), r11.w
        movc r11.w, r25.x, l(0.007692), r11.w
        movc r11.w, r25.y, l(0.002000), r11.w
        movc r11.w, r25.z, l(0.001818), r11.w
        movc r11.w, r25.w, l(0.000526), r11.w
        movc r11.w, r26.x, l(0.002500), r11.w
        movc r11.w, r26.y, l(0.008333), r11.w
        movc r11.w, r26.z, l(0.005882), r11.w
        movc r11.w, r26.w, l(0.023810), r11.w
        movc r11.w, r27.x, l(0.004000), r11.w
        movc r11.w, r27.y, l(0.015625), r11.w
        movc r11.w, r27.z, l(0.013889), r11.w
        movc r11.w, r27.w, l(0.009091), r11.w
        movc r11.w, r28.x, l(0.023810), r11.w
        movc r11.w, r28.y, l(0.000694), r11.w
        movc r11.w, r28.z, l(0.002273), r11.w
        movc r11.w, r28.w, l(0.001250), r11.w
        movc r11.w, r29.x, l(0.002381), r11.w
        movc r11.w, r29.y, l(0.010000), r11.w
        movc r11.w, r29.z, l(0.007812), r11.w
        movc r11.w, r29.w, l(0.007407), r11.w
        movc r11.w, r30.x, l(0.021978), r11.w
        movc r11.w, r30.y, l(0.012346), r11.w
        movc r11.w, r30.z, l(0.020000), r11.w
        movc r11.w, r30.w, l(0.008333), r11.w
        movc r11.w, r31.x, l(0.002000), r11.w
        movc r11.w, r31.y, l(0.001111), r11.w
        movc r11.w, r31.z, l(0.007143), r11.w
        movc r15.x, r12.x, l(1.125000), cb0[6].z
        movc r15.x, r12.y, l(9.150000), r15.x
        movc r15.x, r12.z, l(7.150000), r15.x
        movc r15.x, r12.w, l(0.872500), r15.x
        movc r15.x, r13.x, l(97.500000), r15.x
        movc r15.x, r13.y, l(9.562500), r15.x
        movc r15.x, r13.z, l(9.137500), r15.x
        movc r15.x, r13.w, l(63.025002), r15.x
        movc r15.x, r14.x, l(0.984300), r15.x
        movc r15.x, r14.y, l(0.984350), r15.x
        movc r15.x, r14.z, l(0.984330), r15.x
        movc r15.x, r14.w, l(0.984300), r15.x
        movc r15.x, r16.x, l(63.000000), r15.x
        movc r15.x, r16.y, l(3.975000), r15.x
        movc r15.x, r16.z, l(0.984250), r15.x
        movc r15.x, r16.w, l(15.156250), r15.x
        movc r15.x, r17.x, l(2.500000), r15.x
        movc r15.x, r17.y, l(1.050000), r15.x
        movc r15.x, r17.z, l(9.100000), r15.x
        movc r15.x, r17.w, l(23.750000), r15.x
        movc r15.x, r18.x, l(2.000000), r15.x
        movc r15.x, r18.y, l(7.000000), r15.x
        movc r15.x, r18.z, l(0), r15.x
        movc r15.x, r18.w, l(0.785000), r15.x
        movc r15.x, r19.x, l(53.750000), r15.x
        movc r15.x, r19.y, l(0), r15.x
        movc r15.x, r19.z, l(1.025000), r15.x
        movc r15.x, r19.w, l(14.000000), r15.x
        movc r15.x, r20.x, l(0), r15.x
        movc r15.x, r20.y, l(2.362500), r15.x
        movc r15.x, r20.z, l(0.988750), r15.x
        movc r15.x, r20.w, l(0.818750), r15.x
        movc r15.x, r21.x, l(0.900000), r15.x
        movc r15.x, r21.y, l(9.100000), r15.x
        movc r15.x, r21.z, l(8.862500), r15.x
        movc r15.x, r21.w, l(0), r15.x
        movc r15.x, r22.x, l(0.180000), r15.x
        movc r15.x, r22.y, l(1.187500), r15.x
        movc r15.x, r22.z, l(7.000000), r15.x
        movc r15.x, r22.w, l(9.030000), r15.x
        movc r15.x, r23.x, l(0.901500), r15.x
        movc r15.x, r23.y, l(0.300000), r15.x
        movc r15.x, r23.z, l(8.800000), r15.x
        movc r15.x, r23.w, l(0), r15.x
        movc r15.x, r24.x, l(2.375000), r15.x
        movc r15.x, r24.y, l(9.000000), r15.x
        movc r15.x, r24.z, l(1.000000), r15.x
        movc r15.x, r24.w, l(0.998750), r15.x
        movc r15.x, r25.x, l(0.090000), r15.x
        movc r15.x, r25.y, l(0.962500), r15.x
        movc r15.x, r25.z, l(1.020000), r15.x
        movc r15.x, r25.w, l(0.836250), r15.x
        movc r15.x, r26.x, l(0), r15.x
        movc r15.x, r26.y, l(99.000000), r15.x
        movc r15.x, r26.z, l(99.500000), r15.x
        movc r15.x, r26.w, l(1.000000), r15.x
        movc r15.x, r27.x, l(8.875000), r15.x
        movc r15.x, r27.y, l(0), r15.x
        movc r15.x, r27.z, l(1.800000), r15.x
        or r15.y, r27.w, r28.x
        movc r15.x, r15.y, l(0), r15.x
        movc r15.x, r28.y, l(9.000000), r15.x
        movc r15.x, r28.z, l(1000.000000), r15.x
        movc r15.x, r28.w, l(0.905000), r15.x
        movc r15.x, r29.x, l(987.500000), r15.x
        movc r15.x, r29.y, l(925.000000), r15.x
        movc r15.x, r29.z, l(0.185000), r15.x
        movc r15.x, r29.w, l(0), r15.x
        movc r15.x, r30.x, l(950.000000), r15.x
        movc r15.x, r30.y, l(1.825000), r15.x
        movc r15.x, r30.z, l(0.100000), r15.x
        movc r15.x, r30.w, l(0.300000), r15.x
        movc r15.x, r31.x, l(0), r15.x
        movc r15.x, r31.y, l(0.500000), r15.x
        movc r15.x, r31.z, l(2.050000), r15.x
        add r15.y, r15.x, l(1.000000)
        add r15.z, -r15.x, l(1.000000)
        lt r15.x, l(0.000000), r15.x
        mul r32.x, r9.y, r15.y
        div r32.y, r10.w, r15.z
        min r15.yz, r32.xxyx, l(0.000000, 1.000000, 1.000000, 0.000000)
        movc r11.xy, r15.xxxx, r15.yzyy, r11.xyxx
        if_z r8.x
          add r10.w, r11.w, l(-1.000000)
          mad r10.w, r11.x, r10.w, l(1.000000)
          div r10.w, r11.w, r10.w
        else 
          add r11.x, r11.w, l(-1.000000)
          mad r11.x, r11.y, r11.x, l(1.000000)
          div r11.x, r11.w, r11.x
          movc r10.w, r9.z, r11.x, r9.y
        endif 
        if_z r8.y
          mov r9.yz, r11.zzzz
        else 
          mov_sat r10.w, r10.w
          movc r11.x, r12.x, l(0.425000), cb0[6].x
          movc r11.x, r12.y, l(0.276000), r11.x
          movc r11.x, r12.z, l(0.500000), r11.x
          movc r11.x, r12.w, l(0.284000), r11.x
          movc r11.x, r13.x, l(0.253000), r11.x
          movc r11.x, r13.y, l(0.276000), r11.x
          movc r11.x, r13.z, l(0.338000), r11.x
          movc r11.x, r13.w, l(0.255000), r11.x
          or r11.y, r14.y, r14.x
          or r11.y, r14.z, r11.y
          or r11.y, r14.w, r11.y
          movc r11.x, r11.y, l(0.254000), r11.x
          movc r11.x, r16.x, l(0.255000), r11.x
          movc r11.x, r16.y, l(0.510000), r11.x
          movc r11.x, r16.z, l(0.254000), r11.x
          movc r11.x, r16.w, l(0.375000), r11.x
          movc r11.x, r17.x, l(0.700000), r11.x
          movc r11.x, r17.y, l(0.750000), r11.x
          movc r11.x, r17.z, l(0.278000), r11.x
          movc r11.x, r17.w, l(0.450000), r11.x
          movc r11.x, r18.x, l(0.350000), r11.x
          movc r11.x, r18.y, l(0.286000), r11.x
          movc r11.x, r18.z, l(35.000000), r11.x
          movc r11.x, r18.w, l(0.625000), r11.x
          movc r11.x, r19.x, l(0.255000), r11.x
          movc r11.x, r19.y, l(0.450000), r11.x
          movc r11.x, r19.z, l(0.750000), r11.x
          movc r11.x, r19.w, l(0.266000), r11.x
          movc r11.x, r20.x, l(3.625000), r11.x
          movc r11.x, r20.y, l(0.700000), r11.x
          movc r11.x, r20.z, l(0.489400), r11.x
          movc r11.x, r20.w, l(1.000000), r11.x
          movc r11.x, r21.x, l(1.150000), r11.x
          movc r11.x, r21.y, l(0.278000), r11.x
          movc r11.x, r21.z, l(0.277000), r11.x
          movc r11.x, r21.w, l(0), r11.x
          movc r11.x, r22.x, l(0.780000), r11.x
          movc r11.x, r22.y, l(0.444000), r11.x
          movc r11.x, r22.z, l(0.286000), r11.x
          movc r11.x, r22.w, l(0.280000), r11.x
          movc r11.x, r23.x, l(0.300000), r11.x
          movc r11.x, r23.y, l(1.200000), r11.x
          movc r11.x, r23.z, l(0.277000), r11.x
          movc r11.x, r23.w, l(1.300000), r11.x
          movc r11.x, r24.x, l(0.625000), r11.x
          movc r11.x, r24.y, l(0.280000), r11.x
          movc r11.x, r24.z, l(0.460000), r11.x
          movc r11.x, r24.w, l(1.500000), r11.x
          movc r11.x, r25.x, l(2.000000), r11.x
          movc r11.x, r25.y, l(0.485000), r11.x
          movc r11.x, r25.z, l(0.489000), r11.x
          movc r11.x, r25.w, l(1.000000), r11.x
          movc r11.x, r26.x, l(13.870000), r11.x
          or r11.y, r26.z, r26.y
          or r11.y, r26.w, r11.y
          movc r11.x, r11.y, l(0.425000), r11.x
          movc r11.x, r27.x, l(0.519000), r11.x
          movc r11.x, r27.y, l(0.500000), r11.x
          movc r11.x, r27.z, l(0.350000), r11.x
          movc r11.x, r27.w, l(1.825000), r11.x
          movc r11.x, r28.x, l(1.953000), r11.x
          movc r11.x, r28.y, l(0.287000), r11.x
          movc r11.x, r28.z, l(0.250300), r11.x
          movc r11.x, r28.w, l(0.279000), r11.x
          movc r11.x, r29.x, l(0.250300), r11.x
          movc r11.x, r29.y, l(0.251000), r11.x
          movc r11.x, r29.z, l(1.035000), r11.x
          movc r11.x, r29.w, l(1.553000), r11.x
          movc r11.x, r30.x, l(0.251000), r11.x
          movc r11.x, r30.y, l(0.345000), r11.x
          movc r11.x, r30.z, l(0.430000), r11.x
          movc r11.x, r30.w, l(0.800000), r11.x
          movc r11.x, r31.x, l(13.300000), r11.x
          movc r11.x, r31.y, l(0.750000), r11.x
          movc r11.x, r31.z, l(0.350000), r11.x
          div r11.x, r11.x, cb0[3].z
          mul r11.x, r11.x, l(0.500000)
          ge r11.x, r11.x, r11.z
          and r11.x, r11.x, l(0x3f800000)
          add r11.y, -r11.z, r10.w
          mad r9.y, r11.x, r11.y, r11.z
          mul r9.z, r10.w, r11.x
        endif 
        mul r10.w, r11.z, l(0.400000)
        mad r11.x, r11.z, l(-0.800000), l(3.000000)
        mul r10.w, r10.w, r10.w
        mul r10.w, r10.w, r11.x
        lt r9.z, r10.w, r9.z
        and r9.z, r9.z, l(0x3f800000)
        max r9.z, r9.y, r9.z
        movc r9.y, r10.z, r9.z, r9.y
        div r9.y, r10.y, r9.y
        add r9.y, -r9.y, l(1.000000)
        lt r9.y, r9.y, l(-0.000000)
        movc r8.z, r9.y, l(1.000000), r8.z
        iadd r9.w, r9.w, l(1)
        ilt r10.x, r9.w, r5.y
      endloop 
      mov r0.z, r8.z
      mov r6.w, r9.x
      mov r2.z, r8.w
      ilt r3.z, r7.y, r5.x
      mov r3.y, r7.y
    endloop 
  else 
    mov r0.z, l(0)
  endif 
  mad r0.w, -cb0[1].w, l(2.000000), l(1.000000)
  mul r0.w, r0.w, l(1000.000000)
  sample_indexable(texture2d)(float,float,float,float) r1.x, l(0.000000, 0.250000, 0.000000, 0.000000), t16.zxyw, s2
  add r0.z, r0.z, -r1.x
  div r0.w, -cb0[16].z, r0.w
  mul r0.w, r0.w, l(1.442695)
  exp r0.w, r0.w
  add r0.w, -r0.w, l(1.000000)
  mad r4.x, r0.z, r0.w, r1.x
endif 
and r0.xy, r0.xyxx, r2.xyxx
if_nz r0.x
  mad r0.x, -cb0[1].w, l(2.000000), l(1.000000)
  mul r0.x, r0.x, l(1000.000000)
  sample_indexable(texture2d)(float,float,float,float) r0.z, l(0.000000, 0.416000, 0.000000, 0.000000), t16.xyzw, s2
  div r0.x, -cb0[16].z, r0.x
  mul r0.x, r0.x, l(1.442695)
  exp r0.x, r0.x
  add r0.x, -r0.x, l(1.000000)
  mad r4.x, -r0.z, r0.x, r0.z
endif 
if_nz r0.y
  sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t18.xyzw, s2, l(11.000000)
  mul r0.x, r0.x, cb0[13].x
  sample_indexable(texture2d)(float,float,float,float) r0.y, l(0.000000, 0.583000, 0.000000, 0.000000), t16.xzyw, s2
  mad r0.x, r0.x, l(25.000000), -r0.y
  mul r0.z, cb0[16].z, l(-0.002286)
  exp r0.z, r0.z
  add r0.z, -r0.z, l(1.000000)
  mad r4.x, r0.x, r0.z, r0.y
endif 
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t2.xyzw, s2
dp3 r4.w, l(0.333000, 0.333000, 0.333000, 0.000000), r0.xyzx
max r0.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min o0.xzw, r0.xxzw, l(1.000000, 0.000000, 1.000000, 1.000000)
mov o0.y, r0.y
ret 
// Approximately 1143 instruction slots used
