//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Strength;                    // Offset:    0 Size:     4
//   float Offset;                      // Offset:    4 Size:     4
//   float Clamp;                       // Offset:    8 Size:     4
//   bool UseMask;                      // Offset:   12 Size:     4
//   int Coefficient;                   // Offset:   16 Size:     4
//   bool Preview;                      // Offset:   20 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __srgbV__ReShade__BackBufferTex    texture  float4          2d             t1      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t1.xyzw, s1
if_nz cb0[0].w
  mad r1.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r0.w, r1.xyxx, r1.xyxx
  sqrt r0.w, r0.w
  add r0.w, -r0.w, l(1.000000)
  min r1.x, r0.w, l(0.500000)
  max r0.w, r0.w, l(0.500000)
  mad r1.x, r1.x, r1.x, r0.w
  mad r0.w, -r0.w, r0.w, r0.w
  add r0.w, r0.w, r1.x
  mad r0.w, r0.w, l(2.000000), l(-1.500000)
  mul r0.w, r0.w, cb0[0].x
  ge r1.x, l(0.000000), r0.w
  if_nz r1.x
    mov o0.xyz, r0.xyzx
    ret 
  endif 
else 
  mov r0.w, cb0[0].x
endif 
mad r1.xy, cb0[0].yyyy, l(0.000694, 0.000291, 0.000000, 0.000000), v1.yxyy
mad r2.xy, -cb0[0].yyyy, l(0.000694, 0.000291, 0.000000, 0.000000), v1.yxyy
movc r3.xyz, cb0[1].xxxx, l(0.299000,0.587000,0.114000,0), l(0.212600,0.715200,0.072200,0)
mov r1.zw, v1.xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r1.zxzz, t1.xyzw, s1
dp3 r1.x, r4.xyzx, r3.xyzx
mov r2.zw, v1.xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.zxzz, t1.xyzw, s1
dp3 r1.z, r4.xyzx, r3.xyzx
add r1.x, r1.z, r1.x
sample_indexable(texture2d)(float,float,float,float) r1.yzw, r1.ywyy, t1.wxyz, s1
dp3 r1.y, r1.yzwy, r3.xyzx
add r1.x, r1.y, r1.x
sample_indexable(texture2d)(float,float,float,float) r1.yzw, r2.ywyy, t1.wxyz, s1
dp3 r1.y, r1.yzwy, r3.xyzx
add r1.x, r1.y, r1.x
dp3 r1.y, r0.xyzx, r3.xyzx
mad r1.x, r1.x, l(0.250000), -r1.y
mul r1.x, r1.x, l(0.500000)
mad r0.w, r0.w, -r1.x, l(0.500000)
ne r1.x, cb0[0].z, l(1.000000)
add r1.y, -cb0[0].z, l(1.000000)
max r1.y, r0.w, r1.y
min r1.y, r1.y, cb0[0].z
movc r0.w, r1.x, r1.y, r0.w
if_nz cb0[1].y
  log r1.x, |r0.w|
  mul r1.x, r1.x, l(2.200000)
  exp o0.xyz, r1.xxxx
  ret 
else 
  min r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  min r1.w, r0.w, l(0.500000)
  max r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  max r0.w, r0.w, l(0.500000)
  mad r1.xyz, r1.xyzx, r1.wwww, r0.xyzx
  mad r0.xyz, -r0.xyzx, r0.wwww, r0.wwww
  add r0.xyz, r0.xyzx, r1.xyzx
  mad o0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.500000, -1.500000, -1.500000, 0.000000)
  ret 
endif 
ret 
// Approximately 63 instruction slots used
