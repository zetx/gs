//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int gGaussEffect;                  // Offset:    0 Size:     4
//   float gGaussStrength;              // Offset:    4 Size:     4
//   bool gAddBloom;                    // Offset:    8 Size:     4
//   float gBloomStrength;              // Offset:   12 Size:     4
//   float gBloomIntensity;             // Offset:   16 Size:     4 [unused]
//   int gGaussBloomWarmth;             // Offset:   20 Size:     4
//   int gN_PASSES;                     // Offset:   24 Size:     4 [unused]
//   float gBloomHW;                    // Offset:   28 Size:     4 [unused]
//   float gBloomVW;                    // Offset:   32 Size:     4 [unused]
//   float gBloomSW;                    // Offset:   36 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__origframeTex2D               texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t4.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
if_nz cb0[0].x
  ieq r2.x, cb0[0].x, l(1)
  if_nz r2.x
    add r2.xyzw, -r0.xyzw, r1.xyzw
    mad r0.xyzw, cb0[0].yyyy, r2.xyzw, r0.xyzw
  else 
    ieq r2.x, cb0[0].x, l(2)
    if_nz r2.x
      add r2.xyz, r0.xyzx, -r1.xyzx
      mad r3.xyz, cb0[0].yyyy, l(0.212600, 0.715200, 0.072200, 0.000000), l(0.200000, 0.200000, 0.200000, 0.000000)
      dp3 r2.x, r2.xyzx, r3.xyzx
      max r2.x, r2.x, l(-0.035000)
      min r2.x, r2.x, l(0.035000)
      add r0.xyzw, r0.xyzw, r2.xxxx
    else 
      mad r2.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r0.xyzw
      mad r2.xyzw, cb0[0].yyyy, r2.xyzw, r0.xyzw
      ieq r3.x, cb0[1].y, l(1)
      mul r4.xyzw, r1.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000)
      mad r4.xyzw, r0.xyzw, l(1.800000, 1.800000, 1.800000, 1.800000), r4.xyzw
      add r4.xyzw, r4.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
      max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r4.xyzw, -r0.xyzw, r4.xyzw
      mad r4.xyzw, cb0[0].yyyy, r4.xyzw, r0.xyzw
      add r5.xyzw, -r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      add r6.xyzw, -r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      mad r5.xyzw, -r5.xyzw, r6.xyzw, -r0.xyzw
      add r5.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      mad r5.xyzw, cb0[0].yyyy, r5.xyzw, r0.xyzw
      movc r3.xyzw, r3.xxxx, r4.xyzw, r5.xyzw
      movc r2.xyzw, cb0[1].yyyy, r3.xyzw, r2.xyzw
      ieq r3.xy, cb0[0].xxxx, l(3, 4, 0, 0)
      add r4.xyz, r0.xyzx, -r1.xyzx
      mad r5.xyz, cb0[0].yyyy, l(0.212600, 0.715200, 0.072200, 0.000000), l(0.200000, 0.200000, 0.200000, 0.000000)
      dp3 r3.z, r4.xyzx, r5.xyzx
      min r4.xyzw, r0.xyzw, r3.zzzz
      mad r4.xyzw, -r4.xyzw, l(3.000000, 3.000000, 3.000000, 3.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
      movc r4.xyzw, r3.yyyy, r4.xyzw, r1.xyzw
      movc r0.xyzw, r3.xxxx, r2.xyzw, r4.xyzw
    endif 
  endif 
endif 
mad r2.xyzw, r1.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000), -r0.xyzw
add r3.xyzw, r0.xyzw, r0.xyzw
mad r2.xyzw, cb0[0].wwww, r2.xyzw, r3.xyzw
mul r2.xyzw, r2.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
ieq r4.x, cb0[1].y, l(1)
mul r5.xyzw, r1.xyzw, l(5.000000, 5.000000, 5.000000, 5.000000)
mad r5.xyzw, r0.xyzw, l(1.800000, 1.800000, 1.800000, 1.800000), r5.xyzw
add r5.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
max r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
add r5.xyzw, -r0.xyzw, r5.xyzw
mad r5.xyzw, cb0[0].wwww, r5.xyzw, r3.xyzw
mul r5.xyzw, r5.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
add r6.xyzw, -r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r1.xyzw, -r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r1.xyzw, -r6.xyzw, r1.xyzw, -r0.xyzw
add r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r1.xyzw, cb0[0].wwww, r1.xyzw, r3.xyzw
mul r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
movc r1.xyzw, r4.xxxx, r5.xyzw, r1.xyzw
movc r1.xyzw, cb0[1].yyyy, r1.xyzw, r2.xyzw
movc o0.xyzw, cb0[0].zzzz, r1.xyzw, r0.xyzw
ret 
// Approximately 66 instruction slots used
